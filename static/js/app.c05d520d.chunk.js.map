{"version":3,"sources":["components/CustomButton.tsx","contexts/AppContext.tsx","colors/Colors.ts","gradebook/GradeUtil.ts","screens/Login.tsx","components/Assignment.tsx","theme/LightTheme.ts","screens/CourseDetails.tsx","components/Course.tsx","screens/Courses.tsx","contexts/GradeContext.tsx","screens/Grades.tsx","screens/Profile.tsx","components/Document.tsx","screens/Documents.tsx","navigation/BottomNavigation.tsx","App.tsx"],"names":["styles","StyleSheet","create","buttonText","fontSize","textAlign","CustomButton","onPress","text","backgroundColor","textColor","fontFamily","containerStyle","TouchableOpacity","style","View","Text","color","AppContext","React","createContext","Colors","GradeUtil","name","includes","substring","lastIndexOf","trim","gradebook","marks","gpa","courses","Map","reportingPeriod","current","index","reportingPeriods","available","map","p","course","set","title","period","findIndex","c","teacher","staff","points","total","value","NaN","assignments","categories","get","weightedCategories","category","type","weight","parseFloat","standard","assignment","score","parsePoints","a","status","notes","modified","date","due","start","push","this","calculatePoints","Promise","resolve","numOfCourses","values","isNaN","roundTo","regex","match","split","num","places","multiplicator","Math","pow","toFixed","round","newMarks","filter","assignmentName","find","length","some","indentifier","unshift","Date","m","mark","calculateLetterGrade","Login","navigation","useNavigation","useContext","username","password","setUsername","setPassword","setClient","setMarks","useState","isLoading","setIsLoading","isChecked","setToggleCheckBox","showAlert","setShowAlert","undefined","errorMessage","setErrorMessage","open","setOpen","districts","setDistricts","setValue","items","setItems","alert","message","Platform","OS","async","getValueFor","i","StudentVue","findDistricts","res","district","d","sort","b","nameA","toUpperCase","nameB","label","fetchDistricts","LinearGradient","colors","flex","SafeAreaView","alignItems","welcome","KeyboardAvoidingView","container","behavior","TextInput","defaultValue","onChangeText","u","placeholder","input","secureTextEntry","searchable","maxHeight","dropdown","textStyle","dropdown_text","searchPlaceholder","dropdown_container","listMode","tickIconStyle","dropdown_tick","listItemLabelStyle","dropdown_item","searchContainerStyle","dropdown_search_container","searchTextInputStyle","dropdown_search_text","checkbox_container","BouncyCheckbox","size","fillColor","unfillColor","disableText","iconStyle","borderColor","disableBuiltInState","save_text","login","parentVueUrl","client","console","log","convertGradebook","save","navigate","onLogin","button_container","ActivityIndicator","animating","position","bottom","credit","FontAwesome","Button","underlayColor","activeOpacity","appUrl","Linking","canOpenURL","openURL","err","openInstagram","show","showProgress","closeOnTouchOutside","closeOnHardwareBackPress","showCancelButton","showConfirmButton","confirmText","confirmButtonColor","confirmButtonTextStyle","onConfirmPressed","alignSelf","justifyContent","marginTop","flexDirection","marginBottom","width","height","padding","borderWidth","borderRadius","paddingHorizontal","paddingVertical","marginLeft","borderBottomWidth","loading","margin","key","SecureStore","marginRight","elevation","shadowOffset","shadowOpacity","shadowRadius","horizontal_container","borderTopColor","borderTopWidth","assignment_info_container","marginHorizontal","lineHeight","paddingTop","input_container","dash","textAlignVertical","dropdown_text_name","dropdown_text_value","AssignmentComponent","props","isDropdown","setIsDropdown","totalWeight","Array","from","reduce","updatePoints","getWidth","n","max","toString","numberOfLines","toLocaleDateString","keyboardType","autoCompleteType","MaterialIcons","deleteAssignment","LightTheme","dark","primary","background","card","border","notification","modal_title","modal","modal_view","course_details","flexWrap","course_details_container","left","right","top","CourseDetails","courseName","route","params","isModalVisible","setModalVisible","next","setCategory","setCategories","setAssignmentName","setPoints","setTotal","useEffect","toggleModal","pointerEvents","goBack","parseCourseName","showMessage","icon","FlatList","data","renderItem","item","Assignment","keyExtractor","isVisible","coverScreen","onBackdropPress","t","addAssignment","period_number","course_info_container","letter_grade","CourseComponent","calculateMarkColor","row_container","gpa_container","refresh_button_container","Courses","periods","setPeriods","isSubscribed","getGradebook","refreshMarks","entries","Course","GradeContext","Stack","createStackNavigator","StackNavigator","setCourse","Provider","courseHeader","Navigator","Screen","component","options","headerShown","suffix","j","k","header","avatar","description_container","description_part_container","description_part_text","property_container","property_text","Profile","studentInfo","setStudentInfo","Image","source","uri","photo","student","grade","parseInt","birthDate","Feather","phone","email","address","currentSchool","doc_info_container","info_container","DocumentComponent","title_container","Documents","documents","setDocuments","base64toBlob","base64","sliceSize","byteCharacters","window","atob","byteArrays","offset","slice","byteNumbers","charCodeAt","Uint8Array","Blob","document","file","fileName","comment","replace","filePath","FileSystem","encoding","Sharing","require","saveAs","downloadDocument","Document","documentGu","Tab","createBottomTabNavigator","EmptyComponent","App","screenOptions","tabBarShowLabel","tabBarStyle","Grades","tabBarIcon","tabInfo","focused","Ionicons","tabBarButton","setGradebook","user","useFonts","Inter_100Thin","Inter_200ExtraLight","Inter_300Light","Inter_400Regular","Inter_500Medium","Inter_600SemiBold","Inter_700Bold","Inter_800ExtraBold","Inter_900Black","Montserrat_100Thin","Montserrat_200ExtraLight","Montserrat_300Light","Montserrat_400Regular","Montserrat_500Medium","Montserrat_600SemiBold","Montserrat_700Bold","Montserrat_800ExtraBold","Montserrat_900Black","Montserrat_100Thin_Italic","Montserrat_200ExtraLight_Italic","Montserrat_300Light_Italic","Montserrat_400Regular_Italic","Montserrat_500Medium_Italic","Montserrat_600SemiBold_Italic","Montserrat_700Bold_Italic","Montserrat_800ExtraBold_Italic","Montserrat_900Black_Italic","NavigationContainer","theme","BottomNavigation"],"mappings":"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","file":"static/js/app.c05d520d.chunk.js","sourcesContent":["import React from 'react'\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native'\n\ntype Props = {\n  onPress: any\n  text: string\n  backgroundColor: string\n  textColor: string\n  fontFamily: string\n  containerStyle: any\n}\n\nconst CustomButton: React.FC<Props> = ({\n  onPress,\n  text,\n  backgroundColor,\n  textColor,\n  fontFamily,\n  containerStyle\n}: Props) => {\n  return (\n    <TouchableOpacity\n      onPress={onPress}\n      style={[containerStyle, { backgroundColor: backgroundColor }]}\n    >\n      <View>\n        <Text\n          style={[\n            styles.buttonText,\n            { color: textColor, fontFamily: fontFamily }\n          ]}\n        >\n          {text}\n        </Text>\n      </View>\n    </TouchableOpacity>\n  )\n}\n\nconst styles = StyleSheet.create({\n  buttonText: {\n    fontSize: 20,\n    textAlign: 'center'\n  }\n})\n\nexport default CustomButton\n","import React from 'react'\nimport { User } from '../interfaces/User'\n\nconst AppContext = React.createContext<User>(null)\n\nexport default AppContext\n","export const Colors = {\n  primary: '#FEF156',\n  secondary: '#AEAC99',\n  accent: '#00F1EE',\n  middle_blue_green: '#83C5BE',\n  dark_middle_blue_green: '#298980',\n  alice_blue: '#EDF6F9',\n  onyx_gray: '#454545',\n  corn_silk_white: '#FEFAE0',\n  white: '#FFFFFF',\n  black: '#001219',\n  red: '#A30800',\n  off_white: '#F5F5F5',\n  light_gray: '#E4E4E4',\n  navy: '#000080'\n}\n","import { Gradebook } from 'studentvue'\nimport { Colors } from '../colors/Colors'\nimport { Assignment, Category, Course, Marks } from '../interfaces/Gradebook'\n\nexport default class GradeUtil {\n  static parseCourseName(name: string) {\n    if (!name.includes('(')) return name\n    return name.substring(0, name.lastIndexOf('(')).trim()\n  }\n\n  static convertGradebook(gradebook: Gradebook) {\n    let marks: Marks = {\n      gpa: 0,\n      courses: new Map<string, Course>(),\n      reportingPeriod: {\n        name: gradebook.reportingPeriod.current.name,\n        index: gradebook.reportingPeriod.current.index\n      },\n      reportingPeriods: gradebook.reportingPeriod.available.map((p) => {\n        return { name: p.name, index: p.index }\n      })\n    }\n    for (const course of gradebook.courses) {\n      marks.courses.set(course.title, {\n        name: course.title,\n        period:\n          gradebook.courses.findIndex((c) => c.title === course.title) + 1,\n        teacher: course.staff.name,\n        points: 0,\n        total: 0,\n        value: NaN,\n        assignments: [],\n        categories: new Map<string, Category>()\n      })\n      const c = marks.courses.get(course.title)\n      for (const category of course.marks[0].weightedCategories) {\n        c.categories.set(category.type, {\n          name: category.type,\n          points: 0,\n          total: 0,\n          value: NaN,\n          weight: parseFloat(category.weight.standard)\n        })\n      }\n      for (const assignment of course.marks[0].assignments) {\n        const value = assignment.score.value\n        const points = this.parsePoints(assignment.points)\n        const a: Assignment = {\n          name: assignment.name,\n          category: assignment.type,\n          status:\n            value != 'Not Graded' && value != 'Not Due' ? 'Graded' : value,\n          notes: assignment.notes,\n          points: points[0],\n          total: points[1],\n          modified: false,\n          date: {\n            due: assignment.date.due,\n            start: assignment.date.start\n          }\n        }\n        c.assignments.push(a)\n      }\n    }\n    marks = this.calculatePoints(marks)\n    return new Promise((resolve) => {\n      resolve(marks)\n    })\n  }\n\n  static calculatePoints(marks: Marks) {\n    marks.gpa = 0\n    let numOfCourses = 0\n    for (const course of marks.courses.values()) {\n      ;(course.points = 0), (course.total = 0), (course.value = NaN)\n      for (const category of course.categories.values()) {\n        ;(category.points = 0), (category.total = 0), (category.value = NaN)\n      }\n      for (const assignment of course.assignments) {\n        const category = course.categories.get(assignment.category)\n        if (!isNaN(assignment.points) && !isNaN(assignment.total)) {\n          category.points += assignment.points\n          category.total += assignment.total\n          category.value = category.points / category.total\n        }\n      }\n      for (const category of course.categories.values()) {\n        if (!isNaN(category.value)) {\n          course.points += category.value * category.weight\n          course.total += category.weight\n        }\n      }\n      course.value = this.roundTo((course.points / course.total) * 100, 2)\n      if (!isNaN(course.value)) {\n        if (course.value >= 89.5) {\n          marks.gpa += 4\n        } else if (course.value >= 79.5) {\n          marks.gpa += 3\n        } else if (course.value >= 69.5) {\n          marks.gpa += 2\n        } else if (course.value >= 59.5) {\n          marks.gpa += 1\n        }\n        numOfCourses++\n      }\n    }\n    marks.gpa = this.roundTo(marks.gpa / numOfCourses, 2)\n    return marks\n  }\n\n  static parsePoints(points: string) {\n    const regex = /^(\\d+\\.?\\d*|\\.\\d+) \\/ (\\d+\\.?\\d*|\\.\\d+)$/\n    if (points.match(regex)) {\n      const p = points.split(regex)\n      return [parseFloat(p[1]), parseFloat(p[2])]\n    } else {\n      return [NaN, parseFloat(points)]\n    }\n  }\n\n  static roundTo(num: number, places: number) {\n    const multiplicator = Math.pow(10, places)\n    num = parseFloat((num * multiplicator).toFixed(11))\n    const test = Math.round(num) / multiplicator\n    return +test.toFixed(places)\n  }\n\n  static deleteAssignment(marks: Marks, course: string, assignment: string) {\n    const newMarks = Object.assign({}, marks)\n    newMarks.courses.get(course).assignments = newMarks.courses\n      .get(course)\n      .assignments.filter((a) => a.name !== assignment)\n    return GradeUtil.calculatePoints(newMarks)\n  }\n\n  static updatePoints(\n    marks: Marks,\n    course: string,\n    assignmentName: string,\n    points: number,\n    type: string\n  ) {\n    const newMarks = Object.assign({}, marks)\n    const assignment = newMarks.courses\n      .get(course)\n      .assignments.find((a) => a.name === assignmentName)\n    if (type === 'earned') {\n      assignment.points = points\n    } else if (type === 'total') {\n      assignment.total = points\n    }\n    assignment.modified = true\n    return GradeUtil.calculatePoints(newMarks)\n  }\n\n  static addAssignment(\n    marks: Marks,\n    course: Course,\n    assignment: string,\n    category: string,\n    points: number,\n    total: number\n  ) {\n    let name = assignment.length === 0 ? 'Assignment' : assignment\n    if (course.assignments.some((a) => a.name === name)) {\n      let indentifier = 2\n      while (course.assignments.some((a) => a.name === name + indentifier)) {\n        indentifier++\n      }\n      name = name + indentifier\n    }\n    course.assignments.unshift({\n      name: name,\n      category: category,\n      status: 'Graded',\n      notes: '',\n      points: points,\n      total: total,\n      modified: true,\n      date: {\n        due: new Date(),\n        start: new Date()\n      }\n    })\n    marks.courses.set(course.name, course)\n    const m = Object.assign({}, marks)\n    return GradeUtil.calculatePoints(m)\n  }\n\n  static calculateMarkColor(mark: number) {\n    switch (this.calculateLetterGrade(mark)) {\n      case 'A':\n        return '#10C212'\n      case 'B':\n        return '#1E2EE6'\n      case 'C':\n        return '#F5A327'\n      case 'D':\n        return '#C72222'\n      case 'E':\n        return '#330505'\n      case 'F':\n        return Colors.black\n    }\n  }\n\n  static calculateLetterGrade(mark: number) {\n    if (mark >= 89.5) {\n      return 'A'\n    } else if (mark >= 79.5) {\n      return 'B'\n    } else if (mark >= 69.5) {\n      return 'C'\n    } else if (mark >= 59.5) {\n      return 'D'\n    } else if (mark >= 49.5) {\n      return 'E'\n    } else {\n      return 'F'\n    }\n  }\n}\n","import React, { useContext, useState } from 'react'\nimport {\n  TextInput,\n  View,\n  Text,\n  StyleSheet,\n  ActivityIndicator,\n  SafeAreaView,\n  Platform,\n  Linking,\n  KeyboardAvoidingView\n} from 'react-native'\nimport StudentVue from 'studentvue'\nimport * as SecureStore from 'expo-secure-store'\nimport { StackNavigationProp } from '@react-navigation/stack'\nimport { RootStackParamList } from '../types/RootStackParams'\nimport { useNavigation } from '@react-navigation/native'\nimport CustomButton from '../components/CustomButton'\nimport AppContext from '../contexts/AppContext'\nimport BouncyCheckbox from 'react-native-bouncy-checkbox'\nimport GradeUtil from '../gradebook/GradeUtil'\nimport { Colors } from '../colors/Colors'\nimport { LinearGradient } from 'expo-linear-gradient'\nimport AwesomeAlert from 'react-native-awesome-alerts'\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\nimport { SchoolDistrict } from 'studentvue/StudentVue/StudentVue.interfaces'\nimport DropDownPicker from 'react-native-dropdown-picker'\n\ntype loginScreenProp = StackNavigationProp<RootStackParamList, 'Login'>\n\nconst Login = () => {\n  const navigation = useNavigation<loginScreenProp>()\n  const { username, password, setUsername, setPassword, setClient, setMarks } =\n    useContext(AppContext)\n  const [isLoading, setIsLoading] = useState(false)\n  const [isChecked, setToggleCheckBox] = useState(false)\n  const [showAlert, setShowAlert] = useState(false)\n  const [errorMessage, setErrorMessage] = useState(undefined as string)\n\n  const [open, setOpen] = useState(false)\n  const [districts, setDistricts] = useState(undefined as SchoolDistrict[])\n  const [value, setValue] = useState('')\n  const [items, setItems] = useState([] as { label: string; value: string }[])\n\n  if (\n    Platform.OS !== 'web' &&\n    username === undefined &&\n    password === undefined &&\n    value === ''\n  ) {\n    savedCredentials()\n  }\n\n  async function fetchDistricts() {\n    setIsLoading(true)\n    try {\n      const districts = [] as SchoolDistrict[]\n      for (let i = 0; i <= 9; i++) {\n        const res = await StudentVue.findDistricts(`${i}  `)\n        for (const district of res) {\n          if (!districts.some((d) => d.name === district.name))\n            districts.push(district)\n        }\n        districts.sort((a, b) => {\n          const nameA = a.name.toUpperCase()\n          const nameB = b.name.toUpperCase()\n          if (nameA < nameB) return -1\n          if (nameA > nameB) return 1\n          return 0\n        })\n        setDistricts(districts)\n        setItems(\n          districts.map((d) => {\n            return { label: d.name, value: d.name }\n          })\n        )\n      }\n    } catch {}\n    setIsLoading(false)\n  }\n  if (!districts && !isLoading) fetchDistricts()\n\n  async function savedCredentials() {\n    setUsername(await getValueFor('Username'))\n    setPassword(await getValueFor('Password'))\n    setValue((await getValueFor('District')) || '')\n  }\n\n  function alert(message: string) {\n    setErrorMessage(message)\n    setShowAlert(true)\n  }\n\n  async function onLogin() {\n    setIsLoading(true)\n    if (!username) {\n      alert('Enter your username')\n      setIsLoading(false)\n      return\n    }\n    if (!password) {\n      alert('Enter your password')\n      setIsLoading(false)\n      return\n    }\n    if (value === '') {\n      alert('Select your school district')\n      setIsLoading(false)\n      return\n    }\n    try {\n      const client = await StudentVue.login(\n        districts.find((d) => d.name === value).parentVueUrl,\n        {\n          username: username,\n          password: password\n        }\n      )\n      const gradebook = await client.gradebook()\n      console.log(gradebook)\n      const marks = await GradeUtil.convertGradebook(gradebook)\n      console.log(marks)\n      setClient(client)\n      setMarks(marks)\n    } catch (err) {\n      setIsLoading(false)\n      alert(err.message)\n      console.log(err)\n      return\n    }\n    setUsername(username)\n    setPassword(password)\n    if (Platform.OS !== 'web' && isChecked) {\n      save('Username', username)\n      save('Password', password)\n      save('District', value)\n    }\n    setIsLoading(false)\n    navigation.navigate('Menu')\n  }\n\n  async function openInstagram() {\n    if (Platform.OS === 'android' || Platform.OS === 'ios') {\n      const appUrl = 'instagram://user?username=richardyin99'\n      try {\n        if (await Linking.canOpenURL(appUrl)) {\n          Linking.openURL(appUrl)\n        } else {\n          try {\n            Linking.openURL('https://instagram.com/richardyin99')\n          } catch (err) {\n            alert('Cannot open Instagram')\n          }\n        }\n      } catch (err) {\n        alert('Cannot open Instagram')\n      }\n    } else {\n      try {\n        Linking.openURL('https://instagram.com/richardyin99')\n      } catch (err) {\n        alert('Cannot open Instagram')\n      }\n    }\n  }\n\n  return (\n    <>\n      <LinearGradient\n        colors={['#FFF785', Colors.primary]}\n        style={{\n          flex: 1\n        }}\n      >\n        <SafeAreaView style={{ alignItems: 'center' }}>\n          <Text style={styles.welcome}>Welcome To{'\\n'}ScholarHelper</Text>\n        </SafeAreaView>\n        <KeyboardAvoidingView\n          style={styles.container}\n          behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n        >\n          <TextInput\n            defaultValue={username}\n            onChangeText={(u) => setUsername(u)}\n            placeholder={'Username'}\n            style={styles.input}\n          />\n          <TextInput\n            defaultValue={password}\n            onChangeText={(p) => setPassword(p)}\n            placeholder={'Password'}\n            secureTextEntry={true}\n            style={styles.input}\n          />\n          {items && (\n            <DropDownPicker\n              searchable={true}\n              open={open}\n              value={value}\n              items={items}\n              setOpen={setOpen}\n              setValue={setValue}\n              setItems={setItems}\n              maxHeight={null}\n              style={styles.dropdown}\n              textStyle={styles.dropdown_text}\n              searchPlaceholder={'Enter School District Name'}\n              placeholder={'Select School District'}\n              containerStyle={styles.dropdown_container}\n              listMode={'FLATLIST'}\n              tickIconStyle={styles.dropdown_tick}\n              listItemLabelStyle={styles.dropdown_item}\n              searchContainerStyle={styles.dropdown_search_container}\n              searchTextInputStyle={styles.dropdown_search_text}\n            ></DropDownPicker>\n          )}\n          {Platform.OS !== 'web' && (\n            <View style={styles.checkbox_container}>\n              <BouncyCheckbox\n                size={24}\n                fillColor={Colors.accent}\n                unfillColor=\"transparent\"\n                disableText\n                iconStyle={{ borderColor: Colors.black }}\n                isChecked={isChecked}\n                disableBuiltInState\n                onPress={async () => {\n                  setToggleCheckBox(!isChecked)\n                }}\n              />\n              <Text style={styles.save_text}>Save Login Information</Text>\n            </View>\n          )}\n          <CustomButton\n            onPress={() => {\n              if (!isLoading) onLogin()\n            }}\n            text={'Login'}\n            backgroundColor={\n              !isLoading ? Colors.navy : 'rgba(100, 100, 100, 0.6)'\n            }\n            textColor={Colors.white}\n            fontFamily=\"Inter_800ExtraBold\"\n            containerStyle={styles.button_container}\n          ></CustomButton>\n          <ActivityIndicator\n            color={Colors.secondary}\n            animating={isLoading}\n            size=\"large\"\n          />\n          <View\n            style={{\n              alignItems: 'center',\n              position: 'absolute',\n              bottom: 20\n            }}\n          >\n            <Text style={styles.credit}>by Richard Yin &copy; 2022</Text>\n            <FontAwesome.Button\n              name=\"instagram\"\n              backgroundColor=\"transparent\"\n              iconStyle={{\n                color: Colors.black\n              }}\n              underlayColor=\"none\"\n              activeOpacity={0.5}\n              size={28}\n              onPress={() => openInstagram()}\n            ></FontAwesome.Button>\n          </View>\n        </KeyboardAvoidingView>\n      </LinearGradient>\n      <AwesomeAlert\n        show={showAlert}\n        showProgress={false}\n        title={'Error'}\n        message={errorMessage}\n        closeOnTouchOutside={true}\n        closeOnHardwareBackPress={true}\n        showCancelButton={false}\n        showConfirmButton={true}\n        confirmText={'Ok'}\n        confirmButtonColor={Colors.primary}\n        confirmButtonTextStyle={{ color: Colors.black }}\n        onConfirmPressed={() => {\n          setShowAlert(false)\n        }}\n      ></AwesomeAlert>\n    </>\n  )\n}\n\nexport default Login\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    alignSelf: 'center',\n    justifyContent: 'center'\n  },\n  welcome: {\n    fontFamily: 'Montserrat_900Black',\n    fontSize: 30,\n    textAlign: 'center',\n    marginTop: 10\n  },\n  checkbox_container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 10\n  },\n  input: {\n    width: 250,\n    height: 50,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: Colors.black,\n    borderRadius: 5,\n    marginBottom: 10\n  },\n  dropdown: {\n    borderWidth: 1,\n    borderColor: Colors.black,\n    height: 50,\n    width: 250,\n    marginBottom: 10,\n    backgroundColor: 'transparent',\n    padding: 10,\n    borderRadius: 5\n  },\n  dropdown_text: {\n    fontFamily: 'Inter_700Bold',\n    fontSize: 12\n  },\n  dropdown_container: {\n    width: 250\n  },\n  dropdown_item: {\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    fontFamily: 'Inter_600SemiBold'\n  },\n  dropdown_tick: {\n    marginLeft: 10\n  },\n  dropdown_search_container: {\n    padding: 10,\n    borderBottomWidth: 0\n  },\n  dropdown_search_text: {\n    fontFamily: 'Inter_400Regular'\n  },\n  loading: {\n    margin: 'auto'\n  },\n  button_container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'relative',\n    width: 100,\n    height: 50,\n    padding: 10,\n    borderRadius: 10,\n    borderWidth: 0,\n    marginBottom: 10\n  },\n  save_text: {\n    marginLeft: 8,\n    fontFamily: 'Inter_400Regular'\n  },\n  credit: {\n    fontFamily: 'Inter_200ExtraLight',\n    fontSize: 12,\n    textAlign: 'center'\n  }\n})\n\nasync function save(key: string, value: string) {\n  if (value === null) return\n  await SecureStore.setItemAsync(key, value)\n}\n\nasync function getValueFor(key: string) {\n  return await SecureStore.getItemAsync(key)\n}\n","import React, { useContext, useState } from 'react'\nimport { StyleSheet, View, Text, TextInput } from 'react-native'\nimport GradeUtil from '../gradebook/GradeUtil'\nimport AppContext from '../contexts/AppContext'\nimport { Colors } from '../colors/Colors'\nimport { MaterialIcons } from '@expo/vector-icons'\nimport { TouchableOpacity } from 'react-native-gesture-handler'\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\n\nfunction AssignmentComponent(props) {\n  const { marks, setMarks } = useContext(AppContext)\n  const [isDropdown, setIsDropdown] = useState(false)\n  const assignment = marks.courses\n    .get(props.course)\n    .assignments.find((a) => a.name === props.name)\n  const totalWeight = Array.from(\n    marks.courses.get(props.course).categories.values()\n  ).reduce((p, c) => (isNaN(c.value) ? p : p + c.weight), 0)\n\n  const updatePoints = (input: string, type: string) => {\n    setMarks(\n      GradeUtil.updatePoints(\n        marks,\n        props.course,\n        assignment.name,\n        parseFloat(input),\n        type\n      )\n    )\n  }\n\n  const deleteAssignment = () => {\n    setMarks(GradeUtil.deleteAssignment(marks, props.course, assignment.name))\n  }\n\n  const getWidth = (n: number) => {\n    const min = 34\n    if (isNaN(n)) return min\n    return Math.max(n.toString().length * 15, min)\n  }\n\n  return (\n    <View style={[styles.container, props.style]}>\n      <View style={[styles.horizontal_container, { height: 52 }]}>\n        <View style={styles.assignment_info_container}>\n          <Text\n            numberOfLines={1}\n            style={[\n              styles.name,\n              {\n                color: assignment.modified\n                  ? Colors.dark_middle_blue_green\n                  : Colors.navy\n              }\n            ]}\n          >\n            {props.name}\n          </Text>\n          <Text numberOfLines={1} style={styles.category}>\n            {assignment.category} - {assignment.date.due.toLocaleDateString()}\n          </Text>\n        </View>\n        <View style={styles.input_container}>\n          <TextInput\n            defaultValue={\n              isNaN(assignment.points) ? '' : assignment.points.toString()\n            }\n            placeholder={'__'}\n            keyboardType={'number-pad'}\n            autoCompleteType={'off'}\n            style={[\n              styles.mark,\n              {\n                color: assignment.modified\n                  ? Colors.dark_middle_blue_green\n                  : Colors.black,\n                width: getWidth(assignment.points)\n              }\n            ]}\n            onChangeText={(input) => updatePoints(input, 'earned')}\n          />\n          <Text style={styles.dash}> / </Text>\n          <TextInput\n            defaultValue={\n              isNaN(assignment.total) ? '' : assignment.total.toString()\n            }\n            placeholder={'__'}\n            keyboardType={'numeric'}\n            autoCompleteType={'off'}\n            style={[\n              styles.mark,\n              {\n                color: assignment.modified\n                  ? Colors.dark_middle_blue_green\n                  : Colors.black,\n                width: getWidth(assignment.total)\n              }\n            ]}\n            onChangeText={(input) => updatePoints(input, 'total')}\n          />\n        </View>\n        <TouchableOpacity onPress={() => setIsDropdown(!isDropdown)}>\n          <MaterialIcons\n            name={isDropdown ? 'arrow-drop-up' : 'arrow-drop-down'}\n            color={Colors.middle_blue_green}\n            size={36}\n            style={{ marginRight: 5 }}\n          />\n        </TouchableOpacity>\n      </View>\n      {isDropdown && (\n        <View style={styles.dropdown_container}>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Name:</Text>\n            <Text style={styles.dropdown_text_value}>{assignment.name}</Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Category:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {assignment.category}\n            </Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Effective Weight:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {GradeUtil.roundTo(\n                (marks.courses\n                  .get(props.course)\n                  .categories.get(assignment.category).weight /\n                  totalWeight) *\n                  100,\n                2\n              )}\n              %\n            </Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Weight:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {\n                marks.courses\n                  .get(props.course)\n                  .categories.get(assignment.category).weight\n              }\n              %\n            </Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Grade:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {isNaN(assignment.points / assignment.total)\n                ? 'N/A'\n                : `${GradeUtil.roundTo(\n                    (assignment.points / assignment.total) * 100,\n                    2\n                  )} (${GradeUtil.calculateLetterGrade(\n                    (assignment.points / assignment.total) * 100\n                  )})`}\n            </Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Status:</Text>\n            <Text style={styles.dropdown_text_value}>{assignment.status}</Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Due Date:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {assignment.date.due.toLocaleDateString()}\n            </Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Start Date:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {assignment.date.start.toLocaleDateString()}\n            </Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Notes:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {assignment.notes.length === 0 ? 'None' : assignment.notes}\n            </Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Modified By You:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {assignment.modified ? 'True' : 'False'}\n            </Text>\n          </View>\n          <FontAwesome.Button\n            name=\"trash-o\"\n            backgroundColor=\"transparent\"\n            iconStyle={{\n              color: Colors.red\n            }}\n            underlayColor=\"none\"\n            activeOpacity={0.5}\n            size={24}\n            onPress={() => deleteAssignment()}\n          ></FontAwesome.Button>\n        </View>\n      )}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.primary,\n    borderRadius: 10,\n    marginLeft: 7,\n    marginRight: 7,\n    marginTop: 7,\n    elevation: 3,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 2\n  },\n  horizontal_container: {\n    flexDirection: 'row'\n  },\n  dropdown_container: {\n    padding: 10,\n    backgroundColor: Colors.light_gray,\n    borderTopColor: Colors.onyx_gray,\n    borderTopWidth: 1\n  },\n  assignment_info_container: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    marginLeft: 7,\n    flex: 1\n  },\n  name: {\n    color: Colors.black,\n    fontFamily: 'Inter_700Bold',\n    fontSize: 14,\n    marginHorizontal: 7,\n    lineHeight: 14 * 0.75,\n    paddingTop: 14 - 14 * 0.75,\n    textAlign: 'left'\n  },\n  category: {\n    color: Colors.black,\n    fontFamily: 'Inter_400Regular',\n    fontSize: 11,\n    marginHorizontal: 7,\n    lineHeight: 11 * 0.75,\n    marginTop: 4,\n    paddingTop: 11 - 11 * 0.75,\n    textAlign: 'left'\n  },\n  input_container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  mark: {\n    height: 60,\n    borderWidth: 0,\n    fontSize: 23,\n    fontFamily: 'Inter_600SemiBold',\n    alignSelf: 'center'\n  },\n  dash: {\n    fontSize: 20,\n    alignSelf: 'center',\n    textAlignVertical: 'center',\n    marginRight: 3\n  },\n  dropdown_text_name: {\n    marginHorizontal: 7,\n    fontFamily: 'Montserrat_600SemiBold'\n  },\n  dropdown_text_value: {\n    fontFamily: 'Inter_400Regular',\n    flex: 1\n  }\n})\n\nexport default AssignmentComponent\n","import { Colors } from '../colors/Colors'\n\nexport const LightTheme = {\n  dark: false,\n  colors: {\n    primary: Colors.primary,\n    background: Colors.white,\n    card: Colors.primary,\n    text: Colors.black,\n    border: Colors.secondary,\n    notification: Colors.accent\n  }\n}\n","import { useNavigation } from '@react-navigation/native'\nimport React, { useContext, useEffect, useState } from 'react'\nimport {\n  ActivityIndicator,\n  FlatList,\n  StyleSheet,\n  Text,\n  View\n} from 'react-native'\nimport AppContext from '../contexts/AppContext'\nimport AssignmentComponent from '../components/Assignment'\nimport GradeUtil from '../gradebook/GradeUtil'\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\nimport { LightTheme } from '../theme/LightTheme'\nimport Modal from 'react-native-modal'\nimport { TextInput } from 'react-native-gesture-handler'\nimport DropDownPicker from 'react-native-dropdown-picker'\nimport CustomButton from '../components/CustomButton'\nimport { Colors } from '../colors/Colors'\nimport { showMessage } from 'react-native-flash-message'\nimport { SafeAreaView } from 'react-native-safe-area-context'\nimport AwesomeAlert from 'react-native-awesome-alerts'\n\nconst CourseDetails = ({ route }) => {\n  const courseName = route.params.title\n  const navigation = useNavigation()\n\n  const { marks, client, setMarks } = useContext(AppContext)\n  const course = marks.courses.get(courseName)\n\n  const [isModalVisible, setModalVisible] = useState(false)\n  const [open, setOpen] = useState(false)\n  const [category, setCategory] = useState(\n    marks.courses.get(courseName).categories.values().next().value.name\n  )\n  const [categories, setCategories] = useState(\n    Array.from(marks.courses.get(courseName).categories.values()).map((c) => {\n      return { label: c.name, value: c.name }\n    })\n  )\n  const [assignmentName, setAssignmentName] = useState('')\n  const [points, setPoints] = useState(NaN)\n  const [total, setTotal] = useState(NaN)\n\n  const [isLoading, setIsLoading] = useState(false)\n  const [showAlert, setShowAlert] = useState(false)\n  const [errorMessage, setErrorMessage] = useState()\n\n  useEffect(() => {\n    if (isModalVisible) {\n      setAssignmentName('')\n      setPoints(NaN)\n      setTotal(NaN)\n    }\n  }, [isModalVisible])\n\n  const toggleModal = () => {\n    setModalVisible(!isModalVisible)\n  }\n\n  const addAssignment = () => {\n    setMarks(\n      GradeUtil.addAssignment(\n        marks,\n        course,\n        assignmentName,\n        category,\n        points,\n        total\n      )\n    )\n    toggleModal()\n  }\n\n  const refreshMarks = async () => {\n    setIsLoading(true)\n    try {\n      setMarks(\n        await GradeUtil.convertGradebook(\n          await client.gradebook(marks.reportingPeriod.index)\n        )\n      )\n      showMessage({\n        message: 'Refreshed',\n        type: 'info',\n        icon: 'success'\n      })\n    } catch (err) {\n      setErrorMessage(err.message)\n      setShowAlert(true)\n    }\n    setIsLoading(false)\n  }\n\n  return (\n    <>\n      <SafeAreaView\n        style={{ flex: 1 }}\n        pointerEvents={isLoading ? 'none' : 'auto'}\n      >\n        <View style={styles.course_details_container}>\n          <View\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'flex-start'\n            }}\n          >\n            <FontAwesome.Button\n              name=\"chevron-left\"\n              backgroundColor=\"transparent\"\n              iconStyle={{\n                color: Colors.secondary\n              }}\n              underlayColor=\"none\"\n              activeOpacity={0.5}\n              size={24}\n              onPress={() => navigation.goBack()}\n            ></FontAwesome.Button>\n          </View>\n          <Text numberOfLines={1} style={styles.course_details}>\n            {isNaN(course.value) ? 'N/A' : course.value} |{' '}\n            {GradeUtil.parseCourseName(courseName)}\n          </Text>\n          <View\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'flex-end'\n            }}\n          >\n            <FontAwesome.Button\n              name=\"plus-circle\"\n              backgroundColor=\"transparent\"\n              iconStyle={{\n                color: Colors.secondary\n              }}\n              size={24}\n              underlayColor=\"none\"\n              activeOpacity={0.5}\n              onPress={() => toggleModal()}\n            ></FontAwesome.Button>\n            <FontAwesome.Button\n              name=\"refresh\"\n              backgroundColor=\"transparent\"\n              iconStyle={{\n                color: Colors.secondary\n              }}\n              underlayColor=\"none\"\n              activeOpacity={0.5}\n              size={24}\n              onPress={() => refreshMarks()}\n            ></FontAwesome.Button>\n          </View>\n        </View>\n        <FlatList\n          data={course.assignments}\n          renderItem={({ item }) => (\n            <AssignmentComponent\n              name={item.name}\n              course={courseName}\n            ></AssignmentComponent>\n          )}\n          keyExtractor={(item) => item.name}\n        />\n        <Modal\n          isVisible={isModalVisible}\n          coverScreen={true}\n          onBackdropPress={toggleModal}\n        >\n          <View style={styles.modal}>\n            <View style={styles.modal_view}>\n              <Text style={styles.modal_title}>New Assignment</Text>\n              <TextInput\n                value={assignmentName}\n                placeholder=\"Name\"\n                onChangeText={(t) => {\n                  setAssignmentName(t)\n                }}\n                style={styles.input}\n              ></TextInput>\n              <TextInput\n                defaultValue={isNaN(points) ? '' : points.toString()}\n                keyboardType=\"number-pad\"\n                autoCompleteType=\"off\"\n                placeholder=\"Points Earned\"\n                onChangeText={(t) => setPoints(parseFloat(t))}\n                style={styles.input}\n              ></TextInput>\n              <TextInput\n                defaultValue={isNaN(total) ? '' : total.toString()}\n                keyboardType=\"number-pad\"\n                autoCompleteType=\"off\"\n                placeholder=\"Total Points\"\n                onChangeText={(t) => setTotal(parseFloat(t))}\n                style={styles.input}\n              ></TextInput>\n              <View\n                style={{\n                  marginHorizontal: 7,\n                  marginTop: 7\n                }}\n              >\n                <DropDownPicker\n                  open={open}\n                  value={category}\n                  items={categories}\n                  setOpen={setOpen}\n                  setValue={setCategory}\n                  setItems={setCategories}\n                  maxHeight={null}\n                  style={styles.dropdown}\n                ></DropDownPicker>\n                <CustomButton\n                  onPress={addAssignment}\n                  text={'Add Assignment'}\n                  backgroundColor={LightTheme.colors.card}\n                  textColor={Colors.black}\n                  fontFamily=\"Inter_600SemiBold\"\n                  containerStyle={styles.button_container}\n                ></CustomButton>\n              </View>\n            </View>\n          </View>\n        </Modal>\n      </SafeAreaView>\n      {isLoading && (\n        <SafeAreaView style={styles.loading}>\n          <ActivityIndicator size={'large'} />\n        </SafeAreaView>\n      )}\n      <AwesomeAlert\n        show={showAlert}\n        showProgress={false}\n        title={'Error'}\n        message={errorMessage}\n        closeOnTouchOutside={true}\n        closeOnHardwareBackPress={true}\n        showCancelButton={false}\n        showConfirmButton={true}\n        confirmText={'Ok'}\n        confirmButtonColor={Colors.primary}\n        confirmButtonTextStyle={{ color: Colors.black }}\n        onConfirmPressed={() => {\n          setShowAlert(false)\n        }}\n      ></AwesomeAlert>\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  input: {\n    margin: 7,\n    padding: 5,\n    borderWidth: 1,\n    height: 30,\n    borderColor: Colors.black\n  },\n  modal_title: {\n    alignSelf: 'center',\n    marginBottom: 7,\n    marginTop: 14,\n    fontFamily: 'Inter_600SemiBold',\n    fontSize: 18\n  },\n  modal: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    alignSelf: 'center',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    width: 330,\n    height: 300\n  },\n  modal_view: {\n    width: 330,\n    height: 300\n  },\n  dropdown: {\n    height: 30,\n    borderRadius: 0,\n    alignItems: 'center',\n    alignSelf: 'center'\n  },\n  button_container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignSelf: 'center',\n    width: 200,\n    height: 50,\n    borderRadius: 10,\n    borderWidth: 0,\n    marginTop: 30\n  },\n  course_details: {\n    fontSize: 22,\n    flex: 1,\n    flexWrap: 'wrap',\n    fontFamily: 'Inter_800ExtraBold'\n  },\n  course_details_container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  loading: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(200, 200, 200, 0.2)'\n  }\n})\n\nexport default CourseDetails\n","import React from 'react'\nimport { StyleSheet, View, Text } from 'react-native'\nimport { Colors } from '../colors/Colors'\nimport GradeUtil from '../gradebook/GradeUtil'\n\nfunction CourseComponent(props) {\n  const mark = parseFloat(props.mark)\n\n  return (\n    <View style={[styles.container, props.style]}>\n      <Text style={styles.period_number}>{`0${props.period}`}</Text>\n      <View style={styles.course_info_container}>\n        <Text numberOfLines={1} style={styles.name}>\n          {props.name}\n        </Text>\n        <Text numberOfLines={1} style={styles.teacher}>\n          {props.teacher}\n        </Text>\n      </View>\n      <Text style={[styles.mark]}>\n        {isNaN(parseFloat(props.mark)) ? 'N/A' : props.mark}\n      </Text>\n      <Text\n        style={[\n          styles.letter_grade,\n          {\n            color: GradeUtil.calculateMarkColor(mark)\n          }\n        ]}\n      >\n        {GradeUtil.calculateLetterGrade(mark)}\n      </Text>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.primary,\n    borderRadius: 15,\n    height: 55,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginHorizontal: 7,\n    marginTop: 7,\n    padding: 7,\n    elevation: 3,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 2\n  },\n  period_number: {\n    fontFamily: 'Montserrat_800ExtraBold',\n    fontSize: 32\n  },\n  course_info_container: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    marginHorizontal: 7,\n    flex: 1\n  },\n  name: {\n    color: Colors.navy,\n    fontFamily: 'Montserrat_700Bold',\n    fontSize: 18,\n    marginRight: 14,\n    marginLeft: 7,\n    lineHeight: 18 * 0.75,\n    paddingTop: 18 - 18 * 0.75,\n    textAlign: 'left'\n  },\n  teacher: {\n    color: Colors.black,\n    fontFamily: 'Inter_400Regular',\n    fontSize: 12,\n    marginRight: 14,\n    marginLeft: 7,\n    lineHeight: 12 * 0.75,\n    paddingTop: 12 - 12 * 0.75,\n    marginTop: 4,\n    textAlign: 'left'\n  },\n  mark: {\n    fontFamily: 'Montserrat_500Medium',\n    fontSize: 28,\n    alignSelf: 'center'\n  },\n  letter_grade: {\n    marginLeft: 7,\n    fontFamily: 'Montserrat_800ExtraBold',\n    fontSize: 32,\n    alignSelf: 'center'\n  }\n})\n\nexport default CourseComponent\n","import React, { useContext, useState, useEffect } from 'react'\nimport AppContext from '../contexts/AppContext'\nimport {\n  SafeAreaView,\n  StyleSheet,\n  View,\n  Text,\n  ActivityIndicator\n} from 'react-native'\nimport { FlatList, TouchableOpacity } from 'react-native-gesture-handler'\nimport CourseComponent from '../components/Course'\nimport DropDownPicker from 'react-native-dropdown-picker'\nimport GradeUtil from '../gradebook/GradeUtil'\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\nimport { showMessage } from 'react-native-flash-message'\nimport { Colors } from '../colors/Colors'\nimport AwesomeAlert from 'react-native-awesome-alerts'\n\nconst Courses = ({ navigation }) => {\n  const { client, marks, setMarks } = useContext(AppContext)\n  const [open, setOpen] = useState(false)\n  const [value, setValue] = useState(marks.reportingPeriod.index)\n  const [periods, setPeriods] = useState(\n    marks.reportingPeriods.map((p) => {\n      return { label: p.name, value: p.index }\n    })\n  )\n  const [isLoading, setIsLoading] = useState(false)\n  const [showAlert, setShowAlert] = useState(false)\n  const [errorMessage, setErrorMessage] = useState()\n\n  useEffect(() => {\n    setIsLoading(true)\n    let isSubscribed = true\n    const getGradebook = async () => {\n      try {\n        const marks = await GradeUtil.convertGradebook(\n          await client.gradebook(value)\n        )\n        if (isSubscribed) {\n          setMarks(marks)\n        }\n      } catch (err) {\n        setErrorMessage(err.message)\n        setShowAlert(true)\n      }\n    }\n    getGradebook()\n    setIsLoading(false)\n    return () => {\n      isSubscribed = false\n    }\n  }, [value])\n\n  const refreshMarks = async () => {\n    setIsLoading(true)\n    try {\n      const gradebook = await client.gradebook(value)\n      const newMarks = await GradeUtil.convertGradebook(gradebook)\n      setMarks(newMarks)\n    } catch (err) {\n      setErrorMessage(err.message)\n      setShowAlert(true)\n      setIsLoading(false)\n      return\n    }\n    showMessage({\n      message: 'Gradebook refreshed',\n      type: 'info',\n      icon: 'success'\n    })\n    setIsLoading(false)\n  }\n\n  return (\n    <>\n      <SafeAreaView\n        style={{ flex: 1 }}\n        pointerEvents={isLoading ? 'none' : 'auto'}\n      >\n        <DropDownPicker\n          open={open}\n          value={value}\n          items={periods}\n          setOpen={setOpen}\n          setValue={setValue}\n          setItems={setPeriods}\n          maxHeight={null}\n          style={styles.dropdown}\n          textStyle={styles.dropdown_text}\n        ></DropDownPicker>\n        <View style={styles.row_container}>\n          <View style={styles.gpa_container}>\n            <Text style={styles.gpa}>{marks.gpa} GPA</Text>\n          </View>\n          <View style={styles.refresh_button_container}>\n            <FontAwesome.Button\n              name=\"refresh\"\n              backgroundColor=\"transparent\"\n              iconStyle={{\n                color: Colors.secondary\n              }}\n              underlayColor=\"none\"\n              activeOpacity={0.5}\n              size={24}\n              onPress={() => refreshMarks()}\n            ></FontAwesome.Button>\n          </View>\n        </View>\n        {marks != undefined && (\n          <FlatList\n            data={[...marks.courses.entries()]}\n            renderItem={({ item }) => (\n              <TouchableOpacity\n                onPress={() =>\n                  navigation.navigate('Course Details', { title: item[0] })\n                }\n              >\n                <CourseComponent\n                  name={GradeUtil.parseCourseName(item[0])}\n                  mark={item[1].value}\n                  period={item[1].period}\n                  teacher={item[1].teacher}\n                ></CourseComponent>\n              </TouchableOpacity>\n            )}\n            keyExtractor={(item) => item[0]}\n          />\n        )}\n      </SafeAreaView>\n      {isLoading && (\n        <SafeAreaView style={styles.loading}>\n          <ActivityIndicator size={'large'} />\n        </SafeAreaView>\n      )}\n      <AwesomeAlert\n        show={showAlert}\n        showProgress={false}\n        title={'Error'}\n        message={errorMessage}\n        closeOnTouchOutside={true}\n        closeOnHardwareBackPress={true}\n        showCancelButton={false}\n        showConfirmButton={true}\n        confirmText={'Ok'}\n        confirmButtonColor={Colors.primary}\n        confirmButtonTextStyle={{ color: Colors.black }}\n        onConfirmPressed={() => {\n          setShowAlert(false)\n        }}\n      ></AwesomeAlert>\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  dropdown: {\n    borderWidth: 0,\n    height: 30,\n    marginBottom: 15,\n    backgroundColor: 'transparent'\n  },\n  dropdown_text: {\n    fontFamily: 'Inter_800ExtraBold',\n    fontSize: 30\n  },\n  row_container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  gpa_container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-start'\n  },\n  gpa: {\n    marginLeft: 11,\n    fontFamily: 'Montserrat_700Bold',\n    fontSize: 22\n  },\n  refresh_button_container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  loading: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(200, 200, 200, 0.2)'\n  }\n})\n\nexport default Courses\n","import React from 'react'\n\ninterface CourseName {\n  courseHeader: string\n  setCourse: React.Dispatch<React.SetStateAction<string>>\n}\n\nconst GradeContext = React.createContext<CourseName>(null)\n\nexport default GradeContext\n","import React, { useState } from 'react'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport CourseDetails from './CourseDetails'\nimport Courses from './Courses'\nimport GradeContext from '../contexts/GradeContext'\n\nconst Stack = createStackNavigator()\n\nconst StackNavigator = () => {\n  const [course, setCourse] = useState(undefined)\n\n  return (\n    <GradeContext.Provider\n      value={{ courseHeader: course, setCourse: setCourse }}\n    >\n      <Stack.Navigator>\n        <Stack.Screen\n          name=\"Courses\"\n          component={Courses}\n          options={{\n            headerShown: false\n          }}\n        />\n        <Stack.Screen\n          name=\"Course Details\"\n          component={CourseDetails}\n          options={{\n            headerShown: false\n          }}\n        />\n      </Stack.Navigator>\n    </GradeContext.Provider>\n  )\n}\n\nexport default StackNavigator\n","import React, { useContext, useState } from 'react'\nimport { ActivityIndicator, Image, StyleSheet, View, Text } from 'react-native'\nimport { LinearGradient } from 'expo-linear-gradient'\nimport { StudentInfo } from 'studentvue'\nimport { Colors } from '../colors/Colors'\nimport AppContext from '../contexts/AppContext'\nimport { FontAwesome } from '@expo/vector-icons'\nimport { Feather } from '@expo/vector-icons'\n\nconst Profile = () => {\n  const { client } = useContext(AppContext)\n  const [studentInfo, setStudentInfo] = useState(undefined as StudentInfo)\n\n  const fetchStudentInfo = async () => {\n    setStudentInfo(await client.studentInfo())\n  }\n  if (!studentInfo) fetchStudentInfo()\n\n  return (\n    <View style={{ flex: 1 }}>\n      {!studentInfo ? (\n        <ActivityIndicator\n          color={Colors.secondary}\n          animating={true}\n          size=\"large\"\n          style={{\n            alignSelf: 'center',\n            flex: 1,\n            justifyContent: 'center'\n          }}\n        />\n      ) : (\n        <View>\n          <LinearGradient\n            colors={['#DED140', Colors.primary]}\n            style={styles.header}\n          ></LinearGradient>\n          <Image\n            style={styles.avatar}\n            source={{\n              uri: `data:image/png;base64,${studentInfo.photo}`\n            }}\n          />\n          <Text style={styles.name}>{studentInfo.student.name}</Text>\n          <View style={styles.description_container}>\n            <View style={styles.description_part_container}>\n              <Text style={styles.description_part_text}>\n                {studentInfo.grade + suffix(parseInt(studentInfo.grade))}\n              </Text>\n              <FontAwesome\n                name=\"graduation-cap\"\n                size={18}\n                color={Colors.black}\n              />\n            </View>\n            <View style={styles.description_part_container}>\n              <Text style={styles.description_part_text}>\n                {studentInfo.birthDate.toLocaleDateString()}\n              </Text>\n              <FontAwesome\n                name=\"birthday-cake\"\n                size={18}\n                color={Colors.black}\n              />\n            </View>\n          </View>\n          <View style={styles.property_container}>\n            <Feather name=\"phone\" size={26} color={Colors.black} />\n            <Text style={styles.property_text}>{studentInfo.phone}</Text>\n          </View>\n          <View style={styles.property_container}>\n            <Feather name=\"mail\" size={26} color={Colors.black} />\n            <Text style={styles.property_text}>{studentInfo.email}</Text>\n          </View>\n          <View style={styles.property_container}>\n            <Feather name=\"map-pin\" size={26} color={Colors.black} />\n            <Text style={styles.property_text}>{studentInfo.address}</Text>\n          </View>\n          <View style={styles.property_container}>\n            <FontAwesome name=\"building-o\" size={26} color={Colors.black} />\n            <Text style={styles.property_text}>\n              {studentInfo.currentSchool}\n            </Text>\n          </View>\n        </View>\n      )}\n    </View>\n  )\n}\n\nconst suffix = (num: number) => {\n  const j = num % 10,\n    k = num % 100\n  if (j === 1 && k !== 11) {\n    return 'st'\n  }\n  if (j === 2 && k !== 12) {\n    return 'nd'\n  }\n  if (j === 3 && k !== 13) {\n    return 'rd'\n  }\n  return 'th'\n}\n\nconst styles = StyleSheet.create({\n  header: {\n    height: 150\n  },\n  name: {\n    fontSize: 24,\n    fontFamily: 'Montserrat_700Bold',\n    alignSelf: 'center',\n    marginTop: 10\n  },\n  avatar: {\n    width: 130,\n    height: 130,\n    borderRadius: 130 / 2,\n    borderWidth: 4,\n    borderColor: 'white',\n    alignSelf: 'center',\n    marginTop: -130 / 2\n  },\n  description_container: {\n    marginTop: 10,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    borderColor: Colors.secondary,\n    borderWidth: 1\n  },\n  description_part_container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 10\n  },\n  description_part_text: {\n    marginTop: 5,\n    fontSize: 22,\n    fontFamily: 'Montserrat_800ExtraBold'\n  },\n  property_container: {\n    flexDirection: 'row',\n    padding: 12\n  },\n  property_text: {\n    marginHorizontal: 8,\n    fontFamily: 'Inter_400Regular',\n    fontSize: 18,\n    color: Colors.onyx_gray\n  }\n})\n\nexport default Profile\n","import React from 'react'\nimport { StyleSheet, View, Text } from 'react-native'\nimport { Colors } from '../colors/Colors'\n\nfunction DocumentComponent(props) {\n  return (\n    <View style={[styles.container, props.style]}>\n      <View style={styles.doc_info_container}>\n        <Text numberOfLines={1} style={styles.name}>\n          {props.name}\n        </Text>\n        <View style={styles.info_container}>\n          <Text numberOfLines={1} style={[styles.type]}>\n            {props.type}\n          </Text>\n          <Text numberOfLines={1} style={styles.date}>\n            {props.date}\n          </Text>\n        </View>\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.off_white,\n    borderRadius: 10,\n    height: 50,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginHorizontal: 7,\n    marginTop: 7,\n    padding: 7,\n    elevation: 3,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 2\n  },\n  doc_info_container: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    flex: 1,\n    marginHorizontal: 4\n  },\n  info_container: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    flex: 1\n  },\n  name: {\n    color: Colors.black,\n    fontFamily: 'Montserrat_600SemiBold',\n    fontSize: 16,\n    lineHeight: 16 * 0.75,\n    paddingTop: 16 - 16 * 0.75,\n    textAlign: 'left'\n  },\n  type: {\n    color: Colors.black,\n    fontFamily: 'Inter_300Light',\n    fontSize: 12,\n    flex: 1,\n    lineHeight: 12 * 0.75,\n    paddingTop: 12 - 12 * 0.75,\n    marginTop: 4,\n    textAlign: 'left'\n  },\n  date: {\n    color: Colors.black,\n    fontFamily: 'Inter_400Regular',\n    fontSize: 12,\n    lineHeight: 12 * 0.75,\n    paddingTop: 12 - 12 * 0.75,\n    marginTop: 4,\n    textAlign: 'left'\n  }\n})\n\nexport default DocumentComponent\n","import React, { useContext, useState } from 'react'\nimport { SafeAreaView } from 'react-native-safe-area-context'\nimport AppContext from '../contexts/AppContext'\nimport * as Sharing from 'expo-sharing'\nimport * as FileSystem from 'expo-file-system'\nimport {\n  ActivityIndicator,\n  FlatList,\n  Platform,\n  StyleSheet,\n  Text,\n  View\n} from 'react-native'\nimport Document from 'studentvue/StudentVue/Document/Document'\nimport DocumentComponent from '../components/Document'\nimport { TouchableOpacity } from 'react-native-gesture-handler'\nimport { Colors } from '../colors/Colors'\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\nimport { showMessage } from 'react-native-flash-message'\nimport AwesomeAlert from 'react-native-awesome-alerts'\n\nconst Documents = () => {\n  const { client } = useContext(AppContext)\n  const [documents, setDocuments] = useState(undefined)\n  const [isLoading, setIsLoading] = useState(false)\n  const [showAlert, setShowAlert] = useState(false)\n  const [errorMessage, setErrorMessage] = useState()\n\n  const fetchDocuments = async () => {\n    setIsLoading(true)\n    try {\n      setDocuments(await client.documents())\n    } catch (err) {\n      setErrorMessage(err.message)\n      setShowAlert(true)\n    }\n    setIsLoading(false)\n  }\n  if (!documents && !isLoading) fetchDocuments()\n\n  const base64toBlob = (base64: string, sliceSize = 512) => {\n    const byteCharacters = window.atob(base64)\n    const byteArrays = []\n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n      const slice = byteCharacters.slice(offset, offset + sliceSize)\n      const byteNumbers = new Array(slice.length)\n      for (let i = 0; i < slice.length; i++) {\n        byteNumbers[i] = slice.charCodeAt(i)\n      }\n      byteArrays.push(new Uint8Array(byteNumbers))\n    }\n    return new Blob(byteArrays)\n  }\n\n  const downloadDocument = async (document: Document) => {\n    const file = (await document.get())[0]\n    const fileName =\n      document.comment.replace(/ /g, '_') +\n      file.file.name.substring(file.file.name.lastIndexOf('.'))\n    if (Platform.OS === 'android' || Platform.OS === 'ios') {\n      const filePath = FileSystem.documentDirectory + fileName\n      try {\n        await FileSystem.writeAsStringAsync(filePath, file.base64, {\n          encoding: 'base64'\n        })\n        await Sharing.shareAsync(filePath)\n      } catch (e) {}\n    } else {\n      require('file-saver').saveAs(base64toBlob(file.base64), fileName)\n    }\n  }\n\n  return (\n    <>\n      <SafeAreaView\n        style={{ flex: 1 }}\n        pointerEvents={isLoading ? 'none' : 'auto'}\n      >\n        <View style={styles.row_container}>\n          <View style={styles.title_container}>\n            <Text style={styles.title}>Documents</Text>\n          </View>\n          <View style={styles.refresh_button_container}>\n            <FontAwesome.Button\n              name=\"refresh\"\n              backgroundColor=\"transparent\"\n              iconStyle={{\n                color: Colors.secondary\n              }}\n              underlayColor=\"none\"\n              activeOpacity={0.5}\n              size={24}\n              onPress={async () => {\n                try {\n                  setDocuments(await client.documents())\n                  showMessage({\n                    message: 'Refreshed',\n                    type: 'info',\n                    icon: 'success'\n                  })\n                } catch (err) {\n                  setErrorMessage(err.message)\n                  setShowAlert(true)\n                }\n              }}\n            ></FontAwesome.Button>\n          </View>\n        </View>\n        {documents && (\n          <FlatList\n            data={documents}\n            renderItem={({ item }) => (\n              <TouchableOpacity\n                onPress={() => {\n                  downloadDocument(item)\n                }}\n              >\n                <DocumentComponent\n                  name={(item as Document).comment}\n                  type={(item as Document).file.type}\n                  date={(item as Document).file.date.toLocaleDateString()}\n                ></DocumentComponent>\n              </TouchableOpacity>\n            )}\n            keyExtractor={(item) => (item as Document).documentGu}\n          ></FlatList>\n        )}\n      </SafeAreaView>\n      {isLoading && (\n        <SafeAreaView style={styles.loading}>\n          <ActivityIndicator size={'large'} />\n        </SafeAreaView>\n      )}\n      <AwesomeAlert\n        show={showAlert}\n        showProgress={false}\n        title={'Error'}\n        message={errorMessage}\n        closeOnTouchOutside={true}\n        closeOnHardwareBackPress={true}\n        showCancelButton={false}\n        showConfirmButton={true}\n        confirmText={'Ok'}\n        confirmButtonColor={Colors.primary}\n        confirmButtonTextStyle={{ color: Colors.black }}\n        onConfirmPressed={() => {\n          setShowAlert(false)\n        }}\n      ></AwesomeAlert>\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  row_container: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  title_container: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    width: '75%'\n  },\n  title: {\n    fontFamily: 'Inter_800ExtraBold',\n    fontSize: 30,\n    marginHorizontal: 11\n  },\n  refresh_button_container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  loading: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(200, 200, 200, 0.2)'\n  }\n})\n\nexport default Documents\n","import { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\nimport Grades from '../screens/Grades'\nimport Profile from '../screens/Profile'\nimport React from 'react'\nimport { StackNavigationProp } from '@react-navigation/stack'\nimport { RootStackParamList } from '../types/RootStackParams'\nimport { useNavigation } from '@react-navigation/native'\nimport { Ionicons } from '@expo/vector-icons'\nimport { MaterialIcons } from '@expo/vector-icons'\nimport Documents from '../screens/Documents'\nimport { TouchableOpacity } from 'react-native'\nimport { Colors } from '../colors/Colors'\n\nconst Tab = createBottomTabNavigator()\ntype navScreenProp = StackNavigationProp<RootStackParamList, 'Menu'>\n\nconst EmptyComponent = () => null\n\nconst App = () => {\n  const navigation = useNavigation<navScreenProp>()\n\n  return (\n    <Tab.Navigator\n      screenOptions={{\n        tabBarShowLabel: false,\n        tabBarStyle: {\n          borderTopWidth: 1\n        }\n      }}\n    >\n      <Tab.Screen\n        name=\"Grades\"\n        component={Grades}\n        options={{\n          headerShown: false,\n          tabBarIcon: (tabInfo) => {\n            return tabInfo.focused ? (\n              <MaterialIcons\n                name=\"insert-chart\"\n                size={30}\n                color={Colors.middle_blue_green}\n              />\n            ) : (\n              <MaterialIcons\n                name=\"insert-chart-outlined\"\n                size={30}\n                color={Colors.secondary}\n              />\n            )\n          }\n        }}\n      />\n      <Tab.Screen\n        name=\"Documents\"\n        component={Documents}\n        options={{\n          headerShown: false,\n          tabBarIcon: (tabInfo) => {\n            return tabInfo.focused ? (\n              <Ionicons\n                name=\"folder\"\n                size={30}\n                color={Colors.middle_blue_green}\n              />\n            ) : (\n              <Ionicons\n                name=\"folder-outline\"\n                size={30}\n                color={Colors.secondary}\n              />\n            )\n          }\n        }}\n      />\n      <Tab.Screen\n        name=\"Profile\"\n        component={Profile}\n        options={{\n          headerShown: false,\n          tabBarIcon: (tabInfo) => {\n            return tabInfo.focused ? (\n              <Ionicons\n                name=\"person\"\n                size={30}\n                color={Colors.middle_blue_green}\n              />\n            ) : (\n              <Ionicons\n                name=\"person-outline\"\n                size={30}\n                color={Colors.secondary}\n              />\n            )\n          }\n        }}\n      />\n      <Tab.Screen\n        name=\"Logout\"\n        component={EmptyComponent}\n        options={({ navigation }) => ({\n          headerShown: false,\n          tabBarIcon: () => {\n            return (\n              <Ionicons name=\"exit-outline\" size={32} color={Colors.black} />\n            )\n          },\n          tabBarButton: (props) => (\n            <TouchableOpacity\n              {...props}\n              onPress={() => navigation.navigate('Login')}\n            />\n          )\n        })}\n      />\n    </Tab.Navigator>\n  )\n}\n\nexport default App\n","import Login from './screens/Login'\nimport React, { useState } from 'react'\nimport BottomNavigation from './navigation/BottomNavigation'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport { RootStackParamList } from './types/RootStackParams'\nimport AppContext from './contexts/AppContext'\nimport { LightTheme } from './theme/LightTheme'\nimport {\n  useFonts,\n  Inter_100Thin,\n  Inter_200ExtraLight,\n  Inter_300Light,\n  Inter_400Regular,\n  Inter_500Medium,\n  Inter_600SemiBold,\n  Inter_700Bold,\n  Inter_800ExtraBold,\n  Inter_900Black\n} from '@expo-google-fonts/inter'\nimport {\n  Montserrat_100Thin,\n  Montserrat_200ExtraLight,\n  Montserrat_300Light,\n  Montserrat_400Regular,\n  Montserrat_500Medium,\n  Montserrat_600SemiBold,\n  Montserrat_700Bold,\n  Montserrat_800ExtraBold,\n  Montserrat_900Black,\n  Montserrat_100Thin_Italic,\n  Montserrat_200ExtraLight_Italic,\n  Montserrat_300Light_Italic,\n  Montserrat_400Regular_Italic,\n  Montserrat_500Medium_Italic,\n  Montserrat_600SemiBold_Italic,\n  Montserrat_700Bold_Italic,\n  Montserrat_800ExtraBold_Italic,\n  Montserrat_900Black_Italic\n} from '@expo-google-fonts/montserrat'\nimport { View } from 'react-native'\nimport { SafeAreaProvider } from 'react-native-safe-area-context'\nimport FlashMessage from 'react-native-flash-message'\n\nconst Stack = createStackNavigator<RootStackParamList>()\n\nconst App = () => {\n  const [client, setClient] = useState(undefined)\n  const [marks, setMarks] = useState(undefined)\n  const [gradebook, setGradebook] = useState(undefined)\n  const [username, setUsername] = useState(undefined)\n  const [password, setPassword] = useState(undefined)\n  const user = {\n    username: username,\n    password: password,\n    client: client,\n    marks: marks,\n    gradebook: gradebook,\n    setUsername,\n    setPassword,\n    setClient,\n    setMarks,\n    setGradebook\n  }\n  let [fontsLoaded] = useFonts({\n    Inter_100Thin,\n    Inter_200ExtraLight,\n    Inter_300Light,\n    Inter_400Regular,\n    Inter_500Medium,\n    Inter_600SemiBold,\n    Inter_700Bold,\n    Inter_800ExtraBold,\n    Inter_900Black,\n    Montserrat_100Thin,\n    Montserrat_200ExtraLight,\n    Montserrat_300Light,\n    Montserrat_400Regular,\n    Montserrat_500Medium,\n    Montserrat_600SemiBold,\n    Montserrat_700Bold,\n    Montserrat_800ExtraBold,\n    Montserrat_900Black,\n    Montserrat_100Thin_Italic,\n    Montserrat_200ExtraLight_Italic,\n    Montserrat_300Light_Italic,\n    Montserrat_400Regular_Italic,\n    Montserrat_500Medium_Italic,\n    Montserrat_600SemiBold_Italic,\n    Montserrat_700Bold_Italic,\n    Montserrat_800ExtraBold_Italic,\n    Montserrat_900Black_Italic\n  })\n  if (!fontsLoaded) {\n    return <View></View>\n  }\n\n  return (\n    <>\n      <SafeAreaProvider>\n        <AppContext.Provider value={user}>\n          <NavigationContainer theme={LightTheme}>\n            <Stack.Navigator>\n              <Stack.Screen\n                name=\"Login\"\n                component={Login}\n                options={{\n                  headerShown: false\n                }}\n              />\n              <Stack.Screen\n                name=\"Menu\"\n                component={BottomNavigation}\n                options={{\n                  headerShown: false\n                }}\n              />\n            </Stack.Navigator>\n          </NavigationContainer>\n        </AppContext.Provider>\n      </SafeAreaProvider>\n      <FlashMessage position=\"top\" />\n    </>\n  )\n}\n\nexport default App\n"],"sourceRoot":""}
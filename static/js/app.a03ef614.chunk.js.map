{"version":3,"sources":["components/CustomButton.tsx","theme/LightTheme.ts","colors/Colors.ts","App.tsx","screens/Login.tsx","contexts/AppContext.tsx","gradebook/GradeUtil.ts","assets/mountainbackground.png","navigation/BottomNavigation.tsx","screens/Grades.tsx","screens/CourseDetails.tsx","components/Assignment.tsx","screens/Courses.tsx","components/Course.tsx","contexts/GradeContext.tsx","screens/Profile.tsx","screens/Documents.tsx","components/Document.tsx"],"names":["styles","StyleSheet","create","buttonText","fontSize","textAlign","onPress","text","backgroundColor","textColor","fontFamily","containerStyle","disabled","TouchableOpacity","style","View","Text","color","LightTheme","dark","colors","primary","Colors","background","white","card","black","border","secondary","notification","accent","middle_blue_green","dark_middle_blue_green","alice_blue","onyx_gray","corn_silk_white","red","off_white","light_gray","navy","Stack","createNativeStackNavigator","useState","undefined","client","setClient","marks","setMarks","username","setUsername","user","password","setPassword","useFonts","Inter_100Thin","Inter_200ExtraLight","Inter_300Light","Inter_400Regular","Inter_500Medium","Inter_600SemiBold","Inter_700Bold","Inter_800ExtraBold","Inter_900Black","Montserrat_100Thin","Montserrat_200ExtraLight","Montserrat_300Light","Montserrat_400Regular","Montserrat_500Medium","Montserrat_600SemiBold","Montserrat_700Bold","Montserrat_800ExtraBold","Montserrat_900Black","Montserrat_100Thin_Italic","Montserrat_200ExtraLight_Italic","Montserrat_300Light_Italic","Montserrat_400Regular_Italic","Montserrat_500Medium_Italic","Montserrat_600SemiBold_Italic","Montserrat_700Bold_Italic","Montserrat_800ExtraBold_Italic","Montserrat_900Black_Italic","RussoOne_400Regular","SafeAreaProvider","Provider","value","NavigationContainer","theme","Navigator","Screen","name","component","Login","options","headerShown","BottomNavigation","position","flex","alignItems","justifyContent","marginBottom","ActivityIndicator","animating","size","navigation","useNavigation","refInput","useRef","useContext","AppContext","isLoading","setIsLoading","isChecked","setToggleCheckBox","showAlert","setShowAlert","errorMessage","setErrorMessage","firstLaunch","setFirstLaunch","isModalVisible","setModalVisible","useCookies","cookies","setCookie","removeCookie","open","setOpen","setValue","require","map","d","label","list","setList","getValueFor","StudentVue","login","find","parentVueUrl","gradebook","convertGradebook","err","alert","message","navigate","save","remove","openInstagram","Platform","OS","appUrl","Linking","canOpenURL","openURL","key","path","SecureStore","setItemAsync","getItemAsync","useAsyncEffect","savedCredentials","deleteItemAsync","AsyncStorage","setItem","e","getItem","isVisible","coverScreen","onBackdropPress","animationIn","animationOut","modal","modal_view","security_modal","Button","iconStyle","underlayColor","activeOpacity","ImageBackground","source","resizeMode","SafeAreaView","horizontal_container","mountain","FontAwesome5","description","KeyboardAvoidingView","container","behavior","login_info_container","security","login_info","TextInput","defaultValue","onChangeText","u","placeholder","input","returnKeyType","onSubmitEditing","current","focus","blurOnSubmit","p","secureTextEntry","ref","searchable","items","setItems","dropDownDirection","dropdown","dropDownContainerStyle","height","Dimensions","get","textStyle","dropdown_text","dropdown_container","listMode","translation","SEARCH_PLACEHOLDER","PLACEHOLDER","NOTHING_TO_SHOW","tickIconStyle","dropdown_tick","listItemLabelStyle","dropdown_item","searchContainerStyle","dropdown_search_container","searchTextInputStyle","dropdown_search_text","listItemContainerStyle","dropdown_list_item_container","renderListItem","props","isSelected","district_name_container","numberOfLines","checkbox_container","fillColor","unfillColor","disableText","borderColor","disableBuiltInState","save_text","onLogin","button_container","bottom","row_container","insta_button_container","insta_button","insta_text","show","showProgress","title","closeOnTouchOutside","closeOnHardwareBackPress","showCancelButton","showConfirmButton","confirmText","confirmButtonColor","confirmButtonTextStyle","onConfirmPressed","alignSelf","marginTop","flexDirection","borderRadius","width","padding","marginLeft","borderWidth","paddingHorizontal","paddingVertical","borderBottomWidth","loading","margin","marginHorizontal","React","createContext","substring","lastIndexOf","trim","gpa","courses","Map","reportingPeriod","index","reportingPeriods","available","course","set","period","findIndex","c","teacher","staff","points","total","NaN","assignments","categories","category","weightedCategories","type","toUpperCase","weight","parseFloat","standard","assignment","score","parsePoints","a","status","notes","modified","date","due","start","push","calculatePoints","Promise","resolve","numOfCourses","values","isNaN","roundTo","regex","match","split","num","places","multiplicator","Math","pow","toFixed","round","newMarks","Object","assign","filter","assignmentName","length","some","indentifier","unshift","Date","m","mark","calculateLetterGrade","test","j","k","module","exports","Tab","createBottomTabNavigator","EmptyComponent","screenOptions","tabBarShowLabel","tabBarStyle","borderTopWidth","overflow","Grades","tabBarIcon","tabInfo","focused","MaterialIcons","Documents","Ionicons","Profile","tabBarButton","setCourse","courseHeader","Courses","CourseDetails","marginVertical","course_details","flexWrap","course_details_container","left","right","top","category_name_container","category_check_container","courseName","route","params","next","setCategory","Array","from","setCategories","setAssignmentName","setPoints","setTotal","useEffect","toggleModal","refreshMarks","showMessage","icon","pointerEvents","goBack","parseCourseName","FlatList","data","renderItem","item","keyExtractor","t","keyboardType","autoComplete","isNumber","maxHeight","MaterialCommunityIcons","addAssignment","marginRight","hairlineWidth","borderTopColor","assignment_info_container","name_web","lineHeight","paddingBottom","category_web","paddingTop","input_container","dash","textAlignVertical","dropdown_text_name","dropdown_text_value","isDropdown","setIsDropdown","totalWeight","reduce","hasScore","update","updatePoints","getWidth","n","max","toString","borderLeftColor","calculateMarkColor","borderLeftWidth","toLocaleDateString","outlineStyle","deleteAssignment","Constants","statusBarHeight","gpa_container","refresh_button_container","periods","setPeriods","isSubscribed","getGradebook","entries","period_number","course_info_container","teacher_web","letter_grade","slice","header","avatar","description_container","description_part_container","description_part_text","property_container","property_text","studentInfo","setStudentInfo","Image","uri","photo","student","grade","suffix","parseInt","FontAwesome","birthDate","ScrollView","AntDesign","id","gender","Feather","homeRoom","counselor","phone","email","address","currentSchool","title_container","documents","setDocuments","fetchDocuments","downloadDocument","document","file","fileName","comment","replace","filePath","FileSystem","documentDirectory","writeAsStringAsync","base64","encoding","Sharing","shareAsync","saveAs","sliceSize","byteCharacters","window","atob","byteArrays","offset","byteNumbers","i","charCodeAt","Uint8Array","Blob","base64toBlob","documentGu","doc_info_container","info_container"],"mappings":"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","file":"static/js/app.a03ef614.chunk.js","sourcesContent":["import React from 'react'\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native'\n\ntype Props = {\n  onPress: any\n  text: string\n  backgroundColor: string\n  textColor: string\n  fontFamily: string\n  containerStyle: any\n  disabled: boolean\n}\n\nconst CustomButton: React.FC<Props> = ({\n  onPress,\n  text,\n  backgroundColor,\n  textColor,\n  fontFamily,\n  containerStyle,\n  disabled\n}: Props) => {\n  return (\n    <TouchableOpacity\n      onPress={onPress}\n      style={[containerStyle, { backgroundColor: backgroundColor }]}\n      disabled={disabled}\n    >\n      <View>\n        <Text\n          style={[\n            styles.buttonText,\n            { color: textColor, fontFamily: fontFamily }\n          ]}\n        >\n          {text}\n        </Text>\n      </View>\n    </TouchableOpacity>\n  )\n}\n\nconst styles = StyleSheet.create({\n  buttonText: {\n    fontSize: 20,\n    textAlign: 'center'\n  }\n})\n\nexport default CustomButton\n","import { Colors } from '../colors/Colors'\n\nexport const LightTheme = {\n  dark: false,\n  colors: {\n    primary: Colors.primary,\n    background: Colors.white,\n    card: Colors.primary,\n    text: Colors.black,\n    border: Colors.secondary,\n    notification: Colors.accent\n  }\n}\n","export const Colors = {\n  primary: '#FEF156',\n  secondary: '#AEAC99',\n  accent: '#00F1EE',\n  middle_blue_green: '#83C5BE',\n  dark_middle_blue_green: '#298980',\n  alice_blue: '#EDF6F9',\n  onyx_gray: '#454545',\n  corn_silk_white: '#FEFAE0',\n  white: '#FFFFFF',\n  black: '#001219',\n  red: '#A30800',\n  off_white: '#F5F5F5',\n  light_gray: '#E4E4E4',\n  navy: '#000080'\n}\n","import Login from './screens/Login'\nimport React, { useState } from 'react'\nimport BottomNavigation from './navigation/BottomNavigation'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\nimport { RootStackParamList } from './types/RootStackParams'\nimport AppContext from './contexts/AppContext'\nimport { LightTheme } from './theme/LightTheme'\nimport {\n  useFonts,\n  Inter_100Thin,\n  Inter_200ExtraLight,\n  Inter_300Light,\n  Inter_400Regular,\n  Inter_500Medium,\n  Inter_600SemiBold,\n  Inter_700Bold,\n  Inter_800ExtraBold,\n  Inter_900Black\n} from '@expo-google-fonts/inter'\nimport {\n  Montserrat_100Thin,\n  Montserrat_200ExtraLight,\n  Montserrat_300Light,\n  Montserrat_400Regular,\n  Montserrat_500Medium,\n  Montserrat_600SemiBold,\n  Montserrat_700Bold,\n  Montserrat_800ExtraBold,\n  Montserrat_900Black,\n  Montserrat_100Thin_Italic,\n  Montserrat_200ExtraLight_Italic,\n  Montserrat_300Light_Italic,\n  Montserrat_400Regular_Italic,\n  Montserrat_500Medium_Italic,\n  Montserrat_600SemiBold_Italic,\n  Montserrat_700Bold_Italic,\n  Montserrat_800ExtraBold_Italic,\n  Montserrat_900Black_Italic\n} from '@expo-google-fonts/montserrat'\nimport { RussoOne_400Regular } from '@expo-google-fonts/russo-one'\nimport { SafeAreaProvider } from 'react-native-safe-area-context'\nimport FlashMessage from 'react-native-flash-message'\nimport { User } from './interfaces/User'\nimport { ActivityIndicator, Text, View } from 'react-native'\nimport { Colors } from './colors/Colors'\nimport { Client } from 'studentvue'\nimport { Marks } from './interfaces/Gradebook'\n\nconst Stack = createNativeStackNavigator<RootStackParamList>()\n\nconst App = () => {\n  const [client, setClient] = useState(undefined as Client)\n  const [marks, setMarks] = useState(undefined as Marks)\n  const [username, setUsername] = useState(undefined as string)\n  const [password, setPassword] = useState(undefined as string)\n  const user: User = {\n    username: username,\n    password: password,\n    client: client,\n    marks: marks,\n    setUsername,\n    setPassword,\n    setClient,\n    setMarks\n  }\n  let [fontsLoaded] = useFonts({\n    Inter_100Thin,\n    Inter_200ExtraLight,\n    Inter_300Light,\n    Inter_400Regular,\n    Inter_500Medium,\n    Inter_600SemiBold,\n    Inter_700Bold,\n    Inter_800ExtraBold,\n    Inter_900Black,\n    Montserrat_100Thin,\n    Montserrat_200ExtraLight,\n    Montserrat_300Light,\n    Montserrat_400Regular,\n    Montserrat_500Medium,\n    Montserrat_600SemiBold,\n    Montserrat_700Bold,\n    Montserrat_800ExtraBold,\n    Montserrat_900Black,\n    Montserrat_100Thin_Italic,\n    Montserrat_200ExtraLight_Italic,\n    Montserrat_300Light_Italic,\n    Montserrat_400Regular_Italic,\n    Montserrat_500Medium_Italic,\n    Montserrat_600SemiBold_Italic,\n    Montserrat_700Bold_Italic,\n    Montserrat_800ExtraBold_Italic,\n    Montserrat_900Black_Italic,\n    RussoOne_400Regular\n  })\n\n  if (!fontsLoaded) {\n    return (\n      <View\n        style={{\n          backgroundColor: Colors.primary,\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center'\n        }}\n      >\n        <Text style={{ marginBottom: 10 }}>Loading Schools...</Text>\n        <ActivityIndicator\n          color={Colors.secondary}\n          animating={true}\n          size=\"large\"\n        />\n      </View>\n    )\n  }\n\n  return (\n    <>\n      <SafeAreaProvider>\n        <AppContext.Provider value={user}>\n          <NavigationContainer theme={LightTheme}>\n            <Stack.Navigator>\n              <Stack.Screen\n                name=\"Login\"\n                component={Login}\n                options={{\n                  headerShown: false\n                }}\n              />\n              <Stack.Screen\n                name=\"Menu\"\n                component={BottomNavigation}\n                options={{\n                  headerShown: false\n                }}\n              />\n            </Stack.Navigator>\n          </NavigationContainer>\n        </AppContext.Provider>\n      </SafeAreaProvider>\n      <FlashMessage position=\"top\" />\n    </>\n  )\n}\n\nexport default App\n","import React, { useContext, useRef, useState } from 'react'\nimport {\n  TextInput,\n  View,\n  Text,\n  StyleSheet,\n  ActivityIndicator,\n  SafeAreaView,\n  Platform,\n  Linking,\n  KeyboardAvoidingView,\n  TouchableOpacity,\n  ImageBackground,\n  Dimensions\n} from 'react-native'\nimport StudentVue from 'studentvue'\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack'\nimport { RootStackParamList } from '../types/RootStackParams'\nimport { useNavigation } from '@react-navigation/native'\nimport CustomButton from '../components/CustomButton'\nimport AppContext from '../contexts/AppContext'\nimport BouncyCheckbox from 'react-native-bouncy-checkbox'\nimport { convertGradebook } from '../gradebook/GradeUtil'\nimport { Colors } from '../colors/Colors'\nimport AwesomeAlert from 'react-native-awesome-alerts'\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\nimport DropDownPicker from 'react-native-dropdown-picker'\nimport { SchoolDistrict } from 'studentvue/StudentVue/StudentVue.interfaces'\nimport { useCookies } from 'react-cookie'\nimport * as SecureStore from 'expo-secure-store'\nimport AsyncStorage from '@react-native-async-storage/async-storage'\nimport useAsyncEffect from 'use-async-effect'\nimport { FontAwesome5 } from '@expo/vector-icons'\nimport Modal from 'react-native-modal'\n\ntype loginScreenProp = NativeStackNavigationProp<RootStackParamList, 'Login'>\n\ntype loginInfo = 'username' | 'password' | 'district'\n\nconst Login = () => {\n  const navigation = useNavigation<loginScreenProp>()\n  const refInput = useRef<TextInput | null>(null)\n  const { username, password, setUsername, setPassword, setClient, setMarks } =\n    useContext(AppContext)\n  const [isLoading, setIsLoading] = useState(false)\n  const [isChecked, setToggleCheckBox] = useState(false)\n  const [showAlert, setShowAlert] = useState(false)\n  const [errorMessage, setErrorMessage] = useState(undefined as string)\n\n  const [firstLaunch, setFirstLaunch] = useState(false)\n\n  const [isModalVisible, setModalVisible] = useState(false)\n\n  const [cookies, setCookie, removeCookie] = useCookies([\n    'username',\n    'password',\n    'district'\n  ] as loginInfo[])\n\n  const [open, setOpen] = useState(false)\n  const [value, setValue] = useState(undefined as string)\n  const [list, setList] = useState(\n    require('../assets/districts.json').map((d: SchoolDistrict) => {\n      return { label: d.name, value: d.name }\n    })\n  )\n\n  useAsyncEffect(async () => {\n    savedCredentials()\n  }, [])\n\n  async function savedCredentials() {\n    const username: string = await getValueFor('username')\n    const password: string = await getValueFor('password')\n    const value: string = await getValueFor('district')\n\n    // Auto login\n    if (username && password && value) {\n      setUsername(username)\n      setPassword(password)\n      setValue(value)\n      setIsLoading(true)\n      setToggleCheckBox(true)\n      try {\n        const client = await StudentVue.login(\n          require('../assets/districts.json').find(\n            (d: SchoolDistrict) => d.name === value\n          ).parentVueUrl,\n          {\n            username: username,\n            password: password\n          }\n        )\n        const gradebook = await client.gradebook()\n        const marks = await convertGradebook(gradebook)\n        setClient(client)\n        setMarks(marks)\n      } catch (err) {\n        setIsLoading(false)\n        alert(err.message)\n        return\n      }\n      setIsLoading(false)\n      navigation.navigate('Menu')\n    } else {\n      setFirstLaunch(true)\n    }\n  }\n\n  function alert(message: string) {\n    setErrorMessage(message)\n    setShowAlert(true)\n  }\n\n  async function onLogin() {\n    setIsLoading(true)\n    if (!username) {\n      alert('Enter your username')\n      setIsLoading(false)\n      return\n    }\n    if (!password) {\n      alert('Enter your password')\n      setIsLoading(false)\n      return\n    }\n    if (!value) {\n      alert('Select your school district')\n      setIsLoading(false)\n      return\n    }\n    try {\n      const client = await StudentVue.login(\n        require('../assets/districts.json').find(\n          (d: SchoolDistrict) => d.name === value\n        ).parentVueUrl,\n        {\n          username: username,\n          password: password\n        }\n      )\n      const gradebook = await client.gradebook()\n      const marks = await convertGradebook(gradebook)\n      setClient(client)\n      setMarks(marks)\n    } catch (err) {\n      setIsLoading(false)\n      alert(err.message)\n      return\n    }\n    if (isChecked) {\n      save('username', username)\n      save('password', password)\n      save('district', value)\n    } else {\n      remove('username')\n      remove('password')\n      remove('username')\n    }\n    setIsLoading(false)\n    navigation.navigate('Menu')\n  }\n\n  async function openInstagram(username: string) {\n    if (Platform.OS !== 'web') {\n      const appUrl = `instagram://user?username=${username}`\n      try {\n        if (await Linking.canOpenURL(appUrl)) {\n          Linking.openURL(appUrl)\n        } else {\n          try {\n            Linking.openURL(`https://instagram.com/${username}`)\n          } catch (err) {\n            alert('Cannot open Instagram')\n          }\n        }\n      } catch (err) {\n        alert('Cannot open Instagram')\n      }\n    } else {\n      try {\n        Linking.openURL(`https://instagram.com/${username}`)\n      } catch (err) {\n        alert('Cannot open Instagram')\n      }\n    }\n  }\n\n  function nameFontSize(): number {\n    if (Platform.OS === 'web') return 60\n    return 40\n  }\n\n  function descriptionFontSize(): number {\n    if (Platform.OS === 'web') return 25\n    return 20\n  }\n\n  function mountainSize(): number {\n    if (Platform.OS === 'web') return 40\n    return 30\n  }\n\n  async function save(key: loginInfo, value: string) {\n    if (value === null) return\n    if (Platform.OS === 'web') {\n      setCookie(key, value, { path: '/' })\n    } else {\n      await SecureStore.setItemAsync(key, value)\n    }\n  }\n\n  async function getValueFor(key: loginInfo) {\n    if (Platform.OS === 'web') {\n      cookies[key]\n    } else {\n      return await SecureStore.getItemAsync(key)\n    }\n  }\n\n  const remove = async (key: loginInfo) => {\n    if (Platform.OS === 'web') {\n      removeCookie(key, { path: '/' })\n    } else {\n      await SecureStore.deleteItemAsync(key)\n    }\n  }\n\n  const setAsyncStorage = async (key: string, value: string) => {\n    try {\n      await AsyncStorage.setItem(key, value)\n    } catch (e) {}\n  }\n\n  const getAsyncStorage = async (key: string): Promise<string> => {\n    try {\n      return await AsyncStorage.getItem(key)\n    } catch (e) {\n      return null\n    }\n  }\n\n  return (\n    <>\n      <Modal\n        isVisible={isModalVisible}\n        coverScreen={true}\n        onBackdropPress={() => setModalVisible(!isModalVisible)}\n        animationIn={'fadeIn'}\n        animationOut={'fadeOut'}\n      >\n        <View style={styles.modal}>\n          <View style={styles.modal_view}>\n            <Text style={styles.security_modal}>\n              We do not collect/save your login information. Info entered is\n              sent directly to your school district's StudentVue website.\n            </Text>\n            <FontAwesome.Button\n              name=\"github\"\n              backgroundColor=\"transparent\"\n              iconStyle={{\n                color: Colors.black\n              }}\n              underlayColor=\"none\"\n              activeOpacity={0.5}\n              size={25}\n              onPress={() =>\n                Linking.openURL('https://github.com/vaporrrr/Summit')\n              }\n            ></FontAwesome.Button>\n          </View>\n        </View>\n      </Modal>\n      <ImageBackground\n        source={require('../assets/mountainbackground.png')}\n        resizeMode=\"cover\"\n        style={{ flex: 1 }}\n      >\n        <SafeAreaView style={{ alignItems: 'center' }}>\n          <View style={styles.horizontal_container}>\n            <Text style={[styles.name, { fontSize: nameFontSize() }]}>\n              Summit\n            </Text>\n            <View style={styles.mountain}>\n              <FontAwesome5\n                name=\"mountain\"\n                size={mountainSize()}\n                color=\"black\"\n              />\n            </View>\n          </View>\n          <Text\n            style={[styles.description, { fontSize: descriptionFontSize() }]}\n          >\n            Grade Viewer\n          </Text>\n        </SafeAreaView>\n        <KeyboardAvoidingView\n          style={styles.container}\n          behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n        >\n          {firstLaunch && (\n            <View style={styles.login_info_container}>\n              <View style={styles.horizontal_container}>\n                <Text style={styles.security}>\n                  This app is safe to use and open source\n                </Text>\n                <FontAwesome.Button\n                  name=\"info-circle\"\n                  backgroundColor=\"transparent\"\n                  iconStyle={{\n                    color: Colors.black\n                  }}\n                  underlayColor=\"none\"\n                  activeOpacity={0.5}\n                  size={18}\n                  onPress={() => setModalVisible(true)}\n                ></FontAwesome.Button>\n              </View>\n              <Text style={styles.login_info}>\n                Login info is the same as StudentVue\n              </Text>\n            </View>\n          )}\n          <TextInput\n            defaultValue={username}\n            onChangeText={(u) => setUsername(u)}\n            placeholder={'Username'}\n            style={styles.input}\n            returnKeyType=\"next\"\n            onSubmitEditing={() => refInput.current.focus()}\n            blurOnSubmit={false}\n          />\n          <TextInput\n            defaultValue={password}\n            onChangeText={(p) => setPassword(p)}\n            placeholder={'Password'}\n            secureTextEntry={true}\n            style={styles.input}\n            returnKeyType=\"next\"\n            ref={refInput}\n            onSubmitEditing={() => setOpen(true)}\n          />\n          <DropDownPicker\n            searchable={true}\n            open={open}\n            value={value}\n            items={list}\n            setOpen={setOpen}\n            setValue={setValue}\n            setItems={setList}\n            dropDownDirection={'BOTTOM'}\n            style={styles.dropdown}\n            dropDownContainerStyle={{\n              ...(open\n                ? { height: Dimensions.get('window').height / 2 - 125 }\n                : {})\n            }}\n            textStyle={styles.dropdown_text}\n            containerStyle={styles.dropdown_container}\n            listMode={'FLATLIST'}\n            translation={{\n              SEARCH_PLACEHOLDER: 'Enter School District Name',\n              PLACEHOLDER: 'Select School District',\n              NOTHING_TO_SHOW:\n                'Nothing found, make sure you are entering your DISTRICT NAME not SCHOOL NAME'\n            }}\n            tickIconStyle={styles.dropdown_tick}\n            listItemLabelStyle={styles.dropdown_item}\n            searchContainerStyle={styles.dropdown_search_container}\n            searchTextInputStyle={styles.dropdown_search_text}\n            listItemContainerStyle={styles.dropdown_list_item_container}\n            renderListItem={(props) => {\n              return (\n                <TouchableOpacity\n                  {...props}\n                  style={[\n                    props.listItemContainerStyle,\n                    {\n                      backgroundColor: props.isSelected && Colors.light_gray\n                    }\n                  ]}\n                  onPress={() => {\n                    setValue(props.value)\n                    setOpen(false)\n                  }}\n                >\n                  <View style={styles.district_name_container}>\n                    <Text numberOfLines={1} style={props.listItemLabelStyle}>\n                      {props.label}\n                    </Text>\n                  </View>\n                </TouchableOpacity>\n              )\n            }}\n          ></DropDownPicker>\n          <View style={styles.checkbox_container}>\n            <BouncyCheckbox\n              size={24}\n              fillColor={Colors.accent}\n              unfillColor=\"transparent\"\n              disableText\n              iconStyle={{ borderColor: Colors.black }}\n              isChecked={isChecked}\n              disableBuiltInState\n              onPress={async () => {\n                setToggleCheckBox(!isChecked)\n              }}\n            />\n            <Text style={styles.save_text}>Save Login Information</Text>\n          </View>\n          <CustomButton\n            onPress={() => {\n              if (!isLoading) onLogin()\n            }}\n            text={'Login'}\n            backgroundColor={\n              !isLoading ? Colors.navy : 'rgba(100, 100, 100, 0.6)'\n            }\n            textColor={Colors.white}\n            fontFamily=\"Inter_800ExtraBold\"\n            containerStyle={styles.button_container}\n            disabled={isLoading}\n          ></CustomButton>\n          <ActivityIndicator\n            color={Colors.secondary}\n            animating={isLoading}\n            style={{ marginBottom: 50 }}\n            size=\"large\"\n          />\n          <View\n            style={{\n              alignItems: 'center',\n              position: 'absolute',\n              bottom: 20\n            }}\n          >\n            <View style={styles.row_container}>\n              <View style={styles.insta_button_container}>\n                <FontAwesome.Button\n                  name=\"instagram\"\n                  backgroundColor=\"transparent\"\n                  iconStyle={styles.insta_button}\n                  underlayColor=\"none\"\n                  activeOpacity={0.5}\n                  size={28}\n                  onPress={() => openInstagram('richardyin99')}\n                ></FontAwesome.Button>\n                <Text style={styles.insta_text}>Richard Y</Text>\n              </View>\n              <View style={styles.insta_button_container}>\n                <FontAwesome.Button\n                  name=\"instagram\"\n                  backgroundColor=\"transparent\"\n                  iconStyle={styles.insta_button}\n                  underlayColor=\"none\"\n                  activeOpacity={0.5}\n                  size={28}\n                  onPress={() => openInstagram('karthik.whynot')}\n                ></FontAwesome.Button>\n                <Text style={styles.insta_text}>Karthik M</Text>\n              </View>\n            </View>\n          </View>\n        </KeyboardAvoidingView>\n      </ImageBackground>\n      <AwesomeAlert\n        show={showAlert}\n        showProgress={false}\n        title={'Error'}\n        message={errorMessage}\n        closeOnTouchOutside={true}\n        closeOnHardwareBackPress={true}\n        showCancelButton={false}\n        showConfirmButton={true}\n        confirmText={'Ok'}\n        confirmButtonColor={Colors.primary}\n        confirmButtonTextStyle={{ color: Colors.black }}\n        onConfirmPressed={() => {\n          setShowAlert(false)\n        }}\n      ></AwesomeAlert>\n    </>\n  )\n}\n\nexport default Login\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    alignSelf: 'center',\n    justifyContent: 'center',\n    marginTop: 10\n  },\n  horizontal_container: {\n    flexDirection: 'row',\n    marginTop: 10\n  },\n  modal: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    alignSelf: 'center',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    width: 250,\n    height: 140\n  },\n  modal_view: {\n    width: 250,\n    height: 140,\n    padding: 15\n  },\n  security_modal: {\n    fontFamily: 'Inter_400Regular'\n  },\n  mountain: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginLeft: 5\n  },\n  name: {\n    fontFamily: 'Montserrat_900Black'\n  },\n  description: {\n    fontFamily: 'RussoOne_400Regular',\n    textAlign: 'center'\n  },\n  login_info_container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  login_info: {\n    fontFamily: 'Montserrat_300Light_Italic',\n    fontSize: 12,\n    marginBottom: 10,\n    marginTop: 15\n  },\n  security: {\n    fontFamily: 'Inter_600SemiBold',\n    fontSize: 14,\n    marginTop: 8\n  },\n  checkbox_container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 10\n  },\n  input: {\n    width: 250,\n    height: 50,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: Colors.black,\n    borderRadius: 5,\n    marginBottom: 10\n  },\n  dropdown: {\n    borderWidth: 1,\n    borderColor: Colors.black,\n    width: 250,\n    marginBottom: 10,\n    backgroundColor: 'transparent',\n    padding: 10,\n    borderRadius: 5\n  },\n  dropdown_text: {\n    fontFamily: 'Inter_700Bold',\n    fontSize: 12\n  },\n  dropdown_container: {\n    width: 250\n  },\n  dropdown_item: {\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    fontFamily: 'Inter_600SemiBold'\n  },\n  dropdown_tick: {\n    marginLeft: 10\n  },\n  dropdown_search_container: {\n    padding: 10,\n    borderBottomWidth: 0\n  },\n  dropdown_search_text: {\n    fontFamily: 'Inter_400Regular'\n  },\n  dropdown_list_item_container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  district_name_container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-start'\n  },\n  loading: {\n    margin: 'auto'\n  },\n  button_container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'relative',\n    width: 100,\n    height: 50,\n    padding: 10,\n    borderRadius: 10,\n    borderWidth: 0,\n    marginBottom: 10\n  },\n  save_text: {\n    marginLeft: 8,\n    fontFamily: 'Inter_400Regular'\n  },\n  row_container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  insta_button_container: {\n    marginHorizontal: 10\n  },\n  insta_button: {\n    color: Colors.black\n  },\n  insta_text: {\n    fontFamily: 'Inter_300Light',\n    fontSize: 10\n  }\n})\n","import React from 'react'\nimport { User } from '../interfaces/User'\n\nconst AppContext = React.createContext<User>(null)\n\nexport default AppContext\n","import { Gradebook } from 'studentvue'\nimport { Colors } from '../colors/Colors'\nimport { Assignment, Category, Course, Marks } from '../interfaces/Gradebook'\n\n// Some course names have the course ID at the end, ex: AP History A (SOC49351)\nconst parseCourseName = (name: string) => {\n  return name.substring(0, name.lastIndexOf('(')).trim()\n}\n\nconst convertGradebook = (gradebook: Gradebook) => {\n  let marks: Marks = {\n    gpa: 0,\n    courses: new Map<string, Course>(),\n    reportingPeriod: {\n      name: gradebook.reportingPeriod.current.name,\n      index: gradebook.reportingPeriod.current.index\n    },\n    reportingPeriods: gradebook.reportingPeriod.available.map((p) => {\n      return { name: p.name, index: p.index }\n    })\n  }\n  for (const course of gradebook.courses) {\n    marks.courses.set(course.title, {\n      name: course.title,\n      period: gradebook.courses.findIndex((c) => c.title === course.title) + 1,\n      teacher: course.staff.name,\n      points: 0,\n      total: 0,\n      value: NaN,\n      assignments: [],\n      categories: new Map<string, Category>()\n    })\n    const c = marks.courses.get(course.title)\n    for (const category of course.marks[0].weightedCategories) {\n      if (category.type.toUpperCase() !== 'TOTAL') {\n        c.categories.set(category.type, {\n          name: category.type,\n          points: 0,\n          total: 0,\n          value: NaN,\n          weight: parseFloat(category.weight.standard)\n        })\n      }\n    }\n    for (const assignment of course.marks[0].assignments) {\n      const value = assignment.score.value\n      const points = parsePoints(assignment.points)\n      const a: Assignment = {\n        name: assignment.name,\n        category: assignment.type,\n        status: value != 'Not Graded' && value != 'Not Due' ? 'Graded' : value,\n        notes: assignment.notes,\n        points: points[0],\n        total: points[1],\n        modified: false,\n        date: {\n          due: assignment.date.due,\n          start: assignment.date.start\n        }\n      }\n      c.assignments.push(a)\n    }\n  }\n  marks = calculatePoints(marks)\n  return new Promise((resolve) => {\n    resolve(marks)\n  })\n}\n\nconst calculatePoints = (marks: Marks) => {\n  marks.gpa = 0\n  let numOfCourses = 0\n  for (const course of marks.courses.values()) {\n    ;(course.points = 0), (course.total = 0), (course.value = NaN)\n    for (const category of course.categories.values()) {\n      ;(category.points = 0), (category.total = 0), (category.value = NaN)\n    }\n    for (const assignment of course.assignments) {\n      const category = course.categories.get(assignment.category)\n      if (category && !isNaN(assignment.points) && !isNaN(assignment.total)) {\n        category.points += assignment.points\n        category.total += assignment.total\n        category.value = category.points / category.total\n      }\n    }\n    for (const category of course.categories.values()) {\n      if (!isNaN(category.value)) {\n        course.points += category.value * category.weight\n        course.total += category.weight\n      }\n    }\n    course.value = roundTo((course.points / course.total) * 100, 2)\n    if (!isNaN(course.value)) {\n      if (course.value >= 89.5) {\n        marks.gpa += 4\n      } else if (course.value >= 79.5) {\n        marks.gpa += 3\n      } else if (course.value >= 69.5) {\n        marks.gpa += 2\n      } else if (course.value >= 59.5) {\n        marks.gpa += 1\n      }\n      numOfCourses++\n    }\n  }\n  marks.gpa = roundTo(marks.gpa / numOfCourses, 2)\n  return marks\n}\n\nconst parsePoints = (points: string) => {\n  const regex = /^(\\d+\\.?\\d*|\\.\\d+) \\/ (\\d+\\.?\\d*|\\.\\d+)$/\n  if (points.match(regex)) {\n    const p = points.split(regex)\n    return [parseFloat(p[1]), parseFloat(p[2])]\n  } else {\n    return [NaN, parseFloat(points)]\n  }\n}\n\nconst roundTo = (num: number, places: number) => {\n  const multiplicator = Math.pow(10, places)\n  num = parseFloat((num * multiplicator).toFixed(11))\n  const test = Math.round(num) / multiplicator\n  return +test.toFixed(places)\n}\n\nconst deleteAssignment = (marks: Marks, course: string, assignment: string) => {\n  const newMarks = Object.assign({}, marks)\n  newMarks.courses.get(course).assignments = newMarks.courses\n    .get(course)\n    .assignments.filter((a) => a.name !== assignment)\n  return calculatePoints(newMarks)\n}\n\nconst updatePoints = (\n  marks: Marks,\n  course: string,\n  assignmentName: string,\n  points: number,\n  type: string\n) => {\n  const newMarks = Object.assign({}, marks)\n  const assignment = newMarks.courses\n    .get(course)\n    .assignments.find((a) => a.name === assignmentName)\n  if (type === 'earned') {\n    assignment.points = points\n  } else if (type === 'total') {\n    assignment.total = points\n  }\n  assignment.modified = true\n  return calculatePoints(newMarks)\n}\n\nconst addAssignment = (\n  marks: Marks,\n  course: Course,\n  assignment: string,\n  category: string,\n  points: number,\n  total: number\n) => {\n  let name = assignment.length === 0 ? 'Assignment' : assignment\n  if (course.assignments.some((a) => a.name === name)) {\n    let indentifier = 2\n    while (course.assignments.some((a) => a.name === name + indentifier)) {\n      indentifier++\n    }\n    name = name + indentifier\n  }\n  course.assignments.unshift({\n    name: name,\n    category: category,\n    status: 'Graded',\n    notes: '',\n    points: points,\n    total: total,\n    modified: true,\n    date: {\n      due: new Date(),\n      start: new Date()\n    }\n  })\n  marks.courses.set(course.name, course)\n  const m = Object.assign({}, marks)\n  return calculatePoints(m)\n}\n\nconst calculateMarkColor = (mark: number) => {\n  switch (calculateLetterGrade(mark)) {\n    case 'A':\n      return '#10C212'\n    case 'B':\n      return '#1E2EE6'\n    case 'C':\n      return '#F5A327'\n    case 'D':\n      return '#C72222'\n    case 'E':\n      return '#330505'\n    case 'F':\n      return Colors.black\n  }\n}\n\nconst calculateLetterGrade = (mark: number) => {\n  if (mark >= 89.5) {\n    return 'A'\n  } else if (mark >= 79.5) {\n    return 'B'\n  } else if (mark >= 69.5) {\n    return 'C'\n  } else if (mark >= 59.5) {\n    return 'D'\n  } else if (mark >= 49.5) {\n    return 'E'\n  } else {\n    return 'F'\n  }\n}\n\nconst isNumber = (input: string) => {\n  return /^[0-9.]+$/g.test(input)\n}\n\nconst suffix = (num: number) => {\n  const j = num % 10,\n    k = num % 100\n  if (j === 1 && k !== 11) {\n    return 'st'\n  }\n  if (j === 2 && k !== 12) {\n    return 'nd'\n  }\n  if (j === 3 && k !== 13) {\n    return 'rd'\n  }\n  return 'th'\n}\n\nexport {\n  parseCourseName,\n  convertGradebook,\n  calculatePoints,\n  parsePoints,\n  roundTo,\n  deleteAssignment,\n  updatePoints,\n  addAssignment,\n  calculateMarkColor,\n  calculateLetterGrade,\n  isNumber,\n  suffix\n}\n","module.exports = __webpack_public_path__ + \"static/media/mountainbackground.240775b1.png\";","import { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\nimport Grades from '../screens/Grades'\nimport Profile from '../screens/Profile'\nimport React from 'react'\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack'\nimport { RootStackParamList } from '../types/RootStackParams'\nimport { useNavigation } from '@react-navigation/native'\nimport { Ionicons } from '@expo/vector-icons'\nimport { MaterialIcons } from '@expo/vector-icons'\nimport Documents from '../screens/Documents'\nimport { TouchableOpacity } from 'react-native'\nimport { Colors } from '../colors/Colors'\n\nconst Tab = createBottomTabNavigator()\ntype navScreenProp = NativeStackNavigationProp<RootStackParamList, 'Menu'>\n\nconst EmptyComponent = () => null\n\nconst App = () => {\n  const navigation = useNavigation<navScreenProp>()\n\n  return (\n    <Tab.Navigator\n      screenOptions={{\n        tabBarShowLabel: false,\n        tabBarStyle: {\n          borderTopWidth: 1,\n          overflow: 'hidden'\n        }\n      }}\n    >\n      <Tab.Screen\n        name=\"Grades\"\n        component={Grades}\n        options={{\n          headerShown: false,\n          tabBarIcon: (tabInfo) => {\n            return tabInfo.focused ? (\n              <MaterialIcons\n                name=\"insert-chart\"\n                size={30}\n                color={Colors.navy}\n              />\n            ) : (\n              <MaterialIcons\n                name=\"insert-chart-outlined\"\n                size={30}\n                color={Colors.secondary}\n              />\n            )\n          }\n        }}\n      />\n      <Tab.Screen\n        name=\"Documents\"\n        component={Documents}\n        options={{\n          headerShown: false,\n          tabBarIcon: (tabInfo) => {\n            return tabInfo.focused ? (\n              <Ionicons name=\"folder\" size={30} color={Colors.navy} />\n            ) : (\n              <Ionicons\n                name=\"folder-outline\"\n                size={30}\n                color={Colors.secondary}\n              />\n            )\n          }\n        }}\n      />\n      <Tab.Screen\n        name=\"Profile\"\n        component={Profile}\n        options={{\n          headerShown: false,\n          tabBarIcon: (tabInfo) => {\n            return tabInfo.focused ? (\n              <Ionicons name=\"person\" size={30} color={Colors.navy} />\n            ) : (\n              <Ionicons\n                name=\"person-outline\"\n                size={30}\n                color={Colors.secondary}\n              />\n            )\n          }\n        }}\n      />\n      <Tab.Screen\n        name=\"Logout\"\n        component={EmptyComponent}\n        options={({ navigation }) => ({\n          headerShown: false,\n          tabBarIcon: () => {\n            return (\n              <Ionicons name=\"exit-outline\" size={32} color={Colors.black} />\n            )\n          },\n          tabBarButton: (props) => (\n            <TouchableOpacity\n              {...props}\n              onPress={() => navigation.navigate('Login')}\n            />\n          )\n        })}\n      />\n    </Tab.Navigator>\n  )\n}\n\nexport default App\n","import React, { useState } from 'react'\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\nimport CourseDetails from './CourseDetails'\nimport Courses from './Courses'\nimport GradeContext from '../contexts/GradeContext'\n\nconst Stack = createNativeStackNavigator()\n\nconst StackNavigator = () => {\n  const [course, setCourse] = useState(undefined as string)\n\n  return (\n    <GradeContext.Provider\n      value={{ courseHeader: course, setCourse: setCourse }}\n    >\n      <Stack.Navigator>\n        <Stack.Screen\n          name=\"Courses\"\n          component={Courses}\n          options={{\n            headerShown: false\n          }}\n        />\n        <Stack.Screen\n          name=\"Course Details\"\n          component={CourseDetails}\n          options={{\n            headerShown: false\n          }}\n        />\n      </Stack.Navigator>\n    </GradeContext.Provider>\n  )\n}\n\nexport default StackNavigator\n","import { useNavigation } from '@react-navigation/native'\nimport React, { useContext, useEffect, useState } from 'react'\nimport {\n  ActivityIndicator,\n  FlatList,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View\n} from 'react-native'\nimport AppContext from '../contexts/AppContext'\nimport Assignment from '../components/Assignment'\nimport {\n  addAssignment,\n  convertGradebook,\n  parseCourseName,\n  isNumber\n} from '../gradebook/GradeUtil'\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\nimport { LightTheme } from '../theme/LightTheme'\nimport Modal from 'react-native-modal'\nimport { TextInput } from 'react-native-gesture-handler'\nimport DropDownPicker from 'react-native-dropdown-picker'\nimport CustomButton from '../components/CustomButton'\nimport { Colors } from '../colors/Colors'\nimport { showMessage } from 'react-native-flash-message'\nimport { SafeAreaView } from 'react-native-safe-area-context'\nimport AwesomeAlert from 'react-native-awesome-alerts'\nimport { MaterialCommunityIcons } from '@expo/vector-icons'\n\nconst CourseDetails = ({ route }) => {\n  const courseName = route.params.title\n  const navigation = useNavigation()\n\n  const { marks, client, setMarks } = useContext(AppContext)\n  const course = marks.courses.get(courseName)\n\n  const [isModalVisible, setModalVisible] = useState(false)\n  const [open, setOpen] = useState(false)\n  const [category, setCategory] = useState(\n    marks.courses.get(courseName).categories.values().next().value?.name\n  )\n  const [categories, setCategories] = useState(\n    Array.from(marks.courses.get(courseName).categories.values()).map((c) => {\n      return { label: c.name, value: c.name }\n    })\n  )\n  const [assignmentName, setAssignmentName] = useState('')\n  const [points, setPoints] = useState('')\n  const [total, setTotal] = useState('')\n\n  const [isLoading, setIsLoading] = useState(false)\n  const [showAlert, setShowAlert] = useState(false)\n  const [errorMessage, setErrorMessage] = useState()\n\n  useEffect(() => {\n    if (isModalVisible) {\n      setAssignmentName('')\n      setPoints('')\n      setTotal('')\n    }\n  }, [isModalVisible])\n\n  const toggleModal = () => {\n    setModalVisible(!isModalVisible)\n  }\n\n  const add = () => {\n    setMarks(\n      addAssignment(\n        marks,\n        course,\n        assignmentName,\n        category,\n        parseFloat(points),\n        parseFloat(total)\n      )\n    )\n    toggleModal()\n  }\n\n  const refreshMarks = async () => {\n    setIsLoading(true)\n    try {\n      setMarks(\n        await convertGradebook(\n          await client.gradebook(marks.reportingPeriod.index)\n        )\n      )\n      showMessage({\n        message: 'Refreshed',\n        type: 'info',\n        icon: 'success'\n      })\n    } catch (err) {\n      setErrorMessage(err.message)\n      setShowAlert(true)\n    }\n    setIsLoading(false)\n  }\n\n  return (\n    <>\n      <SafeAreaView\n        style={{ flex: 1 }}\n        pointerEvents={isLoading ? 'none' : 'auto'}\n      >\n        <View style={styles.course_details_container}>\n          <View\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'flex-start'\n            }}\n          >\n            <FontAwesome.Button\n              name=\"chevron-left\"\n              backgroundColor=\"transparent\"\n              iconStyle={{\n                color: Colors.secondary\n              }}\n              underlayColor=\"none\"\n              activeOpacity={0.5}\n              size={24}\n              onPress={() => navigation.goBack()}\n            ></FontAwesome.Button>\n          </View>\n          <Text numberOfLines={1} style={styles.course_details}>\n            {isNaN(course.value) ? 'N/A' : course.value} |{' '}\n            {parseCourseName(courseName)}\n          </Text>\n          <View\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'flex-end'\n            }}\n          >\n            <FontAwesome.Button\n              name=\"plus-circle\"\n              backgroundColor=\"transparent\"\n              iconStyle={{\n                color: Colors.secondary\n              }}\n              size={24}\n              underlayColor=\"none\"\n              activeOpacity={0.5}\n              onPress={() => toggleModal()}\n            ></FontAwesome.Button>\n            <FontAwesome.Button\n              name=\"refresh\"\n              backgroundColor=\"transparent\"\n              iconStyle={{\n                color: Colors.secondary\n              }}\n              underlayColor=\"none\"\n              activeOpacity={0.5}\n              size={24}\n              onPress={() => refreshMarks()}\n            ></FontAwesome.Button>\n          </View>\n        </View>\n        <FlatList\n          data={course.assignments}\n          renderItem={({ item }) => (\n            <Assignment name={item.name} course={courseName}></Assignment>\n          )}\n          keyExtractor={(item) => item.name}\n        />\n        <Modal\n          isVisible={isModalVisible}\n          coverScreen={true}\n          onBackdropPress={toggleModal}\n          animationIn={'fadeIn'}\n          animationOut={'fadeOut'}\n        >\n          <View style={styles.modal}>\n            <View style={styles.modal_view}>\n              <TextInput\n                value={assignmentName}\n                placeholder=\"Name (Optional)\"\n                onChangeText={(t) => {\n                  setAssignmentName(t)\n                }}\n                style={[styles.input, { marginTop: 10 }]}\n              ></TextInput>\n              <TextInput\n                value={points}\n                keyboardType=\"decimal-pad\"\n                autoComplete=\"off\"\n                placeholder=\"Points Earned\"\n                onChangeText={(t) => {\n                  if (isNumber(t) || t === '') setPoints(t)\n                }}\n                style={styles.input}\n              ></TextInput>\n              <TextInput\n                value={total}\n                keyboardType=\"decimal-pad\"\n                autoComplete=\"off\"\n                placeholder=\"Total Points\"\n                onChangeText={(t) => {\n                  if (isNumber(t) || t === '') setTotal(t)\n                }}\n                style={styles.input}\n              ></TextInput>\n              <View\n                style={{\n                  marginHorizontal: 7,\n                  marginTop: 7\n                }}\n              >\n                <DropDownPicker\n                  open={open}\n                  value={category}\n                  items={categories}\n                  setOpen={setOpen}\n                  setValue={setCategory}\n                  setItems={setCategories}\n                  maxHeight={null}\n                  style={styles.dropdown}\n                  textStyle={styles.dropdown_text}\n                  containerStyle={styles.dropdown_container}\n                  translation={{\n                    PLACEHOLDER: 'Select Category'\n                  }}\n                  tickIconStyle={styles.dropdown_tick}\n                  listItemLabelStyle={styles.dropdown_item}\n                  searchContainerStyle={styles.dropdown_search_container}\n                  listItemContainerStyle={styles.dropdown_list_item_container}\n                  renderListItem={(props) => {\n                    return (\n                      <TouchableOpacity\n                        {...props}\n                        style={[\n                          props.listItemContainerStyle,\n                          {\n                            backgroundColor:\n                              props.isSelected && Colors.light_gray\n                          }\n                        ]}\n                        onPress={() => {\n                          setCategory(props.value)\n                          setOpen(false)\n                        }}\n                      >\n                        <View style={styles.category_name_container}>\n                          <Text\n                            numberOfLines={1}\n                            style={props.listItemLabelStyle}\n                          >\n                            {props.label}\n                          </Text>\n                        </View>\n                        {props.isSelected && (\n                          <View style={styles.category_check_container}>\n                            <MaterialCommunityIcons\n                              name={'check'}\n                              size={20}\n                              style={{ marginHorizontal: 5 }}\n                            />\n                          </View>\n                        )}\n                      </TouchableOpacity>\n                    )\n                  }}\n                ></DropDownPicker>\n                <CustomButton\n                  onPress={add}\n                  text={'Add Assignment'}\n                  backgroundColor={LightTheme.colors.card}\n                  textColor={Colors.black}\n                  fontFamily=\"Inter_600SemiBold\"\n                  containerStyle={styles.button_container}\n                  disabled={false}\n                ></CustomButton>\n              </View>\n            </View>\n          </View>\n        </Modal>\n      </SafeAreaView>\n      {isLoading && (\n        <SafeAreaView style={styles.loading}>\n          <ActivityIndicator size={'large'} />\n        </SafeAreaView>\n      )}\n      <AwesomeAlert\n        show={showAlert}\n        showProgress={false}\n        title={'Error'}\n        message={errorMessage}\n        closeOnTouchOutside={true}\n        closeOnHardwareBackPress={true}\n        showCancelButton={false}\n        showConfirmButton={true}\n        confirmText={'Ok'}\n        confirmButtonColor={Colors.primary}\n        confirmButtonTextStyle={{ color: Colors.black }}\n        onConfirmPressed={() => {\n          setShowAlert(false)\n        }}\n      ></AwesomeAlert>\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  input: {\n    marginHorizontal: 10,\n    marginVertical: 5,\n    padding: 5,\n    borderWidth: 1,\n    height: 30,\n    borderColor: Colors.black,\n    fontFamily: 'Inter_400Regular',\n    fontSize: 12,\n    borderRadius: 5\n  },\n  modal: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    alignSelf: 'center',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    width: 330,\n    height: 250\n  },\n  modal_view: {\n    width: 330,\n    height: 250\n  },\n  button_container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignSelf: 'center',\n    width: 200,\n    height: 50,\n    borderRadius: 10,\n    borderWidth: 0,\n    margin: 10\n  },\n  course_details: {\n    fontSize: 22,\n    flex: 1,\n    flexWrap: 'wrap',\n    fontFamily: 'Inter_800ExtraBold'\n  },\n  course_details_container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  loading: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(200, 200, 200, 0.2)'\n  },\n  dropdown: {\n    borderWidth: 1,\n    borderColor: Colors.black,\n    backgroundColor: 'transparent',\n    padding: 5,\n    marginHorizontal: 10,\n    width: 310,\n    alignSelf: 'center'\n  },\n  dropdown_text: {\n    fontFamily: 'Inter_400Regular',\n    fontSize: 12\n  },\n  dropdown_container: {\n    width: 310,\n    alignSelf: 'center'\n  },\n  category_name_container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-start'\n  },\n  category_check_container: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end'\n  },\n  dropdown_item: {\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    fontFamily: 'Inter_400Regular'\n  },\n  dropdown_tick: {\n    marginLeft: 10\n  },\n  dropdown_search_container: {\n    padding: 10,\n    borderBottomWidth: 0\n  },\n  dropdown_list_item_container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  }\n})\n\nexport default CourseDetails\n","import React, { useContext, useState } from 'react'\nimport { StyleSheet, View, Text, TextInput, Platform } from 'react-native'\nimport {\n  calculateMarkColor,\n  updatePoints,\n  deleteAssignment,\n  isNumber,\n  roundTo,\n  calculateLetterGrade\n} from '../gradebook/GradeUtil'\nimport AppContext from '../contexts/AppContext'\nimport { Colors } from '../colors/Colors'\nimport { MaterialIcons } from '@expo/vector-icons'\nimport { TouchableOpacity } from 'react-native-gesture-handler'\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\n\nfunction Assignment(props) {\n  const { marks, setMarks } = useContext(AppContext)\n  const [isDropdown, setIsDropdown] = useState(false)\n  const assignment = marks.courses\n    .get(props.course)\n    .assignments.find((a) => a.name === props.name)\n  const totalWeight = Array.from(\n    marks.courses.get(props.course).categories.values()\n  ).reduce((p, c) => (isNaN(c.value) ? p : p + c.weight), 0)\n  const score = (assignment.points / assignment.total) * 100\n  const hasScore = !isNaN((assignment.points / assignment.total) * 100)\n\n  const update = (input: string, type: string) => {\n    setMarks(\n      updatePoints(\n        marks,\n        props.course,\n        assignment.name,\n        parseFloat(input),\n        type\n      )\n    )\n  }\n\n  const getWidth = (n: number) => {\n    const min = 34\n    if (isNaN(n)) return min\n    return Math.max(n.toString().length * 15, min)\n  }\n\n  return (\n    <View\n      style={[\n        styles.container,\n        props.style,\n        hasScore\n          ? {\n              borderLeftColor: calculateMarkColor(score),\n              borderLeftWidth: 3\n            }\n          : {}\n      ]}\n    >\n      <View style={[styles.horizontal_container, { height: 52 }]}>\n        <View style={styles.assignment_info_container}>\n          <Text\n            numberOfLines={1}\n            style={[\n              Platform.OS === 'web' ? styles.name_web : styles.name,\n              {\n                color: assignment.modified\n                  ? Colors.dark_middle_blue_green\n                  : Colors.navy\n              }\n            ]}\n          >\n            {props.name}\n          </Text>\n          <Text\n            numberOfLines={1}\n            style={\n              Platform.OS === 'web' ? styles.category_web : styles.category\n            }\n          >\n            {assignment.category} - {assignment.date.due.toLocaleDateString()}\n          </Text>\n        </View>\n        <View style={styles.input_container}>\n          <TextInput\n            value={isNaN(assignment.points) ? '' : assignment.points.toString()}\n            placeholder={'__'}\n            keyboardType={'decimal-pad'}\n            autoComplete={'off'}\n            style={[\n              styles.mark,\n              {\n                color: assignment.modified\n                  ? Colors.dark_middle_blue_green\n                  : Colors.black,\n                width: getWidth(assignment.points),\n                ...(Platform.OS === 'web' ? { outlineStyle: 'none' } : {})\n              }\n            ]}\n            onChangeText={(input) => {\n              if (isNumber(input) || input === '') update(input, 'earned')\n            }}\n          />\n          <Text style={styles.dash}> / </Text>\n          <TextInput\n            value={isNaN(assignment.total) ? '' : assignment.total.toString()}\n            placeholder={'__'}\n            keyboardType={'decimal-pad'}\n            autoComplete={'off'}\n            style={[\n              styles.mark,\n              {\n                color: assignment.modified\n                  ? Colors.dark_middle_blue_green\n                  : Colors.black,\n                width: getWidth(assignment.total),\n                ...(Platform.OS === 'web' ? { outlineStyle: 'none' } : {})\n              }\n            ]}\n            onChangeText={(input) => {\n              if (isNumber(input) || input === '') update(input, 'total')\n            }}\n          />\n        </View>\n        <TouchableOpacity onPress={() => setIsDropdown(!isDropdown)}>\n          <MaterialIcons\n            name={isDropdown ? 'arrow-drop-up' : 'arrow-drop-down'}\n            color={Colors.middle_blue_green}\n            size={36}\n            style={{ marginRight: 5 }}\n          />\n        </TouchableOpacity>\n      </View>\n      {isDropdown && (\n        <View style={styles.dropdown_container}>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Name:</Text>\n            <Text style={styles.dropdown_text_value}>{assignment.name}</Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Category:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {assignment.category}\n            </Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Effective Weight:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {roundTo(\n                (marks.courses\n                  .get(props.course)\n                  .categories.get(assignment.category).weight /\n                  totalWeight) *\n                  100,\n                2\n              )}\n              %\n            </Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Weight:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {\n                marks.courses\n                  .get(props.course)\n                  .categories.get(assignment.category).weight\n              }\n              %\n            </Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Grade:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {hasScore\n                ? `${roundTo(score, 2)}% (${calculateLetterGrade(score)})`\n                : 'N/A'}\n            </Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Status:</Text>\n            <Text style={styles.dropdown_text_value}>{assignment.status}</Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Due Date:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {assignment.date.due.toLocaleDateString()}\n            </Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Start Date:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {assignment.date.start.toLocaleDateString()}\n            </Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Notes:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {assignment.notes.length === 0 ? 'None' : assignment.notes}\n            </Text>\n          </View>\n          <FontAwesome.Button\n            name=\"trash-o\"\n            backgroundColor=\"transparent\"\n            iconStyle={{\n              color: Colors.red\n            }}\n            underlayColor=\"none\"\n            activeOpacity={0.5}\n            size={24}\n            onPress={() =>\n              setMarks(deleteAssignment(marks, props.course, assignment.name))\n            }\n          ></FontAwesome.Button>\n        </View>\n      )}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.off_white,\n    borderRadius: 10,\n    marginLeft: 7,\n    marginRight: 7,\n    marginTop: 7,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: Colors.secondary\n  },\n  horizontal_container: {\n    flexDirection: 'row'\n  },\n  dropdown_container: {\n    padding: 10,\n    backgroundColor: Colors.off_white,\n    borderTopColor: Colors.onyx_gray,\n    borderTopWidth: 1\n  },\n  assignment_info_container: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    marginLeft: 7,\n    flex: 1\n  },\n  name_web: {\n    color: Colors.black,\n    fontFamily: 'Inter_700Bold',\n    fontSize: 14,\n    marginHorizontal: 7,\n    lineHeight: 14 * 0.75,\n    paddingBottom: 11 - 11 * 0.75,\n    textAlign: 'left'\n  },\n  category_web: {\n    color: Colors.black,\n    fontFamily: 'Inter_400Regular',\n    fontSize: 12,\n    marginHorizontal: 7,\n    lineHeight: 11 * 0.75,\n    paddingVertical: 2,\n    marginTop: 4,\n    textAlign: 'left'\n  },\n  name: {\n    color: Colors.black,\n    fontFamily: 'Inter_700Bold',\n    fontSize: 14,\n    marginHorizontal: 7,\n    lineHeight: 14 * 0.75,\n    paddingTop: 14 - 14 * 0.75,\n    textAlign: 'left'\n  },\n  category: {\n    color: Colors.black,\n    fontFamily: 'Inter_400Regular',\n    fontSize: 12,\n    marginHorizontal: 7,\n    lineHeight: 12 * 0.75,\n    marginTop: 4,\n    paddingTop: 12 - 12 * 0.75,\n    textAlign: 'left'\n  },\n  input_container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  mark: {\n    height: 60,\n    fontSize: 23,\n    fontFamily: 'Inter_600SemiBold',\n    alignSelf: 'center'\n  },\n  dash: {\n    fontSize: 20,\n    alignSelf: 'center',\n    textAlignVertical: 'center',\n    marginRight: 3\n  },\n  dropdown_text_name: {\n    marginHorizontal: 7,\n    fontFamily: 'Montserrat_600SemiBold',\n    fontSize: 12\n  },\n  dropdown_text_value: {\n    fontFamily: 'Inter_400Regular',\n    flex: 1,\n    fontSize: 12\n  }\n})\n\nexport default Assignment\n","import React, { useContext, useState, useEffect } from 'react'\nimport AppContext from '../contexts/AppContext'\nimport {\n  SafeAreaView,\n  StyleSheet,\n  View,\n  Text,\n  ActivityIndicator,\n  Platform\n} from 'react-native'\nimport { FlatList, TouchableOpacity } from 'react-native-gesture-handler'\nimport Course from '../components/Course'\nimport DropDownPicker from 'react-native-dropdown-picker'\nimport { convertGradebook, parseCourseName } from '../gradebook/GradeUtil'\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\nimport { showMessage } from 'react-native-flash-message'\nimport { Colors } from '../colors/Colors'\nimport AwesomeAlert from 'react-native-awesome-alerts'\nimport Constants from 'expo-constants'\n\nconst Courses = ({ navigation }) => {\n  const { client, marks, setMarks } = useContext(AppContext)\n  const [open, setOpen] = useState(false)\n  const [value, setValue] = useState(marks.reportingPeriod.index)\n  const [periods, setPeriods] = useState(\n    marks.reportingPeriods.map((p) => {\n      return { label: p.name, value: p.index }\n    })\n  )\n  const [isLoading, setIsLoading] = useState(false)\n  const [showAlert, setShowAlert] = useState(false)\n  const [errorMessage, setErrorMessage] = useState()\n\n  useEffect(() => {\n    setIsLoading(true)\n    let isSubscribed = true\n    const getGradebook = async () => {\n      try {\n        const marks = await convertGradebook(await client.gradebook(value))\n        if (isSubscribed) {\n          setMarks(marks)\n        }\n      } catch (err) {\n        setErrorMessage(err.message)\n        setShowAlert(true)\n      }\n    }\n    getGradebook()\n    setIsLoading(false)\n    return () => {\n      isSubscribed = false\n    }\n  }, [value])\n\n  const refreshMarks = async () => {\n    setIsLoading(true)\n    try {\n      const gradebook = await client.gradebook(value)\n      const newMarks = await convertGradebook(gradebook)\n      setMarks(newMarks)\n    } catch (err) {\n      setErrorMessage(err.message)\n      setShowAlert(true)\n      setIsLoading(false)\n      return\n    }\n    showMessage({\n      message: 'Gradebook refreshed',\n      type: 'info',\n      icon: 'success'\n    })\n    setIsLoading(false)\n  }\n\n  return (\n    <>\n      <SafeAreaView\n        style={{ flex: 1 }}\n        pointerEvents={isLoading ? 'none' : 'auto'}\n      >\n        <DropDownPicker\n          open={open}\n          value={value}\n          items={periods}\n          setOpen={setOpen}\n          setValue={setValue}\n          setItems={setPeriods}\n          maxHeight={null}\n          style={styles.dropdown}\n          textStyle={styles.dropdown_text}\n          renderListItem={(props) => {\n            return (\n              <TouchableOpacity\n                {...props}\n                style={[\n                  props.listItemContainerStyle,\n                  {\n                    backgroundColor: props.isSelected && Colors.light_gray\n                  }\n                ]}\n                onPress={() => {\n                  setValue(props.value)\n                  setOpen(false)\n                }}\n              >\n                <View style={styles.district_name_container}>\n                  <Text numberOfLines={1} style={props.listItemLabelStyle}>\n                    {props.label}\n                  </Text>\n                </View>\n              </TouchableOpacity>\n            )\n          }}\n        ></DropDownPicker>\n        <View style={styles.row_container}>\n          {!isNaN(marks.gpa) && (\n            <View style={styles.gpa_container}>\n              <Text style={styles.gpa}>{marks.gpa} GPA</Text>\n            </View>\n          )}\n          <View style={styles.refresh_button_container}>\n            <FontAwesome.Button\n              name=\"refresh\"\n              backgroundColor=\"transparent\"\n              iconStyle={{\n                color: Colors.secondary\n              }}\n              underlayColor=\"none\"\n              activeOpacity={0.5}\n              size={24}\n              onPress={() => refreshMarks()}\n            ></FontAwesome.Button>\n          </View>\n        </View>\n        {marks && (\n          <FlatList\n            data={[...marks.courses.entries()]}\n            renderItem={({ item }) => (\n              <TouchableOpacity\n                onPress={() =>\n                  navigation.navigate('Course Details', { title: item[0] })\n                }\n              >\n                <Course\n                  name={parseCourseName(item[0])}\n                  mark={item[1].value}\n                  period={item[1].period}\n                  teacher={item[1].teacher}\n                ></Course>\n              </TouchableOpacity>\n            )}\n            keyExtractor={(item) => item[0]}\n          />\n        )}\n      </SafeAreaView>\n      {isLoading && (\n        <SafeAreaView style={styles.loading}>\n          <ActivityIndicator size={'large'} />\n        </SafeAreaView>\n      )}\n      <AwesomeAlert\n        show={showAlert}\n        showProgress={false}\n        title={'Error'}\n        message={errorMessage}\n        closeOnTouchOutside={true}\n        closeOnHardwareBackPress={true}\n        showCancelButton={false}\n        showConfirmButton={true}\n        confirmText={'Ok'}\n        confirmButtonColor={Colors.primary}\n        confirmButtonTextStyle={{ color: Colors.black }}\n        onConfirmPressed={() => {\n          setShowAlert(false)\n        }}\n      ></AwesomeAlert>\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  // android status bar not accounted for properly in safeview + dropdownpicker\n  // web needs to be shifted 11 right\n  dropdown: {\n    borderWidth: 0,\n    height: 30,\n    marginBottom: 15,\n    marginTop: Platform.OS === 'android' ? Constants.statusBarHeight : 0,\n    backgroundColor: 'transparent'\n  },\n  dropdown_text: {\n    fontFamily: 'Inter_800ExtraBold',\n    fontSize: 30\n  },\n  district_name_container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-start'\n  },\n  row_container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  gpa_container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-start'\n  },\n  gpa: {\n    marginLeft: 11,\n    fontFamily: 'Montserrat_700Bold',\n    fontSize: 22\n  },\n  refresh_button_container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  loading: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(200, 200, 200, 0.2)'\n  }\n})\n\nexport default Courses\n","import React from 'react'\nimport { StyleSheet, View, Text, Platform } from 'react-native'\nimport { Colors } from '../colors/Colors'\nimport {\n  calculateLetterGrade,\n  calculateMarkColor\n} from '../gradebook/GradeUtil'\n\nfunction Course(props) {\n  const mark = parseFloat(props.mark)\n\n  return (\n    <View style={[styles.container, props.style]}>\n      <Text style={styles.period_number}>{('0' + props.period).slice(-2)}</Text>\n      <View style={styles.course_info_container}>\n        <Text\n          numberOfLines={1}\n          style={Platform.OS === 'web' ? styles.name_web : styles.name}\n        >\n          {props.name}\n        </Text>\n        <Text\n          numberOfLines={1}\n          style={Platform.OS === 'web' ? styles.teacher_web : styles.teacher}\n        >\n          {props.teacher}\n        </Text>\n      </View>\n      <Text style={[styles.mark]}>\n        {isNaN(parseFloat(props.mark)) ? 'N/A' : props.mark}\n      </Text>\n      {!isNaN(parseFloat(props.mark)) && (\n        <Text\n          style={[\n            styles.letter_grade,\n            {\n              color: calculateMarkColor(mark)\n            }\n          ]}\n        >\n          {calculateLetterGrade(mark)}\n        </Text>\n      )}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.off_white,\n    borderRadius: 15,\n    height: 55,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginHorizontal: 7,\n    marginTop: 10,\n    padding: 10,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: Colors.secondary\n  },\n  period_number: {\n    fontFamily: 'Montserrat_800ExtraBold',\n    fontSize: 32\n  },\n  course_info_container: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    marginHorizontal: 7,\n    flex: 1\n  },\n  name_web: {\n    color: Colors.navy,\n    fontFamily: 'Montserrat_700Bold',\n    fontSize: 18,\n    marginRight: 14,\n    marginLeft: 7,\n    lineHeight: 18 * 0.75,\n    textAlign: 'left',\n    paddingBottom: 12 - 12 * 0.75\n  },\n  teacher_web: {\n    color: Colors.black,\n    fontFamily: 'Inter_400Regular',\n    fontSize: 12,\n    marginRight: 14,\n    marginLeft: 7,\n    lineHeight: 12 * 0.75,\n    paddingBottom: 2,\n    marginTop: 4,\n    textAlign: 'left'\n  },\n  name: {\n    color: Colors.navy,\n    fontFamily: 'Montserrat_700Bold',\n    fontSize: 18,\n    marginRight: 14,\n    marginLeft: 7,\n    lineHeight: 18 * 0.75,\n    paddingTop: 18 - 18 * 0.75,\n    textAlign: 'left'\n  },\n  teacher: {\n    color: Colors.black,\n    fontFamily: 'Inter_400Regular',\n    fontSize: 12,\n    marginRight: 14,\n    marginLeft: 7,\n    lineHeight: 12 * 0.75,\n    paddingTop: 12 - 12 * 0.75,\n    marginTop: 4,\n    textAlign: 'left'\n  },\n  mark: {\n    fontFamily: 'Montserrat_500Medium',\n    fontSize: 28,\n    alignSelf: 'center'\n  },\n  letter_grade: {\n    marginLeft: 7,\n    fontFamily: 'Montserrat_800ExtraBold',\n    fontSize: 32,\n    alignSelf: 'center'\n  }\n})\n\nexport default Course\n","import React from 'react'\n\ninterface CourseName {\n  courseHeader: string\n  setCourse: React.Dispatch<React.SetStateAction<string>>\n}\n\nconst GradeContext = React.createContext<CourseName>(null)\n\nexport default GradeContext\n","import React, { useContext, useState } from 'react'\nimport { ActivityIndicator, Image, StyleSheet, View, Text } from 'react-native'\nimport { StudentInfo } from 'studentvue'\nimport { Colors } from '../colors/Colors'\nimport AppContext from '../contexts/AppContext'\nimport { FontAwesome } from '@expo/vector-icons'\nimport { Feather } from '@expo/vector-icons'\nimport { AntDesign } from '@expo/vector-icons'\nimport { MaterialCommunityIcons } from '@expo/vector-icons'\nimport { suffix } from '../gradebook/GradeUtil'\nimport useAsyncEffect from 'use-async-effect'\nimport { ScrollView } from 'react-native-gesture-handler'\n\nconst Profile = () => {\n  const { client } = useContext(AppContext)\n  const [studentInfo, setStudentInfo] = useState(undefined as StudentInfo)\n\n  useAsyncEffect(async () => {\n    setStudentInfo(await client.studentInfo())\n  }, [])\n\n  return (\n    <View style={{ flex: 1 }}>\n      {!studentInfo ? (\n        <ActivityIndicator\n          color={Colors.secondary}\n          animating={true}\n          size=\"large\"\n          style={{\n            alignSelf: 'center',\n            flex: 1,\n            justifyContent: 'center'\n          }}\n        />\n      ) : (\n        <View style={{ flex: 1 }}>\n          <View style={styles.header}></View>\n          <Image\n            style={styles.avatar}\n            source={{\n              uri: `data:image/png;base64,${studentInfo.photo}`\n            }}\n          />\n          <Text style={styles.name}>{studentInfo.student.name}</Text>\n          <View style={styles.description_container}>\n            <View style={styles.description_part_container}>\n              <Text style={styles.description_part_text}>\n                {studentInfo.grade + suffix(parseInt(studentInfo.grade))}\n              </Text>\n              <FontAwesome\n                name=\"graduation-cap\"\n                size={18}\n                color={Colors.black}\n              />\n            </View>\n            <View style={styles.description_part_container}>\n              <Text style={styles.description_part_text}>\n                {studentInfo.birthDate.toLocaleDateString()}\n              </Text>\n              <FontAwesome\n                name=\"birthday-cake\"\n                size={18}\n                color={Colors.black}\n              />\n            </View>\n          </View>\n          <ScrollView>\n            <View style={styles.property_container}>\n              <AntDesign name=\"idcard\" size={26} color={Colors.black} />\n              <Text style={styles.property_text}>\n                {studentInfo.id ? `#${studentInfo.id}` : ''}\n              </Text>\n            </View>\n            <View style={styles.property_container}>\n              <MaterialCommunityIcons\n                name=\"gender-male-female\"\n                size={26}\n                color={Colors.black}\n              />\n              <Text style={styles.property_text}>{studentInfo.gender}</Text>\n            </View>\n            <View style={styles.property_container}>\n              <Feather name=\"home\" size={26} color={Colors.black} />\n              <Text style={styles.property_text}>\n                {studentInfo.homeRoom ? `Room ${studentInfo.homeRoom}` : ''}\n              </Text>\n            </View>\n            <View style={styles.property_container}>\n              <Feather name=\"user\" size={26} color={Colors.black} />\n              <Text style={styles.property_text}>\n                {studentInfo.counselor\n                  ? `Counselor: ${studentInfo.counselor.name}`\n                  : ''}\n              </Text>\n            </View>\n            <View style={styles.property_container}>\n              <Feather name=\"phone\" size={26} color={Colors.black} />\n              <Text style={styles.property_text}>{studentInfo.phone}</Text>\n            </View>\n            <View style={styles.property_container}>\n              <Feather name=\"mail\" size={26} color={Colors.black} />\n              <Text style={styles.property_text}>{studentInfo.email}</Text>\n            </View>\n            <View style={styles.property_container}>\n              <Feather name=\"map-pin\" size={26} color={Colors.black} />\n              <Text style={styles.property_text}>{studentInfo.address}</Text>\n            </View>\n            <View style={styles.property_container}>\n              <FontAwesome name=\"building-o\" size={26} color={Colors.black} />\n              <Text style={styles.property_text}>\n                {studentInfo.currentSchool}\n              </Text>\n            </View>\n          </ScrollView>\n        </View>\n      )}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  header: {\n    height: 150,\n    backgroundColor: Colors.primary\n  },\n  name: {\n    fontSize: 24,\n    fontFamily: 'Montserrat_700Bold',\n    alignSelf: 'center',\n    marginTop: 10\n  },\n  avatar: {\n    width: 130,\n    height: 130,\n    borderRadius: 130 / 2,\n    borderWidth: 4,\n    borderColor: 'white',\n    alignSelf: 'center',\n    marginTop: -130 / 2\n  },\n  description_container: {\n    marginTop: 10,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    borderColor: Colors.secondary,\n    borderWidth: 1\n  },\n  description_part_container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 10\n  },\n  description_part_text: {\n    marginTop: 5,\n    fontSize: 22,\n    fontFamily: 'Montserrat_800ExtraBold'\n  },\n  property_container: {\n    flexDirection: 'row',\n    padding: 12\n  },\n  property_text: {\n    marginHorizontal: 8,\n    fontFamily: 'Inter_400Regular',\n    fontSize: 18,\n    color: Colors.onyx_gray\n  }\n})\n\nexport default Profile\n","import React, { useContext, useState } from 'react'\nimport { SafeAreaView } from 'react-native-safe-area-context'\nimport AppContext from '../contexts/AppContext'\nimport * as Sharing from 'expo-sharing'\nimport * as FileSystem from 'expo-file-system'\nimport {\n  ActivityIndicator,\n  FlatList,\n  Platform,\n  StyleSheet,\n  Text,\n  View\n} from 'react-native'\nimport Document from 'studentvue/StudentVue/Document/Document'\nimport Doc from '../components/Document'\nimport { TouchableOpacity } from 'react-native-gesture-handler'\nimport { Colors } from '../colors/Colors'\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\nimport { showMessage } from 'react-native-flash-message'\nimport AwesomeAlert from 'react-native-awesome-alerts'\n\nconst Documents = () => {\n  const { client } = useContext(AppContext)\n  const [documents, setDocuments] = useState(undefined as Document[])\n  const [isLoading, setIsLoading] = useState(false)\n  const [showAlert, setShowAlert] = useState(false)\n  const [errorMessage, setErrorMessage] = useState()\n\n  const fetchDocuments = async () => {\n    setIsLoading(true)\n    try {\n      setDocuments(await client.documents())\n    } catch (err) {\n      setErrorMessage(err.message)\n      setShowAlert(true)\n    }\n    setIsLoading(false)\n  }\n  if (!documents && !isLoading) fetchDocuments()\n\n  const base64toBlob = (base64: string, sliceSize = 512) => {\n    const byteCharacters = window.atob(base64)\n    const byteArrays = []\n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n      const slice = byteCharacters.slice(offset, offset + sliceSize)\n      const byteNumbers = new Array(slice.length)\n      for (let i = 0; i < slice.length; i++) {\n        byteNumbers[i] = slice.charCodeAt(i)\n      }\n      byteArrays.push(new Uint8Array(byteNumbers))\n    }\n    return new Blob(byteArrays)\n  }\n\n  const downloadDocument = async (document: Document) => {\n    const file = (await document.get())[0]\n    const fileName =\n      document.comment.replace(/ /g, '_') +\n      file.file.name.substring(file.file.name.lastIndexOf('.'))\n    if (Platform.OS === 'android' || Platform.OS === 'ios') {\n      const filePath = FileSystem.documentDirectory + fileName\n      try {\n        await FileSystem.writeAsStringAsync(filePath, file.base64, {\n          encoding: 'base64'\n        })\n        await Sharing.shareAsync(filePath)\n      } catch (e) {}\n    } else {\n      require('file-saver').saveAs(base64toBlob(file.base64), fileName)\n    }\n  }\n\n  return (\n    <>\n      <SafeAreaView\n        style={{ flex: 1 }}\n        pointerEvents={isLoading ? 'none' : 'auto'}\n      >\n        <View style={styles.row_container}>\n          <View style={styles.title_container}>\n            <Text style={styles.title}>Documents</Text>\n          </View>\n          <View style={styles.refresh_button_container}>\n            <FontAwesome.Button\n              name=\"refresh\"\n              backgroundColor=\"transparent\"\n              iconStyle={{\n                color: Colors.secondary\n              }}\n              underlayColor=\"none\"\n              activeOpacity={0.5}\n              size={24}\n              onPress={async () => {\n                try {\n                  setDocuments(await client.documents())\n                  showMessage({\n                    message: 'Refreshed',\n                    type: 'info',\n                    icon: 'success'\n                  })\n                } catch (err) {\n                  setErrorMessage(err.message)\n                  setShowAlert(true)\n                }\n              }}\n            ></FontAwesome.Button>\n          </View>\n        </View>\n        {documents && (\n          <FlatList\n            data={documents}\n            renderItem={({ item }) => (\n              <TouchableOpacity\n                onPress={() => {\n                  downloadDocument(item)\n                }}\n              >\n                <Doc\n                  name={(item as Document).comment}\n                  type={(item as Document).file.type}\n                  date={(item as Document).file.date.toLocaleDateString()}\n                ></Doc>\n              </TouchableOpacity>\n            )}\n            keyExtractor={(item) => (item as Document).documentGu}\n          ></FlatList>\n        )}\n      </SafeAreaView>\n      {isLoading && (\n        <SafeAreaView style={styles.loading}>\n          <ActivityIndicator size={'large'} />\n        </SafeAreaView>\n      )}\n      <AwesomeAlert\n        show={showAlert}\n        showProgress={false}\n        title={'Error'}\n        message={errorMessage}\n        closeOnTouchOutside={true}\n        closeOnHardwareBackPress={true}\n        showCancelButton={false}\n        showConfirmButton={true}\n        confirmText={'Ok'}\n        confirmButtonColor={Colors.primary}\n        confirmButtonTextStyle={{ color: Colors.black }}\n        onConfirmPressed={() => {\n          setShowAlert(false)\n        }}\n      ></AwesomeAlert>\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  row_container: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  title_container: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    width: '75%'\n  },\n  title: {\n    fontFamily: 'Inter_800ExtraBold',\n    fontSize: 30,\n    marginHorizontal: 11\n  },\n  refresh_button_container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  loading: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(200, 200, 200, 0.2)'\n  }\n})\n\nexport default Documents\n","import React from 'react'\nimport { StyleSheet, View, Text } from 'react-native'\nimport { Colors } from '../colors/Colors'\n\nfunction Doc(props) {\n  return (\n    <View style={[styles.container, props.style]}>\n      <View style={styles.doc_info_container}>\n        <Text numberOfLines={1} style={styles.name}>\n          {props.name}\n        </Text>\n        <View style={styles.info_container}>\n          <Text numberOfLines={1} style={[styles.type]}>\n            {props.type}\n          </Text>\n          <Text numberOfLines={1} style={styles.date}>\n            {props.date}\n          </Text>\n        </View>\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.off_white,\n    borderRadius: 10,\n    height: 50,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginHorizontal: 7,\n    marginTop: 7,\n    padding: 7,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: Colors.secondary\n  },\n  doc_info_container: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    flex: 1,\n    marginHorizontal: 4\n  },\n  info_container: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    flex: 1\n  },\n  name: {\n    color: Colors.black,\n    fontFamily: 'Montserrat_600SemiBold',\n    fontSize: 16,\n    lineHeight: 16 * 0.75,\n    paddingTop: 16 - 16 * 0.75,\n    textAlign: 'left'\n  },\n  type: {\n    color: Colors.black,\n    fontFamily: 'Inter_300Light',\n    fontSize: 12,\n    flex: 1,\n    lineHeight: 12 * 0.75,\n    paddingTop: 12 - 12 * 0.75,\n    marginTop: 4,\n    textAlign: 'left'\n  },\n  date: {\n    color: Colors.black,\n    fontFamily: 'Inter_400Regular',\n    fontSize: 12,\n    lineHeight: 12 * 0.75,\n    paddingTop: 12 - 12 * 0.75,\n    marginTop: 4,\n    textAlign: 'left'\n  }\n})\n\nexport default Doc\n"],"sourceRoot":""}
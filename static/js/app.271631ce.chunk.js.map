{"version":3,"sources":["screens/Documents.tsx","components/Document.tsx","components/CustomButton.tsx","theme/LightTheme.ts","colors/Colors.ts","App.tsx","screens/Login.tsx","contexts/AppContext.tsx","components/Login.tsx","gradebook/GradeUtil.ts","components/District.tsx","assets/mountainbackground.png","navigation/BottomNavigation.tsx","screens/Grades.tsx","screens/CourseDetails.tsx","components/Assignment.tsx","screens/Courses.tsx","components/Course.tsx","contexts/GradeContext.tsx","screens/Profile.tsx"],"names":["styles","StyleSheet","create","row_container","flexDirection","alignItems","title_container","justifyContent","width","title","fontFamily","fontSize","marginHorizontal","refresh_button_container","flex","loading","position","left","right","top","bottom","backgroundColor","client","useContext","AppContext","useState","undefined","documents","setDocuments","isLoading","setIsLoading","showAlert","setShowAlert","errorMessage","setErrorMessage","fetchDocuments","err","message","downloadDocument","document","file","get","fileName","comment","replace","name","substring","lastIndexOf","Platform","OS","require","saveAs","base64","sliceSize","byteCharacters","window","atob","byteArrays","offset","length","slice","byteNumbers","Array","i","charCodeAt","push","Uint8Array","Blob","base64toBlob","filePath","FileSystem","documentDirectory","writeAsStringAsync","encoding","Sharing","shareAsync","e","SafeAreaView","style","pointerEvents","View","Text","Button","iconStyle","color","Colors","secondary","underlayColor","activeOpacity","size","onPress","showMessage","type","icon","FlatList","data","renderItem","item","TouchableOpacity","date","toLocaleDateString","keyExtractor","documentGu","ActivityIndicator","show","showProgress","closeOnTouchOutside","closeOnHardwareBackPress","showCancelButton","showConfirmButton","confirmText","confirmButtonColor","primary","confirmButtonTextStyle","black","onConfirmPressed","container","off_white","borderRadius","height","marginTop","padding","borderWidth","borderColor","doc_info_container","info_container","lineHeight","textAlign","select","web","paddingBottom","default","paddingTop","props","numberOfLines","buttonText","text","textColor","containerStyle","disabled","LightTheme","dark","colors","background","white","card","border","notification","accent","middle_blue_green","dark_middle_blue_green","alice_blue","onyx_gray","corn_silk_white","red","light_gray","navy","Stack","createNativeStackNavigator","setClient","marks","setMarks","username","setUsername","user","password","setPassword","useFonts","Inter_100Thin","Inter_200ExtraLight","Inter_300Light","Inter_400Regular","Inter_500Medium","Inter_600SemiBold","Inter_700Bold","Inter_800ExtraBold","Inter_900Black","Montserrat_100Thin","Montserrat_200ExtraLight","Montserrat_300Light","Montserrat_400Regular","Montserrat_500Medium","Montserrat_600SemiBold","Montserrat_700Bold","Montserrat_800ExtraBold","Montserrat_900Black","Montserrat_100Thin_Italic","Montserrat_200ExtraLight_Italic","Montserrat_300Light_Italic","Montserrat_400Regular_Italic","Montserrat_500Medium_Italic","Montserrat_600SemiBold_Italic","Montserrat_700Bold_Italic","Montserrat_800ExtraBold_Italic","Montserrat_900Black_Italic","RussoOne_400Regular","SafeAreaProvider","Provider","value","NavigationContainer","theme","Navigator","Screen","component","Login","options","headerShown","BottomNavigation","marginBottom","animating","navigation","useNavigation","refInput","useRef","isChecked","setToggleCheckBox","firstLaunch","setFirstLaunch","isModalVisible","setModalVisible","useCookies","cookies","setCookie","removeCookie","open","setOpen","setValue","map","d","label","list","setList","getValueFor","StudentVue","login","find","parentVueUrl","gradebook","convertGradebook","alert","navigate","save","remove","openInstagram","appUrl","Linking","canOpenURL","openURL","key","path","SecureStore","setItemAsync","getItemAsync","useEffect","savedCredentials","deleteItemAsync","isVisible","coverScreen","onBackdropPress","animationIn","animationOut","modal","modal_view","security_modal","ImageBackground","source","resizeMode","horizontal_container","mountain","FontAwesome5","description","login_info_container","security","login_info","TextInput","defaultValue","onChangeText","u","placeholder","input","returnKeyType","onSubmitEditing","current","focus","blurOnSubmit","p","secureTextEntry","ref","searchable","items","setItems","dropDownDirection","dropdown","textStyle","dropdown_text","dropdown_container","listMode","translation","SEARCH_PLACEHOLDER","PLACEHOLDER","NOTHING_TO_SHOW","tickIconStyle","dropdown_tick","listItemLabelStyle","dropdown_item","searchContainerStyle","dropdown_search_container","searchTextInputStyle","dropdown_search_text","listItemContainerStyle","dropdown_list_item_container","renderListItem","checkbox_container","fillColor","unfillColor","disableText","innerIconStyle","disableBuiltInState","save_text","onLogin","button_container","insta_button_container","insta_button","insta_text","alignSelf","marginLeft","paddingHorizontal","paddingVertical","borderBottomWidth","district_name_container","margin","React","createContext","children","ios","KeyboardAvoidingView","behavior","android","trim","gpa","courses","Map","reportingPeriod","index","reportingPeriods","available","course","set","period","findIndex","c","teacher","staff","points","total","NaN","assignments","categories","category","weightedCategories","toUpperCase","weight","parseFloat","standard","assignment","score","parsePoints","a","status","notes","modified","due","start","calculatePoints","Promise","resolve","numOfCourses","values","isNaN","roundTo","regex","match","split","num","places","multiplicator","Math","pow","toFixed","round","newMarks","Object","assign","filter","assignmentName","some","indentifier","unshift","Date","m","mark","calculateLetterGrade","test","j","k","memo","isSelected","module","exports","Tab","createBottomTabNavigator","EmptyComponent","screenOptions","tabBarShowLabel","tabBarStyle","borderTopWidth","overflow","Grades","tabBarIcon","tabInfo","focused","MaterialIcons","Documents","Ionicons","Profile","tabBarButton","setCourse","courseHeader","Courses","CourseDetails","marginVertical","course_details","flexWrap","course_details_container","category_name_container","courseName","route","params","next","setCategory","from","setCategories","setAssignmentName","setPoints","setTotal","toggleModal","refreshMarks","goBack","parseCourseName","t","keyboardType","autoComplete","isNumber","maxHeight","addAssignment","marginRight","borderTopColor","assignment_info_container","input_container","dash","textAlignVertical","dropdown_text_name","dropdown_text_value","isDropdown","setIsDropdown","totalWeight","reduce","hasScore","update","updatePoints","getWidth","n","max","toString","borderLeftColor","calculateMarkColor","borderLeftWidth","deleteAssignment","Constants","statusBarHeight","marking_period_container","gpa_container","periods","setPeriods","isSubscribed","getGradebook","entries","period_number","course_info_container","letter_grade","header","borderBottomRightRadius","borderBottomLeftRadius","shadowOffset","shadowOpacity","shadowRadius","avatar","description_container","description_part_text","property_view","flexGrow","property_container","property_text","studentInfo","setStudentInfo","schoolInfo","setSchoolInfo","useAsyncEffect","Image","uri","photo","student","grade","suffix","parseInt","birthDate","ScrollView","id","AntDesign","phone","Feather","address","email","currentSchool","FontAwesome","school","homeRoom","counselor","principal","MaterialCommunityIcons"],"mappings":"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","file":"static/js/app.271631ce.chunk.js","sourcesContent":["import React, { useContext, useState } from 'react'\nimport { SafeAreaView } from 'react-native-safe-area-context'\nimport AppContext from '../contexts/AppContext'\nimport * as Sharing from 'expo-sharing'\nimport * as FileSystem from 'expo-file-system'\nimport {\n  ActivityIndicator,\n  FlatList,\n  Platform,\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity\n} from 'react-native'\nimport Document from 'studentvue/StudentVue/Document/Document'\nimport Doc from '../components/Document'\nimport { Colors } from '../colors/Colors'\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\nimport { showMessage } from 'react-native-flash-message'\nimport AwesomeAlert from 'react-native-awesome-alerts'\n\nconst Documents = () => {\n  const { client } = useContext(AppContext)\n  const [documents, setDocuments] = useState(undefined as Document[])\n  const [isLoading, setIsLoading] = useState(false)\n  const [showAlert, setShowAlert] = useState(false)\n  const [errorMessage, setErrorMessage] = useState()\n\n  const fetchDocuments = async (): Promise<void> => {\n    setIsLoading(true)\n    try {\n      setDocuments(await client.documents())\n    } catch (err) {\n      setErrorMessage(err.message)\n      setShowAlert(true)\n    }\n    setIsLoading(false)\n  }\n  if (!documents && !isLoading) fetchDocuments()\n\n  const base64toBlob = (base64: string, sliceSize = 512): Blob => {\n    const byteCharacters = window.atob(base64)\n    const byteArrays = []\n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n      const slice = byteCharacters.slice(offset, offset + sliceSize)\n      const byteNumbers = new Array(slice.length)\n      for (let i = 0; i < slice.length; i++) {\n        byteNumbers[i] = slice.charCodeAt(i)\n      }\n      byteArrays.push(new Uint8Array(byteNumbers))\n    }\n    return new Blob(byteArrays)\n  }\n\n  const downloadDocument = async (document: Document): Promise<void> => {\n    const file = (await document.get())[0]\n    const fileName =\n      document.comment.replace(/ /g, '_') +\n      file.file.name.substring(file.file.name.lastIndexOf('.'))\n    if (Platform.OS === 'web') {\n      require('file-saver').saveAs(base64toBlob(file.base64), fileName)\n    } else {\n      const filePath = FileSystem.documentDirectory + fileName\n      try {\n        await FileSystem.writeAsStringAsync(filePath, file.base64, {\n          encoding: 'base64'\n        })\n        await Sharing.shareAsync(filePath)\n      } catch (e) {}\n    }\n  }\n\n  return (\n    <>\n      <SafeAreaView\n        style={{ flex: 1 }}\n        pointerEvents={isLoading ? 'none' : 'auto'}\n      >\n        <View style={styles.row_container}>\n          <View style={styles.title_container}>\n            <Text style={styles.title}>Documents</Text>\n          </View>\n          <View style={styles.refresh_button_container}>\n            <FontAwesome.Button\n              name=\"refresh\"\n              backgroundColor=\"transparent\"\n              iconStyle={{\n                color: Colors.secondary\n              }}\n              underlayColor=\"none\"\n              activeOpacity={0.5}\n              size={24}\n              onPress={async () => {\n                try {\n                  setDocuments(await client.documents())\n                  showMessage({\n                    message: 'Refreshed',\n                    type: 'info',\n                    icon: 'success'\n                  })\n                } catch (err) {\n                  setErrorMessage(err.message)\n                  setShowAlert(true)\n                }\n              }}\n            ></FontAwesome.Button>\n          </View>\n        </View>\n        {documents && (\n          <FlatList\n            data={documents}\n            renderItem={({ item }) => (\n              <TouchableOpacity\n                onPress={() => {\n                  downloadDocument(item)\n                }}\n                activeOpacity={0.5}\n              >\n                <Doc\n                  name={(item as Document).comment}\n                  type={(item as Document).file.type}\n                  date={(item as Document).file.date.toLocaleDateString()}\n                ></Doc>\n              </TouchableOpacity>\n            )}\n            keyExtractor={(item) => (item as Document).documentGu}\n          ></FlatList>\n        )}\n      </SafeAreaView>\n      {isLoading && (\n        <SafeAreaView style={styles.loading}>\n          <ActivityIndicator size={'large'} />\n        </SafeAreaView>\n      )}\n      <AwesomeAlert\n        show={showAlert}\n        showProgress={false}\n        title={'Error'}\n        message={errorMessage}\n        closeOnTouchOutside={true}\n        closeOnHardwareBackPress={true}\n        showCancelButton={false}\n        showConfirmButton={true}\n        confirmText={'Ok'}\n        confirmButtonColor={Colors.primary}\n        confirmButtonTextStyle={{ color: Colors.black }}\n        onConfirmPressed={() => {\n          setShowAlert(false)\n        }}\n      ></AwesomeAlert>\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  row_container: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  title_container: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    width: '75%'\n  },\n  title: {\n    fontFamily: 'Inter_800ExtraBold',\n    fontSize: 30,\n    marginHorizontal: 11\n  },\n  refresh_button_container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  loading: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(200, 200, 200, 0.2)'\n  }\n})\n\nexport default Documents\n","import React from 'react'\nimport { StyleSheet, View, Text, Platform } from 'react-native'\nimport { Colors } from '../colors/Colors'\n\nfunction Doc(props) {\n  return (\n    <View style={[styles.container, props.style]}>\n      <View style={styles.doc_info_container}>\n        <Text numberOfLines={1} style={styles.name}>\n          {props.name}\n        </Text>\n        <View style={styles.info_container}>\n          <Text numberOfLines={1} style={[styles.type, { flex: 1 }]}>\n            {props.type}\n          </Text>\n          <Text numberOfLines={1} style={styles.type}>\n            {props.date}\n          </Text>\n        </View>\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.off_white,\n    borderRadius: 10,\n    height: 50,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginHorizontal: 7,\n    marginTop: 7,\n    padding: 7,\n    borderWidth: 1,\n    borderColor: Colors.secondary\n  },\n  doc_info_container: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    flex: 1,\n    marginHorizontal: 4\n  },\n  info_container: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    flex: 1\n  },\n  name: {\n    color: Colors.black,\n    fontFamily: 'Montserrat_600SemiBold',\n    fontSize: 16,\n    lineHeight: 16 * 0.75,\n    textAlign: 'left',\n    ...Platform.select({\n      web: {\n        paddingBottom: 12 - 12 * 0.75\n      },\n      default: {\n        paddingTop: 16 - 16 * 0.75\n      }\n    })\n  },\n  type: {\n    color: Colors.black,\n    fontFamily: 'Inter_400Regular',\n    fontSize: 12,\n    lineHeight: 12 * 0.75,\n    ...Platform.select({\n      web: {\n        paddingBottom: 2,\n        marginTop: 5\n      },\n      default: {\n        paddingTop: 12 - 12 * 0.75,\n        marginTop: 4\n      }\n    })\n  }\n})\n\nexport default Doc\n","import React from 'react'\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native'\n\ntype Props = {\n  onPress: any\n  text: string\n  backgroundColor: string\n  textColor: string\n  fontFamily: string\n  containerStyle: any\n  disabled: boolean\n}\n\nconst CustomButton: React.FC<Props> = ({\n  onPress,\n  text,\n  backgroundColor,\n  textColor,\n  fontFamily,\n  containerStyle,\n  disabled\n}: Props) => {\n  return (\n    <TouchableOpacity\n      onPress={onPress}\n      style={[containerStyle, { backgroundColor: backgroundColor }]}\n      disabled={disabled}\n      activeOpacity={0.5}\n    >\n      <View>\n        <Text\n          style={[\n            styles.buttonText,\n            { color: textColor, fontFamily: fontFamily }\n          ]}\n        >\n          {text}\n        </Text>\n      </View>\n    </TouchableOpacity>\n  )\n}\n\nconst styles = StyleSheet.create({\n  buttonText: {\n    fontSize: 20,\n    textAlign: 'center'\n  }\n})\n\nexport default CustomButton\n","import { Colors } from '../colors/Colors'\n\nexport const LightTheme = {\n  dark: false,\n  colors: {\n    primary: Colors.primary,\n    background: Colors.white,\n    card: Colors.primary,\n    text: Colors.black,\n    border: Colors.secondary,\n    notification: Colors.accent\n  }\n}\n","export const Colors = {\n  primary: '#FEF156',\n  secondary: '#AEAC99',\n  accent: '#00F1EE',\n  middle_blue_green: '#83C5BE',\n  dark_middle_blue_green: '#298980',\n  alice_blue: '#EDF6F9',\n  onyx_gray: '#454545',\n  corn_silk_white: '#FEFAE0',\n  white: '#FFFFFF',\n  black: '#001219',\n  red: '#A30800',\n  off_white: '#F5F5F5',\n  light_gray: '#E4E4E4',\n  navy: '#000080'\n}\n","import 'react-native-url-polyfill/auto'\nimport Login from './screens/Login'\nimport React, { useState } from 'react'\nimport BottomNavigation from './navigation/BottomNavigation'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\nimport { RootStackParamList } from './types/RootStackParams'\nimport AppContext from './contexts/AppContext'\nimport { LightTheme } from './theme/LightTheme'\nimport {\n  useFonts,\n  Inter_100Thin,\n  Inter_200ExtraLight,\n  Inter_300Light,\n  Inter_400Regular,\n  Inter_500Medium,\n  Inter_600SemiBold,\n  Inter_700Bold,\n  Inter_800ExtraBold,\n  Inter_900Black\n} from '@expo-google-fonts/inter'\nimport {\n  Montserrat_100Thin,\n  Montserrat_200ExtraLight,\n  Montserrat_300Light,\n  Montserrat_400Regular,\n  Montserrat_500Medium,\n  Montserrat_600SemiBold,\n  Montserrat_700Bold,\n  Montserrat_800ExtraBold,\n  Montserrat_900Black,\n  Montserrat_100Thin_Italic,\n  Montserrat_200ExtraLight_Italic,\n  Montserrat_300Light_Italic,\n  Montserrat_400Regular_Italic,\n  Montserrat_500Medium_Italic,\n  Montserrat_600SemiBold_Italic,\n  Montserrat_700Bold_Italic,\n  Montserrat_800ExtraBold_Italic,\n  Montserrat_900Black_Italic\n} from '@expo-google-fonts/montserrat'\nimport { RussoOne_400Regular } from '@expo-google-fonts/russo-one'\nimport { SafeAreaProvider } from 'react-native-safe-area-context'\nimport FlashMessage from 'react-native-flash-message'\nimport { User } from './interfaces/User'\nimport { ActivityIndicator, Text, View } from 'react-native'\nimport { Colors } from './colors/Colors'\nimport { Client } from 'studentvue'\nimport { Marks } from './interfaces/Gradebook'\n\nconst Stack = createNativeStackNavigator<RootStackParamList>()\n\nconst App = () => {\n  const [client, setClient] = useState(undefined as Client)\n  const [marks, setMarks] = useState(undefined as Marks)\n  const [username, setUsername] = useState(undefined as string)\n  const [password, setPassword] = useState(undefined as string)\n  const user: User = {\n    username: username,\n    password: password,\n    client: client,\n    marks: marks,\n    setUsername,\n    setPassword,\n    setClient,\n    setMarks\n  }\n  let [fontsLoaded] = useFonts({\n    Inter_100Thin,\n    Inter_200ExtraLight,\n    Inter_300Light,\n    Inter_400Regular,\n    Inter_500Medium,\n    Inter_600SemiBold,\n    Inter_700Bold,\n    Inter_800ExtraBold,\n    Inter_900Black,\n    Montserrat_100Thin,\n    Montserrat_200ExtraLight,\n    Montserrat_300Light,\n    Montserrat_400Regular,\n    Montserrat_500Medium,\n    Montserrat_600SemiBold,\n    Montserrat_700Bold,\n    Montserrat_800ExtraBold,\n    Montserrat_900Black,\n    Montserrat_100Thin_Italic,\n    Montserrat_200ExtraLight_Italic,\n    Montserrat_300Light_Italic,\n    Montserrat_400Regular_Italic,\n    Montserrat_500Medium_Italic,\n    Montserrat_600SemiBold_Italic,\n    Montserrat_700Bold_Italic,\n    Montserrat_800ExtraBold_Italic,\n    Montserrat_900Black_Italic,\n    RussoOne_400Regular\n  })\n\n  if (!fontsLoaded) {\n    return (\n      <View\n        style={{\n          backgroundColor: Colors.primary,\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center'\n        }}\n      >\n        <Text style={{ marginBottom: 10 }}>Loading Schools...</Text>\n        <ActivityIndicator\n          color={Colors.secondary}\n          animating={true}\n          size=\"large\"\n        />\n      </View>\n    )\n  }\n\n  return (\n    <>\n      <SafeAreaProvider>\n        <AppContext.Provider value={user}>\n          <NavigationContainer theme={LightTheme}>\n            <Stack.Navigator>\n              <Stack.Screen\n                name=\"Login\"\n                component={Login}\n                options={{\n                  headerShown: false\n                }}\n              />\n              <Stack.Screen\n                name=\"Menu\"\n                component={BottomNavigation}\n                options={{\n                  headerShown: false\n                }}\n              />\n            </Stack.Navigator>\n          </NavigationContainer>\n        </AppContext.Provider>\n      </SafeAreaProvider>\n      <FlashMessage position=\"top\" />\n    </>\n  )\n}\n\nexport default App\n","import React, { useContext, useEffect, useRef, useState } from 'react'\nimport {\n  TextInput,\n  View,\n  Text,\n  StyleSheet,\n  ActivityIndicator,\n  SafeAreaView,\n  Platform,\n  Linking,\n  ImageBackground\n} from 'react-native'\nimport StudentVue from 'studentvue'\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack'\nimport { RootStackParamList } from '../types/RootStackParams'\nimport { useNavigation } from '@react-navigation/native'\nimport CustomButton from '../components/CustomButton'\nimport LoginView from '../components/Login'\nimport AppContext from '../contexts/AppContext'\nimport BouncyCheckbox from 'react-native-bouncy-checkbox'\nimport { convertGradebook } from '../gradebook/GradeUtil'\nimport { Colors } from '../colors/Colors'\nimport AwesomeAlert from 'react-native-awesome-alerts'\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\nimport DropDownPicker from 'react-native-dropdown-picker'\nimport { SchoolDistrict } from 'studentvue/StudentVue/StudentVue.interfaces'\nimport { useCookies } from 'react-cookie'\nimport * as SecureStore from 'expo-secure-store'\nimport { FontAwesome5 } from '@expo/vector-icons'\nimport Modal from 'react-native-modal'\nimport District from '../components/District'\n\ntype loginScreenProp = NativeStackNavigationProp<RootStackParamList, 'Login'>\n\ntype loginInfo = 'username' | 'password' | 'district'\n\nconst Login = () => {\n  const navigation = useNavigation<loginScreenProp>()\n  const refInput = useRef<TextInput | null>(null)\n  const { username, password, setUsername, setPassword, setClient, setMarks } =\n    useContext(AppContext)\n  const [isLoading, setIsLoading] = useState(false)\n  const [isChecked, setToggleCheckBox] = useState(false)\n  const [showAlert, setShowAlert] = useState(false)\n  const [errorMessage, setErrorMessage] = useState(undefined as string)\n\n  const [firstLaunch, setFirstLaunch] = useState(false)\n\n  const [isModalVisible, setModalVisible] = useState(false)\n\n  const [cookies, setCookie, removeCookie] = useCookies([\n    'username',\n    'password',\n    'district'\n  ] as loginInfo[])\n\n  const [open, setOpen] = useState(false)\n  const [value, setValue] = useState(undefined as string)\n  const [list, setList] = useState(\n    require('../assets/districts.json').map((d: SchoolDistrict) => {\n      return { label: d.name, value: d.name }\n    })\n  )\n\n  useEffect(() => {\n    savedCredentials()\n  }, [])\n\n  async function savedCredentials(): Promise<void> {\n    const username: string = await getValueFor('username')\n    const password: string = await getValueFor('password')\n    const value: string = await getValueFor('district')\n\n    // Auto login\n    if (username && password && value) {\n      setUsername(username)\n      setPassword(password)\n      setValue(value)\n      setIsLoading(true)\n      setToggleCheckBox(true)\n      try {\n        const client = await StudentVue.login(\n          require('../assets/districts.json').find(\n            (d: SchoolDistrict) => d.name === value\n          ).parentVueUrl,\n          {\n            username: username,\n            password: password\n          }\n        )\n        const gradebook = await client.gradebook()\n        const marks = await convertGradebook(gradebook)\n        setClient(client)\n        setMarks(marks)\n      } catch (err) {\n        setIsLoading(false)\n        alert(err.message)\n        return\n      }\n      setIsLoading(false)\n      navigation.navigate('Menu')\n    } else {\n      setFirstLaunch(true)\n    }\n  }\n\n  function alert(message: string): void {\n    setErrorMessage(message)\n    setShowAlert(true)\n  }\n\n  async function onLogin(): Promise<void> {\n    if (!username) {\n      alert('Enter your username')\n      return\n    }\n    if (!password) {\n      alert('Enter your password')\n      return\n    }\n    if (!value) {\n      alert('Select your school district')\n      return\n    }\n    setIsLoading(true)\n    try {\n      const client = await StudentVue.login(\n        require('../assets/districts.json').find(\n          (d: SchoolDistrict) => d.name === value\n        ).parentVueUrl,\n        {\n          username: username,\n          password: password\n        }\n      )\n      const gradebook = await client.gradebook()\n      const marks = await convertGradebook(gradebook)\n      setClient(client)\n      setMarks(marks)\n    } catch (err) {\n      setIsLoading(false)\n      alert(err.message)\n      return\n    }\n    if (isChecked) {\n      save('username', username)\n      save('password', password)\n      save('district', value)\n    } else {\n      remove('username')\n      remove('password')\n      remove('username')\n    }\n    setIsLoading(false)\n    navigation.navigate('Menu')\n  }\n\n  async function openInstagram(username: string): Promise<void> {\n    if (Platform.OS !== 'web') {\n      const appUrl = `instagram://user?username=${username}`\n      try {\n        if (await Linking.canOpenURL(appUrl)) {\n          Linking.openURL(appUrl)\n        } else {\n          try {\n            Linking.openURL(`https://instagram.com/${username}`)\n          } catch (err) {}\n        }\n      } catch (err) {}\n    } else {\n      try {\n        Linking.openURL(`https://instagram.com/${username}`)\n      } catch (err) {}\n    }\n  }\n\n  function nameFontSize(): number {\n    return Platform.OS === 'web' ? 60 : 40\n  }\n\n  function descriptionFontSize(): number {\n    return Platform.OS === 'web' ? 25 : 20\n  }\n\n  function mountainSize(): number {\n    return Platform.OS === 'web' ? 40 : 30\n  }\n\n  async function save(key: loginInfo, value: string): Promise<void> {\n    if (value === null) return\n    if (Platform.OS === 'web') {\n      setCookie(key, value, { path: '/' })\n    } else {\n      await SecureStore.setItemAsync(key, value)\n    }\n  }\n\n  async function getValueFor(key: loginInfo): Promise<string> {\n    if (Platform.OS === 'web') {\n      return cookies[key]\n    } else {\n      return await SecureStore.getItemAsync(key)\n    }\n  }\n\n  const remove = async (key: loginInfo): Promise<void> => {\n    if (Platform.OS === 'web') {\n      removeCookie(key, { path: '/' })\n    } else {\n      await SecureStore.deleteItemAsync(key)\n    }\n  }\n\n  return (\n    <>\n      <Modal\n        isVisible={isModalVisible}\n        coverScreen={true}\n        onBackdropPress={() => setModalVisible(!isModalVisible)}\n        animationIn={'fadeIn'}\n        animationOut={'fadeOut'}\n      >\n        <View style={styles.modal}>\n          <View style={styles.modal_view}>\n            <Text style={styles.security_modal}>\n              We do not collect/save your login information. Info entered is\n              sent directly to your school district's StudentVue website.\n            </Text>\n            <FontAwesome.Button\n              name=\"github\"\n              backgroundColor=\"transparent\"\n              iconStyle={{\n                color: Colors.black\n              }}\n              underlayColor=\"none\"\n              activeOpacity={0.5}\n              size={25}\n              onPress={() =>\n                Linking.openURL('https://github.com/vaporrrr/Summit')\n              }\n            ></FontAwesome.Button>\n          </View>\n        </View>\n      </Modal>\n      <ImageBackground\n        source={require('../assets/mountainbackground.png')}\n        resizeMode=\"cover\"\n        style={{ flex: 1 }}\n      >\n        <SafeAreaView style={{ alignItems: 'center' }}>\n          <View style={styles.horizontal_container}>\n            <Text style={[styles.name, { fontSize: nameFontSize() }]}>\n              Summit\n            </Text>\n            <View style={styles.mountain}>\n              <FontAwesome5\n                name=\"mountain\"\n                size={mountainSize()}\n                color=\"black\"\n              />\n            </View>\n          </View>\n          <Text\n            style={[styles.description, { fontSize: descriptionFontSize() }]}\n          >\n            Grade Viewer\n          </Text>\n        </SafeAreaView>\n        <LoginView>\n          {firstLaunch && (\n            <View style={styles.login_info_container}>\n              <View style={styles.horizontal_container}>\n                <Text style={styles.security}>\n                  This app is safe to use and open source\n                </Text>\n                <FontAwesome.Button\n                  name=\"info-circle\"\n                  backgroundColor=\"transparent\"\n                  iconStyle={{\n                    color: Colors.black\n                  }}\n                  underlayColor=\"none\"\n                  activeOpacity={0.5}\n                  size={18}\n                  onPress={() => setModalVisible(true)}\n                ></FontAwesome.Button>\n              </View>\n              <Text style={styles.login_info}>\n                Login info is the same as StudentVue\n              </Text>\n            </View>\n          )}\n          <TextInput\n            defaultValue={username}\n            onChangeText={(u) => setUsername(u)}\n            placeholder={'Username'}\n            style={styles.input}\n            returnKeyType=\"next\"\n            onSubmitEditing={() => refInput.current.focus()}\n            blurOnSubmit={false}\n          />\n          <TextInput\n            defaultValue={password}\n            onChangeText={(p) => setPassword(p)}\n            placeholder={'Password'}\n            secureTextEntry={true}\n            style={styles.input}\n            returnKeyType=\"next\"\n            ref={refInput}\n            onSubmitEditing={() => setOpen(true)}\n          />\n          <DropDownPicker\n            searchable={true}\n            open={open}\n            value={value}\n            items={list}\n            setOpen={setOpen}\n            setValue={setValue}\n            setItems={setList}\n            dropDownDirection={'BOTTOM'}\n            style={styles.dropdown}\n            textStyle={styles.dropdown_text}\n            containerStyle={styles.dropdown_container}\n            listMode={'FLATLIST'}\n            translation={{\n              SEARCH_PLACEHOLDER: 'Enter School District Name',\n              PLACEHOLDER: 'Select School District',\n              NOTHING_TO_SHOW:\n                'Nothing found, make sure you are entering your DISTRICT NAME not SCHOOL NAME'\n            }}\n            tickIconStyle={styles.dropdown_tick}\n            listItemLabelStyle={styles.dropdown_item}\n            searchContainerStyle={styles.dropdown_search_container}\n            searchTextInputStyle={styles.dropdown_search_text}\n            listItemContainerStyle={styles.dropdown_list_item_container}\n            renderListItem={(props) => {\n              return (\n                <District\n                  {...props}\n                  onPress={() => {\n                    setValue(props.value)\n                    setOpen(false)\n                  }}\n                ></District>\n              )\n            }}\n            props={{\n              activeOpacity: 0.5\n            }}\n          ></DropDownPicker>\n          <View style={styles.checkbox_container}>\n            <BouncyCheckbox\n              size={24}\n              fillColor={Colors.navy}\n              unfillColor=\"transparent\"\n              disableText\n              innerIconStyle={{\n                borderWidth: 1,\n                borderColor: Colors.black\n              }}\n              isChecked={isChecked}\n              disableBuiltInState\n              onPress={async () => {\n                setToggleCheckBox(!isChecked)\n              }}\n            />\n            <Text style={styles.save_text}>Save Login Information</Text>\n          </View>\n          <CustomButton\n            onPress={() => {\n              if (!isLoading) onLogin()\n            }}\n            text={'Login'}\n            backgroundColor={\n              !isLoading ? Colors.navy : 'rgba(100, 100, 100, 0.6)'\n            }\n            textColor={Colors.white}\n            fontFamily=\"Inter_800ExtraBold\"\n            containerStyle={styles.button_container}\n            disabled={isLoading}\n          ></CustomButton>\n          <ActivityIndicator\n            color={Colors.secondary}\n            animating={isLoading}\n            style={{ marginBottom: 50 }}\n            size=\"large\"\n          />\n        </LoginView>\n        <View style={styles.row_container}>\n          <View style={styles.insta_button_container}>\n            <FontAwesome.Button\n              name=\"instagram\"\n              backgroundColor=\"transparent\"\n              iconStyle={styles.insta_button}\n              underlayColor=\"none\"\n              activeOpacity={0.5}\n              size={28}\n              onPress={() => openInstagram('richardyin99')}\n            ></FontAwesome.Button>\n            <Text style={styles.insta_text}>Richard Y</Text>\n          </View>\n          <View style={styles.insta_button_container}>\n            <FontAwesome.Button\n              name=\"instagram\"\n              backgroundColor=\"transparent\"\n              iconStyle={styles.insta_button}\n              underlayColor=\"none\"\n              activeOpacity={0.5}\n              size={28}\n              onPress={() => openInstagram('karthik.whynot')}\n            ></FontAwesome.Button>\n            <Text style={styles.insta_text}>Karthik M</Text>\n          </View>\n        </View>\n      </ImageBackground>\n      <AwesomeAlert\n        show={showAlert}\n        showProgress={false}\n        title={'Error'}\n        message={errorMessage}\n        closeOnTouchOutside={true}\n        closeOnHardwareBackPress={true}\n        showCancelButton={false}\n        showConfirmButton={true}\n        confirmText={'Ok'}\n        confirmButtonColor={Colors.primary}\n        confirmButtonTextStyle={{ color: Colors.black }}\n        onConfirmPressed={() => {\n          setShowAlert(false)\n        }}\n      ></AwesomeAlert>\n    </>\n  )\n}\n\nexport default Login\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    alignSelf: 'center',\n    justifyContent: 'center',\n    marginTop: 10\n  },\n  horizontal_container: {\n    flexDirection: 'row',\n    marginTop: 10\n  },\n  modal: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    alignSelf: 'center',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    width: 250,\n    height: 140\n  },\n  modal_view: {\n    width: 250,\n    height: 140,\n    padding: 15\n  },\n  security_modal: {\n    fontFamily: 'Inter_400Regular'\n  },\n  mountain: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginLeft: 5\n  },\n  name: {\n    fontFamily: 'Montserrat_900Black'\n  },\n  description: {\n    fontFamily: 'RussoOne_400Regular',\n    textAlign: 'center'\n  },\n  login_info_container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  login_info: {\n    fontFamily: 'Montserrat_300Light_Italic',\n    fontSize: 12,\n    marginBottom: 10,\n    marginTop: 15\n  },\n  security: {\n    fontFamily: 'Inter_600SemiBold',\n    fontSize: 14,\n    marginTop: 8\n  },\n  checkbox_container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 10\n  },\n  input: {\n    width: 250,\n    height: 50,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: Colors.black,\n    borderRadius: 5,\n    marginBottom: 10\n  },\n  dropdown: {\n    borderWidth: 1,\n    borderColor: Colors.black,\n    width: 250,\n    marginBottom: 10,\n    backgroundColor: 'transparent',\n    padding: 10,\n    borderRadius: 5\n  },\n  dropdown_text: {\n    fontFamily: 'Inter_700Bold',\n    fontSize: 12\n  },\n  dropdown_container: {\n    width: 250\n  },\n  dropdown_item: {\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    fontFamily: 'Inter_600SemiBold'\n  },\n  dropdown_tick: {\n    marginLeft: 10\n  },\n  dropdown_search_container: {\n    padding: 10,\n    borderBottomWidth: 0\n  },\n  dropdown_search_text: {\n    fontFamily: 'Inter_400Regular'\n  },\n  dropdown_list_item_container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  district_name_container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-start'\n  },\n  loading: {\n    margin: 'auto'\n  },\n  button_container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'relative',\n    width: 100,\n    height: 50,\n    padding: 10,\n    borderRadius: 10,\n    borderWidth: 0,\n    marginBottom: 10\n  },\n  save_text: {\n    marginLeft: 8,\n    fontFamily: 'Inter_400Regular'\n  },\n  row_container: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 25\n  },\n  insta_button_container: {\n    marginHorizontal: 10\n  },\n  insta_button: {\n    color: Colors.black\n  },\n  insta_text: {\n    fontFamily: 'Inter_300Light',\n    fontSize: 10\n  }\n})\n","import React from 'react'\nimport { User } from '../interfaces/User'\n\nconst AppContext = React.createContext<User>(null)\n\nexport default AppContext\n","import React from 'react'\nimport { KeyboardAvoidingView, Platform, StyleSheet, View } from 'react-native'\n\nconst LoginView = ({ children }) =>\n  Platform.select({\n    web: () => <View style={styles.container}>{children}</View>,\n    ios: () => (\n      <KeyboardAvoidingView style={styles.container} behavior={'padding'}>\n        {children}\n      </KeyboardAvoidingView>\n    ),\n    android: () => (\n      <KeyboardAvoidingView style={styles.container} behavior={'height'}>\n        {children}\n      </KeyboardAvoidingView>\n    )\n  })()\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    alignSelf: 'center',\n    justifyContent: 'center',\n    marginTop: 10\n  }\n})\n\nexport default LoginView\n","import { Gradebook } from 'studentvue'\nimport { Colors } from '../colors/Colors'\nimport { Assignment, Category, Course, Marks } from '../interfaces/Gradebook'\n\n// Some course names have the course ID at the end, ex: AP History A (SOC49351)\nconst parseCourseName = (name: string): string => {\n  return name.substring(0, name.lastIndexOf('(')).trim()\n}\n\nconst convertGradebook = (gradebook: Gradebook): Promise<Marks> => {\n  let marks: Marks = {\n    gpa: 0,\n    courses: new Map<string, Course>(),\n    reportingPeriod: {\n      name: gradebook.reportingPeriod.current.name,\n      index: gradebook.reportingPeriod.current.index\n    },\n    reportingPeriods: gradebook.reportingPeriod.available.map((p) => {\n      return { name: p.name, index: p.index }\n    })\n  }\n  for (const course of gradebook.courses) {\n    marks.courses.set(course.title, {\n      name: course.title,\n      period: gradebook.courses.findIndex((c) => c.title === course.title) + 1,\n      teacher: course.staff.name,\n      points: 0,\n      total: 0,\n      value: NaN,\n      assignments: [],\n      categories: new Map<string, Category>()\n    })\n    const c = marks.courses.get(course.title)\n    if (course.marks.length > 0) {\n      for (const category of course.marks[0].weightedCategories) {\n        if (category.type.toUpperCase() !== 'TOTAL') {\n          c.categories.set(category.type, {\n            name: category.type,\n            points: 0,\n            total: 0,\n            value: NaN,\n            weight: parseFloat(category.weight.standard)\n          })\n        }\n      }\n      for (const assignment of course.marks[0].assignments) {\n        const value = assignment.score.value\n        const points = parsePoints(assignment.points)\n        const a: Assignment = {\n          name: assignment.name,\n          category: assignment.type,\n          status:\n            value != 'Not Graded' && value != 'Not Due' ? 'Graded' : value,\n          notes: assignment.notes,\n          points: points[0],\n          total: points[1],\n          modified: false,\n          date: {\n            due: assignment.date.due,\n            start: assignment.date.start\n          }\n        }\n        c.assignments.push(a)\n      }\n    }\n  }\n  marks = calculatePoints(marks)\n  return new Promise((resolve) => {\n    resolve(marks)\n  })\n}\n\nconst calculatePoints = (marks: Marks): Marks => {\n  marks.gpa = 0\n  let numOfCourses = 0\n  for (const course of marks.courses.values()) {\n    ;(course.points = 0), (course.total = 0), (course.value = NaN)\n    for (const category of course.categories.values()) {\n      ;(category.points = 0), (category.total = 0), (category.value = NaN)\n    }\n    for (const assignment of course.assignments) {\n      const category = course.categories.get(assignment.category)\n      if (category && !isNaN(assignment.points) && !isNaN(assignment.total)) {\n        category.points += assignment.points\n        category.total += assignment.total\n        category.value = category.points / category.total\n      }\n    }\n    for (const category of course.categories.values()) {\n      if (!isNaN(category.value)) {\n        course.points += category.value * category.weight\n        course.total += category.weight\n      }\n    }\n    course.value = roundTo((course.points / course.total) * 100, 2)\n    if (!isNaN(course.value)) {\n      if (course.value >= 89.5) {\n        marks.gpa += 4\n      } else if (course.value >= 79.5) {\n        marks.gpa += 3\n      } else if (course.value >= 69.5) {\n        marks.gpa += 2\n      } else if (course.value >= 59.5) {\n        marks.gpa += 1\n      }\n      numOfCourses++\n    }\n  }\n  marks.gpa = roundTo(marks.gpa / numOfCourses, 2)\n  return marks\n}\n\nconst parsePoints = (points: string): number[] => {\n  const regex = /^(\\d+\\.?\\d*|\\.\\d+) \\/ (\\d+\\.?\\d*|\\.\\d+)$/\n  if (points.match(regex)) {\n    const p = points.split(regex)\n    return [parseFloat(p[1]), parseFloat(p[2])]\n  } else {\n    return [NaN, parseFloat(points)]\n  }\n}\n\nconst roundTo = (num: number, places: number): number => {\n  const multiplicator = Math.pow(10, places)\n  num = parseFloat((num * multiplicator).toFixed(11))\n  const test = Math.round(num) / multiplicator\n  return +test.toFixed(places)\n}\n\nconst deleteAssignment = (\n  marks: Marks,\n  course: string,\n  assignment: string\n): Marks => {\n  const newMarks = Object.assign({}, marks)\n  newMarks.courses.get(course).assignments = newMarks.courses\n    .get(course)\n    .assignments.filter((a) => a.name !== assignment)\n  return calculatePoints(newMarks)\n}\n\nconst updatePoints = (\n  marks: Marks,\n  course: string,\n  assignmentName: string,\n  points: number,\n  type: string\n): Marks => {\n  const newMarks = Object.assign({}, marks)\n  const assignment = newMarks.courses\n    .get(course)\n    .assignments.find((a) => a.name === assignmentName)\n  if (type === 'earned') {\n    assignment.points = points\n  } else if (type === 'total') {\n    assignment.total = points\n  }\n  assignment.modified = true\n  return calculatePoints(newMarks)\n}\n\nconst addAssignment = (\n  marks: Marks,\n  course: Course,\n  assignment: string,\n  category: string,\n  points: number,\n  total: number\n): Marks => {\n  let name = assignment.length === 0 ? 'Assignment' : assignment\n  if (course.assignments.some((a) => a.name === name)) {\n    let indentifier = 2\n    while (course.assignments.some((a) => a.name === name + indentifier)) {\n      indentifier++\n    }\n    name = name + indentifier\n  }\n  course.assignments.unshift({\n    name: name,\n    category: category,\n    status: 'Graded',\n    notes: '',\n    points: points,\n    total: total,\n    modified: true,\n    date: {\n      due: new Date(),\n      start: new Date()\n    }\n  })\n  marks.courses.set(course.name, course)\n  const m = Object.assign({}, marks)\n  return calculatePoints(m)\n}\n\nconst calculateMarkColor = (mark: number): string => {\n  switch (calculateLetterGrade(mark)) {\n    case 'A':\n      return '#10C212'\n    case 'B':\n      return '#1E2EE6'\n    case 'C':\n      return '#F5A327'\n    case 'D':\n      return '#C72222'\n    case 'E':\n      return '#330505'\n    case 'F':\n      return Colors.black\n  }\n}\n\nconst calculateLetterGrade = (\n  mark: number\n): 'A' | 'B' | 'C' | 'D' | 'E' | 'F' => {\n  if (mark >= 89.5) {\n    return 'A'\n  } else if (mark >= 79.5) {\n    return 'B'\n  } else if (mark >= 69.5) {\n    return 'C'\n  } else if (mark >= 59.5) {\n    return 'D'\n  } else if (mark >= 49.5) {\n    return 'E'\n  } else {\n    return 'F'\n  }\n}\n\nconst isNumber = (input: string): boolean => {\n  return /^[0-9.]+$/g.test(input)\n}\n\nconst suffix = (num: number): 'st' | 'nd' | 'rd' | 'th' => {\n  const j = num % 10,\n    k = num % 100\n  if (j === 1 && k !== 11) {\n    return 'st'\n  }\n  if (j === 2 && k !== 12) {\n    return 'nd'\n  }\n  if (j === 3 && k !== 13) {\n    return 'rd'\n  }\n  return 'th'\n}\n\nexport {\n  parseCourseName,\n  convertGradebook,\n  calculatePoints,\n  parsePoints,\n  roundTo,\n  deleteAssignment,\n  updatePoints,\n  addAssignment,\n  calculateMarkColor,\n  calculateLetterGrade,\n  isNumber,\n  suffix\n}\n","import React from 'react'\nimport { memo } from 'react'\nimport { TouchableOpacity, StyleSheet, View, Text } from 'react-native'\nimport { Colors } from '../colors/Colors'\nconst District = (props) => {\n  return (\n    <TouchableOpacity\n      {...props}\n      style={[\n        props.listItemContainerStyle,\n        {\n          backgroundColor: props.isSelected && Colors.light_gray\n        }\n      ]}\n      onPress={props.onPress}\n      activeOpacity={0.5}\n    >\n      <View style={styles.district_name_container}>\n        <Text numberOfLines={1} style={props.listItemLabelStyle}>\n          {props.label}\n        </Text>\n      </View>\n    </TouchableOpacity>\n  )\n}\n\nconst styles = StyleSheet.create({\n  district_name_container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-start'\n  }\n})\n\nexport default memo(District)\n","module.exports = __webpack_public_path__ + \"static/media/mountainbackground.240775b1.png\";","import { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\nimport Grades from '../screens/Grades'\nimport Profile from '../screens/Profile'\nimport React from 'react'\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack'\nimport { RootStackParamList } from '../types/RootStackParams'\nimport { useNavigation } from '@react-navigation/native'\nimport { Ionicons } from '@expo/vector-icons'\nimport { MaterialIcons } from '@expo/vector-icons'\nimport Documents from '../screens/Documents'\nimport { TouchableOpacity } from 'react-native'\nimport { Colors } from '../colors/Colors'\n\nconst Tab = createBottomTabNavigator()\ntype navScreenProp = NativeStackNavigationProp<RootStackParamList, 'Menu'>\n\nconst EmptyComponent = () => null\n\nconst App = () => {\n  const navigation = useNavigation<navScreenProp>()\n\n  return (\n    <Tab.Navigator\n      screenOptions={{\n        tabBarShowLabel: false,\n        tabBarStyle: {\n          borderTopWidth: 1,\n          overflow: 'hidden'\n        }\n      }}\n    >\n      <Tab.Screen\n        name=\"Grades\"\n        component={Grades}\n        options={{\n          headerShown: false,\n          tabBarIcon: (tabInfo) => {\n            return tabInfo.focused ? (\n              <MaterialIcons\n                name=\"insert-chart\"\n                size={30}\n                color={Colors.navy}\n              />\n            ) : (\n              <MaterialIcons\n                name=\"insert-chart-outlined\"\n                size={30}\n                color={Colors.secondary}\n              />\n            )\n          }\n        }}\n      />\n      <Tab.Screen\n        name=\"Documents\"\n        component={Documents}\n        options={{\n          headerShown: false,\n          tabBarIcon: (tabInfo) => {\n            return tabInfo.focused ? (\n              <Ionicons name=\"folder\" size={30} color={Colors.navy} />\n            ) : (\n              <Ionicons\n                name=\"folder-outline\"\n                size={30}\n                color={Colors.secondary}\n              />\n            )\n          }\n        }}\n      />\n      <Tab.Screen\n        name=\"Profile\"\n        component={Profile}\n        options={{\n          headerShown: false,\n          tabBarIcon: (tabInfo) => {\n            return tabInfo.focused ? (\n              <Ionicons name=\"person\" size={30} color={Colors.navy} />\n            ) : (\n              <Ionicons\n                name=\"person-outline\"\n                size={30}\n                color={Colors.secondary}\n              />\n            )\n          }\n        }}\n      />\n      <Tab.Screen\n        name=\"Logout\"\n        component={EmptyComponent}\n        options={({ navigation }) => ({\n          headerShown: false,\n          tabBarIcon: () => {\n            return (\n              <Ionicons name=\"exit-outline\" size={32} color={Colors.black} />\n            )\n          },\n          tabBarButton: (props) => (\n            <TouchableOpacity\n              {...props}\n              onPress={() => navigation.navigate('Login')}\n              activeOpacity={0.5}\n            />\n          )\n        })}\n      />\n    </Tab.Navigator>\n  )\n}\n\nexport default App\n","import React, { useState } from 'react'\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\nimport CourseDetails from './CourseDetails'\nimport Courses from './Courses'\nimport GradeContext from '../contexts/GradeContext'\n\nconst Stack = createNativeStackNavigator()\n\nconst StackNavigator = () => {\n  const [course, setCourse] = useState(undefined as string)\n\n  return (\n    <GradeContext.Provider\n      value={{ courseHeader: course, setCourse: setCourse }}\n    >\n      <Stack.Navigator>\n        <Stack.Screen\n          name=\"Courses\"\n          component={Courses}\n          options={{\n            headerShown: false\n          }}\n        />\n        <Stack.Screen\n          name=\"Course Details\"\n          component={CourseDetails}\n          options={{\n            headerShown: false\n          }}\n        />\n      </Stack.Navigator>\n    </GradeContext.Provider>\n  )\n}\n\nexport default StackNavigator\n","import { useNavigation } from '@react-navigation/native'\nimport React, { useContext, useEffect, useState } from 'react'\nimport {\n  ActivityIndicator,\n  FlatList,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View\n} from 'react-native'\nimport AppContext from '../contexts/AppContext'\nimport Assignment from '../components/Assignment'\nimport {\n  addAssignment,\n  convertGradebook,\n  parseCourseName,\n  isNumber\n} from '../gradebook/GradeUtil'\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\nimport { LightTheme } from '../theme/LightTheme'\nimport Modal from 'react-native-modal'\nimport { TextInput } from 'react-native-gesture-handler'\nimport DropDownPicker from 'react-native-dropdown-picker'\nimport CustomButton from '../components/CustomButton'\nimport { Colors } from '../colors/Colors'\nimport { showMessage } from 'react-native-flash-message'\nimport { SafeAreaView } from 'react-native-safe-area-context'\nimport AwesomeAlert from 'react-native-awesome-alerts'\n\nconst CourseDetails = ({ route }) => {\n  const courseName = route.params.title\n  const navigation = useNavigation()\n\n  const { marks, client, setMarks } = useContext(AppContext)\n  const course = marks.courses.get(courseName)\n\n  const [isModalVisible, setModalVisible] = useState(false)\n  const [open, setOpen] = useState(false)\n  const [category, setCategory] = useState(\n    marks.courses.get(courseName).categories.values().next().value?.name\n  )\n  const [categories, setCategories] = useState(\n    Array.from(marks.courses.get(courseName).categories.values()).map((c) => {\n      return { label: c.name, value: c.name }\n    })\n  )\n  const [assignmentName, setAssignmentName] = useState('')\n  const [points, setPoints] = useState('')\n  const [total, setTotal] = useState('')\n\n  const [isLoading, setIsLoading] = useState(false)\n  const [showAlert, setShowAlert] = useState(false)\n  const [errorMessage, setErrorMessage] = useState()\n\n  useEffect(() => {\n    if (isModalVisible) {\n      setAssignmentName('')\n      setPoints('')\n      setTotal('')\n    }\n  }, [isModalVisible])\n\n  const toggleModal = (): void => {\n    setModalVisible(!isModalVisible)\n  }\n\n  const add = () => {\n    setMarks(\n      addAssignment(\n        marks,\n        course,\n        assignmentName,\n        category,\n        parseFloat(points),\n        parseFloat(total)\n      )\n    )\n    toggleModal()\n  }\n\n  const refreshMarks = async (): Promise<void> => {\n    setIsLoading(true)\n    try {\n      setMarks(\n        await convertGradebook(\n          await client.gradebook(marks.reportingPeriod.index)\n        )\n      )\n      showMessage({\n        message: 'Refreshed',\n        type: 'info',\n        icon: 'success'\n      })\n    } catch (err) {\n      setErrorMessage(err.message)\n      setShowAlert(true)\n    }\n    setIsLoading(false)\n  }\n\n  return (\n    <>\n      <SafeAreaView\n        style={{ flex: 1 }}\n        pointerEvents={isLoading ? 'none' : 'auto'}\n      >\n        <View style={styles.course_details_container}>\n          <View\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'flex-start'\n            }}\n          >\n            <FontAwesome.Button\n              name=\"chevron-left\"\n              backgroundColor=\"transparent\"\n              iconStyle={{\n                color: Colors.secondary\n              }}\n              underlayColor=\"none\"\n              activeOpacity={0.5}\n              size={24}\n              onPress={() => navigation.goBack()}\n            ></FontAwesome.Button>\n          </View>\n          <Text numberOfLines={1} style={styles.course_details}>\n            {isNaN(course.value) ? 'N/A' : course.value} |{' '}\n            {parseCourseName(courseName)}\n          </Text>\n          <View\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'flex-end'\n            }}\n          >\n            <FontAwesome.Button\n              name=\"plus-circle\"\n              backgroundColor=\"transparent\"\n              iconStyle={{\n                color: Colors.secondary\n              }}\n              size={24}\n              underlayColor=\"none\"\n              activeOpacity={0.5}\n              onPress={() => toggleModal()}\n            ></FontAwesome.Button>\n            <FontAwesome.Button\n              name=\"refresh\"\n              backgroundColor=\"transparent\"\n              iconStyle={{\n                color: Colors.secondary\n              }}\n              underlayColor=\"none\"\n              activeOpacity={0.5}\n              size={24}\n              onPress={() => refreshMarks()}\n            ></FontAwesome.Button>\n          </View>\n        </View>\n        <FlatList\n          data={course.assignments}\n          renderItem={({ item }) => (\n            <Assignment name={item.name} course={courseName}></Assignment>\n          )}\n          keyExtractor={(item) => item.name}\n        />\n        <Modal\n          isVisible={isModalVisible}\n          coverScreen={true}\n          onBackdropPress={toggleModal}\n          animationIn={'fadeIn'}\n          animationOut={'fadeOut'}\n        >\n          <View style={styles.modal}>\n            <View style={styles.modal_view}>\n              <TextInput\n                value={assignmentName}\n                placeholder=\"Name (Optional)\"\n                onChangeText={(t) => {\n                  setAssignmentName(t)\n                }}\n                style={[styles.input, { marginTop: 10 }]}\n              ></TextInput>\n              <TextInput\n                value={points}\n                keyboardType=\"decimal-pad\"\n                autoComplete=\"off\"\n                placeholder=\"Points Earned\"\n                onChangeText={(t) => {\n                  if (isNumber(t) || t === '') setPoints(t)\n                }}\n                style={styles.input}\n              ></TextInput>\n              <TextInput\n                value={total}\n                keyboardType=\"decimal-pad\"\n                autoComplete=\"off\"\n                placeholder=\"Total Points\"\n                onChangeText={(t) => {\n                  if (isNumber(t) || t === '') setTotal(t)\n                }}\n                style={styles.input}\n              ></TextInput>\n              <View\n                style={{\n                  marginHorizontal: 7,\n                  marginTop: 7\n                }}\n              >\n                <DropDownPicker\n                  open={open}\n                  value={category}\n                  items={categories}\n                  setOpen={setOpen}\n                  setValue={setCategory}\n                  setItems={setCategories}\n                  maxHeight={null}\n                  style={styles.dropdown}\n                  textStyle={styles.dropdown_text}\n                  containerStyle={styles.dropdown_container}\n                  translation={{\n                    PLACEHOLDER: 'Select Category'\n                  }}\n                  renderListItem={(props) => {\n                    return (\n                      <TouchableOpacity\n                        {...props}\n                        style={[\n                          props.listItemContainerStyle,\n                          {\n                            backgroundColor:\n                              props.isSelected && Colors.light_gray\n                          }\n                        ]}\n                        onPress={() => {\n                          setCategory(props.value)\n                          setOpen(false)\n                        }}\n                        activeOpacity={0.5}\n                      >\n                        <View style={styles.category_name_container}>\n                          <Text\n                            numberOfLines={1}\n                            style={props.listItemLabelStyle}\n                          >\n                            {props.label}\n                          </Text>\n                        </View>\n                      </TouchableOpacity>\n                    )\n                  }}\n                ></DropDownPicker>\n                <CustomButton\n                  onPress={add}\n                  text={'Add Assignment'}\n                  backgroundColor={LightTheme.colors.card}\n                  textColor={Colors.black}\n                  fontFamily=\"Inter_600SemiBold\"\n                  containerStyle={styles.button_container}\n                  disabled={false}\n                ></CustomButton>\n              </View>\n            </View>\n          </View>\n        </Modal>\n      </SafeAreaView>\n      {isLoading && (\n        <SafeAreaView style={styles.loading}>\n          <ActivityIndicator size={'large'} />\n        </SafeAreaView>\n      )}\n      <AwesomeAlert\n        show={showAlert}\n        showProgress={false}\n        title={'Error'}\n        message={errorMessage}\n        closeOnTouchOutside={true}\n        closeOnHardwareBackPress={true}\n        showCancelButton={false}\n        showConfirmButton={true}\n        confirmText={'Ok'}\n        confirmButtonColor={Colors.primary}\n        confirmButtonTextStyle={{ color: Colors.black }}\n        onConfirmPressed={() => {\n          setShowAlert(false)\n        }}\n      ></AwesomeAlert>\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  input: {\n    marginHorizontal: 10,\n    marginVertical: 5,\n    padding: 5,\n    borderWidth: 1,\n    height: 30,\n    borderColor: Colors.black,\n    fontFamily: 'Inter_400Regular',\n    fontSize: 12,\n    borderRadius: 5\n  },\n  modal: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    alignSelf: 'center',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    width: 330,\n    height: 250\n  },\n  modal_view: {\n    width: 330,\n    height: 250\n  },\n  button_container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignSelf: 'center',\n    width: 200,\n    height: 50,\n    borderRadius: 10,\n    borderWidth: 0,\n    margin: 10\n  },\n  course_details: {\n    fontSize: 22,\n    flex: 1,\n    flexWrap: 'wrap',\n    fontFamily: 'Inter_800ExtraBold'\n  },\n  course_details_container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  loading: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(200, 200, 200, 0.2)'\n  },\n  dropdown: {\n    borderWidth: 1,\n    borderColor: Colors.black,\n    backgroundColor: 'transparent',\n    padding: 5,\n    marginHorizontal: 10,\n    width: 310,\n    alignSelf: 'center'\n  },\n  dropdown_text: {\n    fontFamily: 'Inter_400Regular',\n    fontSize: 12\n  },\n  dropdown_container: {\n    width: 310,\n    alignSelf: 'center'\n  },\n  category_name_container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-start'\n  }\n})\n\nexport default CourseDetails\n","import React, { useContext, useState } from 'react'\nimport {\n  StyleSheet,\n  View,\n  Text,\n  TextInput,\n  Platform,\n  TouchableOpacity\n} from 'react-native'\nimport {\n  calculateMarkColor,\n  updatePoints,\n  deleteAssignment,\n  isNumber,\n  roundTo,\n  calculateLetterGrade\n} from '../gradebook/GradeUtil'\nimport AppContext from '../contexts/AppContext'\nimport { Colors } from '../colors/Colors'\nimport { MaterialIcons } from '@expo/vector-icons'\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\n\nfunction Assignment(props) {\n  const { marks, setMarks } = useContext(AppContext)\n  const [isDropdown, setIsDropdown] = useState(false)\n  const assignment = marks.courses\n    .get(props.course)\n    .assignments.find((a) => a.name === props.name)\n  const totalWeight: number = Array.from(\n    marks.courses.get(props.course).categories.values()\n  ).reduce((p, c) => (isNaN(c.value) ? p : p + c.weight), 0)\n  const score: number = (assignment.points / assignment.total) * 100\n  const hasScore: boolean = !isNaN((assignment.points / assignment.total) * 100)\n\n  const update = (input: string, type: string) => {\n    setMarks(\n      updatePoints(\n        marks,\n        props.course,\n        assignment.name,\n        parseFloat(input),\n        type\n      )\n    )\n  }\n\n  const getWidth = (n: number) => {\n    const min = 34\n    if (isNaN(n)) return min\n    return Math.max(n.toString().length * 15, min)\n  }\n\n  return (\n    <View\n      style={[\n        styles.container,\n        props.style,\n        hasScore\n          ? {\n              borderLeftColor: calculateMarkColor(score),\n              borderLeftWidth: 3\n            }\n          : {}\n      ]}\n    >\n      <View style={[styles.horizontal_container, { height: 52 }]}>\n        <View style={styles.assignment_info_container}>\n          <Text\n            numberOfLines={1}\n            style={[\n              styles.name,\n              {\n                color: assignment.modified\n                  ? Colors.dark_middle_blue_green\n                  : Colors.navy\n              }\n            ]}\n          >\n            {props.name}\n          </Text>\n          <Text numberOfLines={1} style={styles.category}>\n            {assignment.category} - {assignment.date.due.toLocaleDateString()}\n          </Text>\n        </View>\n        <View style={styles.input_container}>\n          <TextInput\n            value={isNaN(assignment.points) ? '' : assignment.points.toString()}\n            placeholder={'__'}\n            keyboardType={'decimal-pad'}\n            autoComplete={'off'}\n            style={[\n              styles.mark,\n              {\n                color: assignment.modified\n                  ? Colors.dark_middle_blue_green\n                  : Colors.black,\n                width: getWidth(assignment.points)\n              }\n            ]}\n            onChangeText={(input) => {\n              if (isNumber(input) || input === '') update(input, 'earned')\n            }}\n          />\n          <Text style={styles.dash}> / </Text>\n          <TextInput\n            value={isNaN(assignment.total) ? '' : assignment.total.toString()}\n            placeholder={'__'}\n            keyboardType={'decimal-pad'}\n            autoComplete={'off'}\n            style={[\n              styles.mark,\n              {\n                color: assignment.modified\n                  ? Colors.dark_middle_blue_green\n                  : Colors.black,\n                width: getWidth(assignment.total)\n              }\n            ]}\n            onChangeText={(input) => {\n              if (isNumber(input) || input === '') update(input, 'total')\n            }}\n          />\n        </View>\n        <TouchableOpacity\n          activeOpacity={0.5}\n          onPress={() => setIsDropdown(!isDropdown)}\n        >\n          <MaterialIcons\n            name={isDropdown ? 'arrow-drop-up' : 'arrow-drop-down'}\n            color={Colors.middle_blue_green}\n            size={36}\n            style={{ marginRight: 5 }}\n          />\n        </TouchableOpacity>\n      </View>\n      {isDropdown && (\n        <View style={styles.dropdown_container}>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Name:</Text>\n            <Text style={styles.dropdown_text_value}>{assignment.name}</Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Category:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {assignment.category}\n            </Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Effective Weight:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {roundTo(\n                (marks.courses\n                  .get(props.course)\n                  .categories.get(assignment.category).weight /\n                  totalWeight) *\n                  100,\n                2\n              )}\n              %\n            </Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Weight:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {\n                marks.courses\n                  .get(props.course)\n                  .categories.get(assignment.category).weight\n              }\n              %\n            </Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Grade:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {hasScore\n                ? `${roundTo(score, 2)}% (${calculateLetterGrade(score)})`\n                : 'N/A'}\n            </Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Status:</Text>\n            <Text style={styles.dropdown_text_value}>{assignment.status}</Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Due Date:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {assignment.date.due.toLocaleDateString()}\n            </Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Start Date:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {assignment.date.start.toLocaleDateString()}\n            </Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Notes:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {assignment.notes.length === 0 ? 'None' : assignment.notes}\n            </Text>\n          </View>\n          <FontAwesome.Button\n            name=\"trash-o\"\n            backgroundColor=\"transparent\"\n            iconStyle={{\n              color: Colors.red\n            }}\n            underlayColor=\"none\"\n            activeOpacity={0.5}\n            size={24}\n            onPress={() =>\n              setMarks(deleteAssignment(marks, props.course, assignment.name))\n            }\n          ></FontAwesome.Button>\n        </View>\n      )}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.off_white,\n    borderRadius: 10,\n    marginLeft: 7,\n    marginRight: 7,\n    marginTop: 7,\n    borderWidth: 1,\n    borderColor: Colors.secondary\n  },\n  horizontal_container: {\n    flexDirection: 'row'\n  },\n  dropdown_container: {\n    padding: 10,\n    backgroundColor: Colors.off_white,\n    borderTopColor: Colors.onyx_gray,\n    borderTopWidth: 1\n  },\n  assignment_info_container: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    marginLeft: 7,\n    flex: 1\n  },\n\n  name: {\n    color: Colors.black,\n    fontFamily: 'Inter_700Bold',\n    fontSize: 14,\n    marginHorizontal: 7,\n    lineHeight: 14 * 0.75,\n    textAlign: 'left',\n    ...Platform.select({\n      web: {\n        paddingBottom: 11 - 11 * 0.75\n      },\n      default: {\n        paddingTop: 14 - 14 * 0.75\n      }\n    })\n  },\n  category: {\n    color: Colors.black,\n    fontFamily: 'Inter_400Regular',\n    fontSize: 12,\n    marginHorizontal: 7,\n    marginTop: 4,\n    textAlign: 'left',\n    ...Platform.select({\n      web: {\n        lineHeight: 11 * 0.75,\n        paddingVertical: 2\n      },\n      default: {\n        lineHeight: 12 * 0.75,\n        paddingTop: 12 - 12 * 0.75\n      }\n    })\n  },\n  input_container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  mark: {\n    height: 60,\n    fontSize: 23,\n    fontFamily: 'Inter_600SemiBold',\n    alignSelf: 'center'\n  },\n  dash: {\n    fontSize: 20,\n    alignSelf: 'center',\n    textAlignVertical: 'center',\n    marginRight: 3\n  },\n  dropdown_text_name: {\n    marginHorizontal: 7,\n    fontFamily: 'Montserrat_600SemiBold',\n    fontSize: 12\n  },\n  dropdown_text_value: {\n    fontFamily: 'Inter_400Regular',\n    flex: 1,\n    fontSize: 12\n  }\n})\n\nexport default Assignment\n","import React, { useContext, useState, useEffect } from 'react'\nimport AppContext from '../contexts/AppContext'\nimport {\n  SafeAreaView,\n  StyleSheet,\n  View,\n  Text,\n  ActivityIndicator,\n  Platform,\n  FlatList,\n  TouchableOpacity\n} from 'react-native'\nimport Course from '../components/Course'\nimport DropDownPicker from 'react-native-dropdown-picker'\nimport { convertGradebook, parseCourseName } from '../gradebook/GradeUtil'\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\nimport { showMessage } from 'react-native-flash-message'\nimport { Colors } from '../colors/Colors'\nimport AwesomeAlert from 'react-native-awesome-alerts'\nimport Constants from 'expo-constants'\n\nconst Courses = ({ navigation }) => {\n  const { client, marks, setMarks } = useContext(AppContext)\n  const [open, setOpen] = useState(false)\n  const [value, setValue] = useState(marks.reportingPeriod.index)\n  const [periods, setPeriods] = useState(\n    marks.reportingPeriods.map((p) => {\n      return { label: p.name, value: p.index }\n    })\n  )\n  const [isLoading, setIsLoading] = useState(false)\n  const [showAlert, setShowAlert] = useState(false)\n  const [errorMessage, setErrorMessage] = useState()\n\n  useEffect(() => {\n    setIsLoading(true)\n    let isSubscribed = true\n    const getGradebook = async () => {\n      try {\n        const marks = await convertGradebook(await client.gradebook(value))\n        if (isSubscribed) {\n          setMarks(marks)\n        }\n      } catch (err) {\n        setErrorMessage(err.message)\n        setShowAlert(true)\n      }\n    }\n    getGradebook()\n    setIsLoading(false)\n    return () => {\n      isSubscribed = false\n    }\n  }, [value])\n\n  const refreshMarks = async (): Promise<void> => {\n    setIsLoading(true)\n    try {\n      const gradebook = await client.gradebook(value)\n      const newMarks = await convertGradebook(gradebook)\n      setMarks(newMarks)\n    } catch (err) {\n      setErrorMessage(err.message)\n      setShowAlert(true)\n      setIsLoading(false)\n      return\n    }\n    showMessage({\n      message: 'Gradebook refreshed',\n      type: 'info',\n      icon: 'success'\n    })\n    setIsLoading(false)\n  }\n\n  return (\n    <>\n      <SafeAreaView\n        style={styles.container}\n        pointerEvents={isLoading ? 'none' : 'auto'}\n      >\n        <DropDownPicker\n          open={open}\n          value={value}\n          items={periods}\n          setOpen={setOpen}\n          setValue={setValue}\n          setItems={setPeriods}\n          maxHeight={null}\n          style={styles.dropdown}\n          textStyle={styles.dropdown_text}\n          translation={{\n            PLACEHOLDER: 'Select Marking Period'\n          }}\n          renderListItem={(props) => {\n            return (\n              <TouchableOpacity\n                {...props}\n                style={[\n                  props.listItemContainerStyle,\n                  {\n                    backgroundColor: props.isSelected && Colors.light_gray\n                  }\n                ]}\n                onPress={() => {\n                  setValue(props.value)\n                  setOpen(false)\n                }}\n                activeOpacity={0.5}\n              >\n                <View style={styles.marking_period_container}>\n                  <Text numberOfLines={1} style={props.listItemLabelStyle}>\n                    {props.label}\n                  </Text>\n                </View>\n              </TouchableOpacity>\n            )\n          }}\n        ></DropDownPicker>\n        <View style={styles.row_container}>\n          {!isNaN(marks.gpa) && (\n            <View style={styles.gpa_container}>\n              <Text style={styles.gpa}>{marks.gpa} GPA</Text>\n            </View>\n          )}\n          <View style={styles.refresh_button_container}>\n            <FontAwesome.Button\n              name=\"refresh\"\n              backgroundColor=\"transparent\"\n              iconStyle={{\n                color: Colors.secondary\n              }}\n              underlayColor=\"none\"\n              activeOpacity={0.5}\n              size={24}\n              onPress={() => refreshMarks()}\n            ></FontAwesome.Button>\n          </View>\n        </View>\n        {marks && (\n          <FlatList\n            data={[...marks.courses.entries()]}\n            renderItem={({ item }) => (\n              <TouchableOpacity\n                activeOpacity={0.5}\n                onPress={() => {\n                  if (item[1].categories.size > 1) {\n                    navigation.navigate('Course Details', { title: item[0] })\n                  }\n                }}\n              >\n                <Course\n                  name={parseCourseName(item[0])}\n                  mark={item[1].value}\n                  period={item[1].period}\n                  teacher={item[1].teacher}\n                ></Course>\n              </TouchableOpacity>\n            )}\n            keyExtractor={(item) => item[0]}\n          />\n        )}\n      </SafeAreaView>\n      {isLoading && (\n        <SafeAreaView style={styles.loading}>\n          <ActivityIndicator size={'large'} />\n        </SafeAreaView>\n      )}\n      <AwesomeAlert\n        show={showAlert}\n        showProgress={false}\n        title={'Error'}\n        message={errorMessage}\n        closeOnTouchOutside={true}\n        closeOnHardwareBackPress={true}\n        showCancelButton={false}\n        showConfirmButton={true}\n        confirmText={'Ok'}\n        confirmButtonColor={Colors.primary}\n        confirmButtonTextStyle={{ color: Colors.black }}\n        onConfirmPressed={() => {\n          setShowAlert(false)\n        }}\n      ></AwesomeAlert>\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    ...Platform.select({\n      android: {\n        marginTop: Constants.statusBarHeight\n      }\n    })\n  },\n  // android status bar not accounted for properly in safeview + dropdownpicker\n  // web needs to be shifted 11 right\n  dropdown: {\n    borderWidth: 0,\n    height: 30,\n    marginBottom: 15,\n    backgroundColor: 'transparent'\n  },\n  dropdown_text: {\n    fontFamily: 'Inter_800ExtraBold',\n    fontSize: 30\n  },\n  marking_period_container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-start'\n  },\n  row_container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  gpa_container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-start'\n  },\n  gpa: {\n    marginLeft: 11,\n    fontFamily: 'Montserrat_700Bold',\n    fontSize: 22\n  },\n  refresh_button_container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  loading: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(200, 200, 200, 0.2)'\n  }\n})\n\nexport default Courses\n","import React from 'react'\nimport { StyleSheet, View, Text, Platform } from 'react-native'\nimport { Colors } from '../colors/Colors'\nimport {\n  calculateLetterGrade,\n  calculateMarkColor\n} from '../gradebook/GradeUtil'\n\nfunction Course(props) {\n  const mark: number = parseFloat(props.mark)\n\n  return (\n    <View style={[styles.container, props.style]}>\n      <Text style={styles.period_number}>{('0' + props.period).slice(-2)}</Text>\n      <View style={styles.course_info_container}>\n        <Text numberOfLines={1} style={styles.name}>\n          {props.name}\n        </Text>\n        <Text numberOfLines={1} style={styles.teacher}>\n          {props.teacher}\n        </Text>\n      </View>\n      <Text style={[styles.mark]}>\n        {isNaN(parseFloat(props.mark)) ? 'N/A' : props.mark}\n      </Text>\n      {!isNaN(parseFloat(props.mark)) && (\n        <Text\n          style={[\n            styles.letter_grade,\n            {\n              color: calculateMarkColor(mark)\n            }\n          ]}\n        >\n          {calculateLetterGrade(mark)}\n        </Text>\n      )}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.off_white,\n    borderRadius: 15,\n    height: 55,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginHorizontal: 7,\n    marginTop: 10,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: Colors.secondary\n  },\n  period_number: {\n    fontFamily: 'Montserrat_800ExtraBold',\n    fontSize: 32\n  },\n  course_info_container: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    marginHorizontal: 7,\n    flex: 1\n  },\n\n  name: {\n    color: Colors.navy,\n    fontFamily: 'Montserrat_700Bold',\n    fontSize: 18,\n    marginRight: 14,\n    marginLeft: 7,\n    lineHeight: 18 * 0.75,\n    textAlign: 'left',\n    ...Platform.select({\n      web: {\n        paddingBottom: 12 - 12 * 0.75\n      },\n      default: {\n        paddingTop: 18 - 18 * 0.75\n      }\n    })\n  },\n  teacher: {\n    color: Colors.black,\n    fontFamily: 'Inter_400Regular',\n    fontSize: 12,\n    marginRight: 14,\n    marginLeft: 7,\n    lineHeight: 12 * 0.75,\n    marginTop: 4,\n    textAlign: 'left',\n    ...Platform.select({\n      web: {\n        paddingBottom: 2\n      },\n      default: {\n        paddingTop: 12 - 12 * 0.75\n      }\n    })\n  },\n  mark: {\n    fontFamily: 'Montserrat_500Medium',\n    fontSize: 28,\n    alignSelf: 'center'\n  },\n  letter_grade: {\n    marginLeft: 7,\n    fontFamily: 'Montserrat_800ExtraBold',\n    fontSize: 32,\n    alignSelf: 'center'\n  }\n})\n\nexport default Course\n","import React from 'react'\n\ninterface CourseName {\n  courseHeader: string\n  setCourse: React.Dispatch<React.SetStateAction<string>>\n}\n\nconst GradeContext = React.createContext<CourseName>(null)\n\nexport default GradeContext\n","import React, { useContext, useState } from 'react'\nimport { ActivityIndicator, Image, StyleSheet, View, Text } from 'react-native'\nimport { SchoolInfo, StudentInfo } from 'studentvue'\nimport { Colors } from '../colors/Colors'\nimport AppContext from '../contexts/AppContext'\nimport {\n  FontAwesome,\n  MaterialCommunityIcons,\n  Feather,\n  AntDesign\n} from '@expo/vector-icons'\nimport { suffix } from '../gradebook/GradeUtil'\nimport useAsyncEffect from 'use-async-effect'\nimport { ScrollView } from 'react-native-gesture-handler'\nimport Constants from 'expo-constants'\n\nconst Profile = () => {\n  const { client } = useContext(AppContext)\n  const [studentInfo, setStudentInfo] = useState(undefined as StudentInfo)\n  const [schoolInfo, setSchoolInfo] = useState(undefined as SchoolInfo)\n\n  useAsyncEffect(async () => {\n    setStudentInfo(await client.studentInfo())\n    setSchoolInfo(await client.schoolInfo())\n  }, [])\n\n  return (\n    <View style={{ flex: 1 }}>\n      {!studentInfo || !schoolInfo ? (\n        <ActivityIndicator\n          color={Colors.secondary}\n          animating={true}\n          size=\"large\"\n          style={{\n            alignSelf: 'center',\n            flex: 1,\n            justifyContent: 'center'\n          }}\n        />\n      ) : (\n        <View style={{ flex: 1 }}>\n          <View style={styles.header}></View>\n          <Image\n            style={styles.avatar}\n            source={{\n              uri: `data:image/png;base64,${studentInfo.photo}`\n            }}\n          />\n          <Text style={styles.name}>{studentInfo.student.name}</Text>\n          <View style={styles.description_container}>\n            <Text style={styles.description_part_text}>\n              {studentInfo.grade + suffix(parseInt(studentInfo.grade))}\n            </Text>\n            <Text style={styles.description_part_text}>\n              {studentInfo.birthDate.toLocaleDateString()}\n            </Text>\n          </View>\n          <ScrollView style={styles.property_view}>\n            {studentInfo.id && (\n              <View style={styles.property_container}>\n                <AntDesign name=\"idcard\" size={26} color={Colors.black} />\n                <Text style={styles.property_text}>\n                  {studentInfo.id ? studentInfo.id : ''}\n                </Text>\n              </View>\n            )}\n            {studentInfo.phone && (\n              <View style={styles.property_container}>\n                <Feather name=\"phone\" size={26} color={Colors.black} />\n                <Text style={styles.property_text}>{studentInfo.phone}</Text>\n              </View>\n            )}\n            {studentInfo.address && (\n              <View style={styles.property_container}>\n                <Feather name=\"home\" size={26} color={Colors.black} />\n                <Text style={styles.property_text}>{studentInfo.address}</Text>\n              </View>\n            )}\n            {studentInfo.email && (\n              <View style={styles.property_container}>\n                <Feather name=\"mail\" size={26} color={Colors.black} />\n                <Text style={styles.property_text}>{studentInfo.email}</Text>\n              </View>\n            )}\n            {studentInfo.currentSchool && (\n              <View style={styles.property_container}>\n                <FontAwesome name=\"building-o\" size={26} color={Colors.black} />\n                <Text style={styles.property_text}>\n                  {studentInfo.currentSchool}\n                </Text>\n              </View>\n            )}\n            {schoolInfo.school.address && (\n              <View style={styles.property_container}>\n                <Feather name=\"map-pin\" size={26} color={Colors.black} />\n                <Text style={styles.property_text}>\n                  {schoolInfo.school.address}\n                </Text>\n              </View>\n            )}\n            {studentInfo.homeRoom && (\n              <View style={styles.property_container}>\n                <FontAwesome\n                  name=\"pencil-square-o\"\n                  size={26}\n                  color={Colors.black}\n                />\n                <Text style={styles.property_text}>\n                  Homeroom: {studentInfo.homeRoom}\n                </Text>\n              </View>\n            )}\n            {studentInfo.counselor && (\n              <View style={styles.property_container}>\n                <Feather name=\"user\" size={26} color={Colors.black} />\n                <Text style={styles.property_text}>\n                  Counselor: {studentInfo.counselor.name}{' '}\n                  {studentInfo.counselor.email}\n                </Text>\n              </View>\n            )}\n            {schoolInfo.school.principal && (\n              <View style={styles.property_container}>\n                <MaterialCommunityIcons\n                  name=\"crown-outline\"\n                  size={26}\n                  color={Colors.black}\n                />\n                <Text style={styles.property_text}>\n                  Principal: {schoolInfo.school.principal.name}{' '}\n                  {schoolInfo.school.principal.email}\n                </Text>\n              </View>\n            )}\n          </ScrollView>\n        </View>\n      )}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  header: {\n    height: Constants.statusBarHeight + 90,\n    backgroundColor: Colors.primary,\n    borderBottomRightRadius: 25,\n    borderBottomLeftRadius: 25,\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.15,\n    shadowRadius: 6\n  },\n  name: {\n    fontSize: 32,\n    fontFamily: 'Montserrat_800ExtraBold',\n    alignSelf: 'center',\n    margin: 5\n  },\n  avatar: {\n    width: 150,\n    height: 150,\n    borderRadius: 150 / 2,\n    borderWidth: 1,\n    borderColor: Colors.black,\n    alignSelf: 'center',\n    marginTop: -150 / 2\n  },\n  description_container: {\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  description_part_text: {\n    marginHorizontal: 20,\n    marginBottom: 10,\n    fontSize: 24,\n    fontFamily: 'Montserrat_600SemiBold'\n  },\n  property_view: {\n    borderRadius: 25,\n    borderWidth: 1,\n    borderColor: Colors.secondary,\n    backgroundColor: Colors.off_white,\n    padding: 10,\n    paddingBottom: 0,\n    marginHorizontal: 20,\n    flexGrow: 0\n  },\n  property_container: {\n    flexDirection: 'row',\n    padding: 12\n  },\n  property_text: {\n    marginHorizontal: 8,\n    fontFamily: 'Inter_400Regular',\n    fontSize: 18,\n    color: Colors.onyx_gray\n  }\n})\n\nexport default Profile\n"],"sourceRoot":""}
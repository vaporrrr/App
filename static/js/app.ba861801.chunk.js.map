{"version":3,"sources":["components/CustomButton.tsx","contexts/AppContext.tsx","colors/Colors.ts","gradebook/GradeUtil.ts","screens/Login.tsx","components/Assignment.tsx","theme/LightTheme.ts","screens/CourseDetails.tsx","components/Course.tsx","screens/Courses.tsx","contexts/GradeContext.tsx","screens/Grades.tsx","screens/Profile.tsx","components/Document.tsx","screens/Documents.tsx","navigation/BottomNavigation.tsx","App.tsx"],"names":["styles","StyleSheet","create","buttonText","fontSize","textAlign","CustomButton","onPress","text","backgroundColor","textColor","fontFamily","containerStyle","TouchableOpacity","style","View","Text","color","AppContext","React","createContext","Colors","GradeUtil","name","includes","substring","lastIndexOf","trim","gradebook","marks","gpa","courses","Map","reportingPeriod","current","index","reportingPeriods","available","map","p","course","set","title","period","findIndex","c","teacher","staff","points","total","value","NaN","assignments","categories","get","weightedCategories","category","type","weight","parseFloat","standard","assignment","score","parsePoints","a","status","notes","modified","date","due","start","push","this","calculatePoints","Promise","resolve","numOfCourses","values","isNaN","roundTo","regex","match","split","num","places","multiplicator","Math","pow","toFixed","round","newMarks","filter","assignmentName","find","length","some","indentifier","unshift","Date","m","mark","calculateLetterGrade","Login","navigation","useNavigation","useContext","username","password","setUsername","setPassword","setClient","setMarks","useState","isLoading","setIsLoading","isChecked","setToggleCheckBox","showAlert","setShowAlert","errorMessage","setErrorMessage","Platform","OS","undefined","async","getValueFor","LinearGradient","colors","flex","SafeAreaView","alignItems","welcome","container","TextInput","defaultValue","onChangeText","u","placeholder","input","secureTextEntry","checkbox_container","BouncyCheckbox","size","fillColor","unfillColor","disableText","iconStyle","borderColor","disableBuiltInState","save_text","StudentVue","login","client","convertGradebook","message","save","navigate","bind","button_container","ActivityIndicator","animating","show","showProgress","closeOnTouchOutside","closeOnHardwareBackPress","showCancelButton","showConfirmButton","confirmText","confirmButtonColor","confirmButtonTextStyle","onConfirmPressed","alignSelf","justifyContent","marginTop","flexDirection","marginBottom","width","height","padding","borderWidth","borderRadius","loading","margin","position","marginLeft","key","SecureStore","marginRight","elevation","shadowOffset","shadowOpacity","shadowRadius","horizontal_container","dropdown_container","borderTopColor","borderTopWidth","assignment_info_container","marginHorizontal","lineHeight","paddingTop","input_container","dash","textAlignVertical","dropdown_text_name","dropdown_text_value","AssignmentComponent","props","isDropdown","setIsDropdown","totalWeight","Array","from","reduce","updatePoints","getWidth","n","max","toString","numberOfLines","toLocaleDateString","keyboardType","autoCompleteType","MaterialIcons","FontAwesome","Button","underlayColor","activeOpacity","deleteAssignment","LightTheme","dark","primary","background","card","border","notification","modal_title","modal","modal_view","dropdown","course_details","flexWrap","course_details_container","left","right","top","bottom","CourseDetails","courseName","route","params","isModalVisible","setModalVisible","open","setOpen","next","setCategory","label","setCategories","setAssignmentName","setPoints","setTotal","useEffect","toggleModal","pointerEvents","goBack","parseCourseName","showMessage","icon","FlatList","data","renderItem","item","Assignment","keyExtractor","isVisible","coverScreen","onBackdropPress","t","items","setValue","setItems","maxHeight","addAssignment","period_number","course_info_container","letter_grade","CourseComponent","calculateMarkColor","dropdown_text","row_container","gpa_container","refresh_button_container","Courses","periods","setPeriods","isSubscribed","getGradebook","textStyle","refreshMarks","entries","Course","GradeContext","Stack","createStackNavigator","StackNavigator","setCourse","Provider","courseHeader","Navigator","Screen","component","options","headerShown","suffix","j","k","header","avatar","description_container","description_part_container","description_part_text","property_container","property_text","Profile","studentInfo","setStudentInfo","Image","source","uri","photo","student","grade","parseInt","birthDate","Feather","phone","email","address","currentSchool","doc_info_container","info_container","DocumentComponent","title_container","Documents","documents","setDocuments","base64toBlob","base64","sliceSize","byteCharacters","window","atob","byteArrays","offset","slice","byteNumbers","i","charCodeAt","Uint8Array","Blob","document","file","fileName","comment","replace","filePath","FileSystem","encoding","Sharing","require","saveAs","downloadDocument","Document","documentGu","Tab","createBottomTabNavigator","EmptyComponent","App","screenOptions","tabBarShowLabel","tabBarStyle","Grades","tabBarIcon","tabInfo","focused","Ionicons","tabBarButton","setGradebook","user","useFonts","Inter_100Thin","Inter_200ExtraLight","Inter_300Light","Inter_400Regular","Inter_500Medium","Inter_600SemiBold","Inter_700Bold","Inter_800ExtraBold","Inter_900Black","Montserrat_100Thin","Montserrat_200ExtraLight","Montserrat_300Light","Montserrat_400Regular","Montserrat_500Medium","Montserrat_600SemiBold","Montserrat_700Bold","Montserrat_800ExtraBold","Montserrat_900Black","Montserrat_100Thin_Italic","Montserrat_200ExtraLight_Italic","Montserrat_300Light_Italic","Montserrat_400Regular_Italic","Montserrat_500Medium_Italic","Montserrat_600SemiBold_Italic","Montserrat_700Bold_Italic","Montserrat_800ExtraBold_Italic","Montserrat_900Black_Italic","NavigationContainer","theme","BottomNavigation"],"mappings":"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","file":"static/js/app.ba861801.chunk.js","sourcesContent":["import React from 'react'\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native'\n\ntype Props = {\n  onPress: any\n  text: string\n  backgroundColor: string\n  textColor: string\n  fontFamily: string\n  containerStyle: any\n}\n\nconst CustomButton: React.FC<Props> = ({\n  onPress,\n  text,\n  backgroundColor,\n  textColor,\n  fontFamily,\n  containerStyle\n}: Props) => {\n  return (\n    <TouchableOpacity\n      onPress={onPress}\n      style={[containerStyle, { backgroundColor: backgroundColor }]}\n    >\n      <View>\n        <Text\n          style={[\n            styles.buttonText,\n            { color: textColor, fontFamily: fontFamily }\n          ]}\n        >\n          {text}\n        </Text>\n      </View>\n    </TouchableOpacity>\n  )\n}\n\nconst styles = StyleSheet.create({\n  buttonText: {\n    fontSize: 20,\n    textAlign: 'center'\n  }\n})\n\nexport default CustomButton\n","import React from 'react'\nimport { User } from '../interfaces/User'\n\nconst AppContext = React.createContext<User>(null)\n\nexport default AppContext\n","export const Colors = {\n  primary: '#FEF156',\n  secondary: '#AEAC99',\n  accent: '#00F1EE',\n  middle_blue_green: '#83C5BE',\n  dark_middle_blue_green: '#298980',\n  alice_blue: '#EDF6F9',\n  onyx_gray: '#454545',\n  corn_silk_white: '#FEFAE0',\n  white: '#FFFFFF',\n  black: '#001219',\n  red: '#A30800',\n  off_white: '#F5F5F5',\n  light_gray: '#E4E4E4',\n  navy: '#000080'\n}\n","import { Gradebook } from 'studentvue'\nimport { Colors } from '../colors/Colors'\nimport { Assignment, Category, Course, Marks } from '../interfaces/Gradebook'\n\nexport default class GradeUtil {\n  static parseCourseName(name: string) {\n    if (!name.includes('(')) return name\n    return name.substring(0, name.lastIndexOf('(')).trim()\n  }\n\n  static convertGradebook(gradebook: Gradebook) {\n    let marks: Marks = {\n      gpa: 0,\n      courses: new Map<string, Course>(),\n      reportingPeriod: {\n        name: gradebook.reportingPeriod.current.name,\n        index: gradebook.reportingPeriod.current.index\n      },\n      reportingPeriods: gradebook.reportingPeriod.available.map((p) => {\n        return { name: p.name, index: p.index }\n      })\n    }\n    for (const course of gradebook.courses) {\n      marks.courses.set(course.title, {\n        name: course.title,\n        period:\n          gradebook.courses.findIndex((c) => c.title === course.title) + 1,\n        teacher: course.staff.name,\n        points: 0,\n        total: 0,\n        value: NaN,\n        assignments: [],\n        categories: new Map<string, Category>()\n      })\n      const c = marks.courses.get(course.title)\n      for (const category of course.marks[0].weightedCategories) {\n        c.categories.set(category.type, {\n          name: category.type,\n          points: 0,\n          total: 0,\n          value: NaN,\n          weight: parseFloat(category.weight.standard)\n        })\n      }\n      for (const assignment of course.marks[0].assignments) {\n        const value = assignment.score.value\n        const points = this.parsePoints(assignment.points)\n        const a: Assignment = {\n          name: assignment.name,\n          category: assignment.type,\n          status:\n            value != 'Not Graded' && value != 'Not Due' ? 'Graded' : value,\n          notes: assignment.notes,\n          points: points[0],\n          total: points[1],\n          modified: false,\n          date: {\n            due: assignment.date.due,\n            start: assignment.date.start\n          }\n        }\n        c.assignments.push(a)\n      }\n    }\n    marks = this.calculatePoints(marks)\n    return new Promise((resolve) => {\n      resolve(marks)\n    })\n  }\n\n  static calculatePoints(marks: Marks) {\n    marks.gpa = 0\n    let numOfCourses = 0\n    for (const course of marks.courses.values()) {\n      ;(course.points = 0), (course.total = 0), (course.value = NaN)\n      for (const category of course.categories.values()) {\n        ;(category.points = 0), (category.total = 0), (category.value = NaN)\n      }\n      for (const assignment of course.assignments) {\n        const category = course.categories.get(assignment.category)\n        if (!isNaN(assignment.points) && !isNaN(assignment.total)) {\n          category.points += assignment.points\n          category.total += assignment.total\n          category.value = category.points / category.total\n        }\n      }\n      for (const category of course.categories.values()) {\n        if (!isNaN(category.value)) {\n          course.points += category.value * category.weight\n          course.total += category.weight\n        }\n      }\n      course.value = this.roundTo((course.points / course.total) * 100, 2)\n      if (!isNaN(course.value)) {\n        if (course.value >= 89.5) {\n          marks.gpa += 4\n        } else if (course.value >= 79.5) {\n          marks.gpa += 3\n        } else if (course.value >= 69.5) {\n          marks.gpa += 2\n        } else if (course.value >= 59.5) {\n          marks.gpa += 1\n        }\n        numOfCourses++\n      }\n    }\n    marks.gpa = this.roundTo(marks.gpa / numOfCourses, 2)\n    return marks\n  }\n\n  static parsePoints(points: string) {\n    const regex = /^(\\d+\\.?\\d*|\\.\\d+) \\/ (\\d+\\.?\\d*|\\.\\d+)$/\n    if (points.match(regex)) {\n      const p = points.split(regex)\n      return [parseFloat(p[1]), parseFloat(p[2])]\n    } else {\n      return [NaN, parseFloat(points)]\n    }\n  }\n\n  static roundTo(num: number, places: number) {\n    const multiplicator = Math.pow(10, places)\n    num = parseFloat((num * multiplicator).toFixed(11))\n    const test = Math.round(num) / multiplicator\n    return +test.toFixed(places)\n  }\n\n  static deleteAssignment(marks: Marks, course: string, assignment: string) {\n    const newMarks = Object.assign({}, marks)\n    newMarks.courses.get(course).assignments = newMarks.courses\n      .get(course)\n      .assignments.filter((a) => a.name !== assignment)\n    return GradeUtil.calculatePoints(newMarks)\n  }\n\n  static updatePoints(\n    marks: Marks,\n    course: string,\n    assignmentName: string,\n    points: number,\n    type: string\n  ) {\n    const newMarks = Object.assign({}, marks)\n    const assignment = newMarks.courses\n      .get(course)\n      .assignments.find((a) => a.name === assignmentName)\n    if (type === 'earned') {\n      assignment.points = points\n    } else if (type === 'total') {\n      assignment.total = points\n    }\n    assignment.modified = true\n    return GradeUtil.calculatePoints(newMarks)\n  }\n\n  static addAssignment(\n    marks: Marks,\n    course: Course,\n    assignment: string,\n    category: string,\n    points: number,\n    total: number\n  ) {\n    let name = assignment.length === 0 ? 'Assignment' : assignment\n    if (course.assignments.some((a) => a.name === name)) {\n      let indentifier = 2\n      while (course.assignments.some((a) => a.name === name + indentifier)) {\n        indentifier++\n      }\n      name = name + indentifier\n    }\n    course.assignments.unshift({\n      name: name,\n      category: category,\n      status: 'Graded',\n      notes: '',\n      points: points,\n      total: total,\n      modified: true,\n      date: {\n        due: new Date(),\n        start: new Date()\n      }\n    })\n    marks.courses.set(course.name, course)\n    const m = Object.assign({}, marks)\n    return GradeUtil.calculatePoints(m)\n  }\n\n  static calculateMarkColor(mark: number) {\n    switch (this.calculateLetterGrade(mark)) {\n      case 'A':\n        return '#10C212'\n      case 'B':\n        return '#1E2EE6'\n      case 'C':\n        return '#F5A327'\n      case 'D':\n        return '#C72222'\n      case 'E':\n        return '#330505'\n      case 'F':\n        return Colors.black\n    }\n  }\n\n  static calculateLetterGrade(mark: number) {\n    if (mark >= 89.5) {\n      return 'A'\n    } else if (mark >= 79.5) {\n      return 'B'\n    } else if (mark >= 69.5) {\n      return 'C'\n    } else if (mark >= 59.5) {\n      return 'D'\n    } else if (mark >= 49.5) {\n      return 'E'\n    } else {\n      return 'F'\n    }\n  }\n}\n","import React, { useContext, useState } from 'react'\nimport {\n  TextInput,\n  View,\n  Text,\n  StyleSheet,\n  ActivityIndicator,\n  SafeAreaView,\n  Platform\n} from 'react-native'\nimport StudentVue from 'studentvue'\nimport * as SecureStore from 'expo-secure-store'\nimport { StackNavigationProp } from '@react-navigation/stack'\nimport { RootStackParamList } from '../types/RootStackParams'\nimport { useNavigation } from '@react-navigation/native'\nimport CustomButton from '../components/CustomButton'\nimport AppContext from '../contexts/AppContext'\nimport BouncyCheckbox from 'react-native-bouncy-checkbox'\nimport GradeUtil from '../gradebook/GradeUtil'\nimport { Colors } from '../colors/Colors'\nimport { LinearGradient } from 'expo-linear-gradient'\nimport AwesomeAlert from 'react-native-awesome-alerts'\n\nconst DISTRICT_URL = 'https://md-mcps-psv.edupoint.com/'\n\ntype loginScreenProp = StackNavigationProp<RootStackParamList, 'Login'>\n\nconst Login = () => {\n  const navigation = useNavigation<loginScreenProp>()\n  const { username, password, setUsername, setPassword, setClient, setMarks } =\n    useContext(AppContext)\n  const [isLoading, setIsLoading] = useState(false)\n  const [isChecked, setToggleCheckBox] = useState(false)\n  const [showAlert, setShowAlert] = useState(false)\n  const [errorMessage, setErrorMessage] = useState()\n\n  if (\n    Platform.OS !== 'web' &&\n    username === undefined &&\n    password === undefined\n  ) {\n    savedCredentials()\n  }\n\n  async function savedCredentials() {\n    setUsername(await getValueFor('Username'))\n    setPassword(await getValueFor('Password'))\n  }\n\n  async function onLogin() {\n    setIsLoading(true)\n    try {\n      const client = await StudentVue.login(DISTRICT_URL, {\n        username: username,\n        password: password\n      })\n      const gradebook = await client.gradebook()\n      const marks = await GradeUtil.convertGradebook(gradebook)\n      setClient(client)\n      setMarks(marks)\n    } catch (err) {\n      setIsLoading(false)\n      setErrorMessage(err.message)\n      setShowAlert(true)\n      return\n    }\n    setUsername(username)\n    setPassword(password)\n    if (Platform.OS !== 'web' && isChecked) {\n      save('Username', username)\n      save('Password', password)\n    }\n    setIsLoading(false)\n    navigation.navigate('Menu')\n  }\n\n  return (\n    <>\n      <LinearGradient\n        colors={['#FFF785', Colors.primary]}\n        style={{\n          flex: 1\n        }}\n      >\n        <SafeAreaView style={{ alignItems: 'center' }}>\n          <Text style={styles.welcome}>Welcome To{'\\n'}ScholarHelper</Text>\n        </SafeAreaView>\n        <SafeAreaView style={styles.container}>\n          <TextInput\n            defaultValue={username}\n            onChangeText={(u) => setUsername(u)}\n            placeholder={'Username'}\n            style={styles.input}\n          />\n          <TextInput\n            defaultValue={password}\n            onChangeText={(p) => setPassword(p)}\n            placeholder={'Password'}\n            secureTextEntry={true}\n            style={styles.input}\n          />\n          {Platform.OS !== 'web' && (\n            <View style={styles.checkbox_container}>\n              <BouncyCheckbox\n                size={24}\n                fillColor={Colors.accent}\n                unfillColor=\"transparent\"\n                disableText\n                iconStyle={{ borderColor: Colors.black }}\n                isChecked={isChecked}\n                disableBuiltInState\n                onPress={async () => {\n                  setToggleCheckBox(!isChecked)\n                }}\n              />\n              <Text style={styles.save_text}>Save Login Information</Text>\n            </View>\n          )}\n          <CustomButton\n            onPress={onLogin.bind(this)}\n            text={'Login'}\n            backgroundColor={Colors.navy}\n            textColor={Colors.white}\n            fontFamily=\"Inter_800ExtraBold\"\n            containerStyle={styles.button_container}\n          ></CustomButton>\n          <ActivityIndicator\n            color={Colors.secondary}\n            animating={isLoading}\n            size=\"large\"\n          />\n        </SafeAreaView>\n      </LinearGradient>\n      <AwesomeAlert\n        show={showAlert}\n        showProgress={false}\n        title={'Error, Try Again'}\n        message={errorMessage}\n        closeOnTouchOutside={true}\n        closeOnHardwareBackPress={true}\n        showCancelButton={false}\n        showConfirmButton={true}\n        confirmText={'Ok'}\n        confirmButtonColor={Colors.primary}\n        confirmButtonTextStyle={{ color: Colors.black }}\n        onConfirmPressed={() => {\n          setShowAlert(false)\n        }}\n      ></AwesomeAlert>\n    </>\n  )\n}\n\nexport default Login\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    alignSelf: 'center',\n    justifyContent: 'center'\n  },\n  welcome: {\n    fontFamily: 'Montserrat_900Black',\n    fontSize: 30,\n    textAlign: 'center',\n    marginTop: 10\n  },\n  checkbox_container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 10\n  },\n  input: {\n    width: 220,\n    height: 50,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: Colors.black,\n    borderRadius: 5,\n    marginBottom: 10\n  },\n  loading: {\n    margin: 'auto'\n  },\n  button_container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'relative',\n    width: 100,\n    height: 50,\n    padding: 10,\n    borderRadius: 10,\n    borderWidth: 0,\n    marginBottom: 10\n  },\n  save_text: {\n    marginLeft: 8,\n    fontFamily: 'Inter_400Regular'\n  }\n})\n\nasync function save(key: string, value: string) {\n  if (value === null) return\n  await SecureStore.setItemAsync(key, value)\n}\n\nasync function getValueFor(key: string) {\n  return await SecureStore.getItemAsync(key)\n}\n","import React, { useContext, useState } from 'react'\nimport { StyleSheet, View, Text, TextInput } from 'react-native'\nimport GradeUtil from '../gradebook/GradeUtil'\nimport AppContext from '../contexts/AppContext'\nimport { Colors } from '../colors/Colors'\nimport { MaterialIcons } from '@expo/vector-icons'\nimport { TouchableOpacity } from 'react-native-gesture-handler'\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\n\nfunction AssignmentComponent(props) {\n  const { marks, setMarks } = useContext(AppContext)\n  const [isDropdown, setIsDropdown] = useState(false)\n  const assignment = marks.courses\n    .get(props.course)\n    .assignments.find((a) => a.name === props.name)\n  const totalWeight = Array.from(\n    marks.courses.get(props.course).categories.values()\n  ).reduce((p, c) => (isNaN(c.value) ? p : p + c.weight), 0)\n\n  const updatePoints = (input: string, type: string) => {\n    setMarks(\n      GradeUtil.updatePoints(\n        marks,\n        props.course,\n        assignment.name,\n        parseFloat(input),\n        type\n      )\n    )\n  }\n\n  const deleteAssignment = () => {\n    setMarks(GradeUtil.deleteAssignment(marks, props.course, assignment.name))\n  }\n\n  const getWidth = (n: number) => {\n    const min = 34\n    if (isNaN(n)) return min\n    return Math.max(n.toString().length * 15, min)\n  }\n\n  return (\n    <View style={[styles.container, props.style]}>\n      <View style={[styles.horizontal_container, { height: 52 }]}>\n        <View style={styles.assignment_info_container}>\n          <Text\n            numberOfLines={1}\n            style={[\n              styles.name,\n              {\n                color: assignment.modified\n                  ? Colors.dark_middle_blue_green\n                  : Colors.navy\n              }\n            ]}\n          >\n            {props.name}\n          </Text>\n          <Text numberOfLines={1} style={styles.category}>\n            {assignment.category} - {assignment.date.due.toLocaleDateString()}\n          </Text>\n        </View>\n        <View style={styles.input_container}>\n          <TextInput\n            defaultValue={\n              isNaN(assignment.points) ? '' : assignment.points.toString()\n            }\n            placeholder={'__'}\n            keyboardType={'number-pad'}\n            autoCompleteType={'off'}\n            style={[\n              styles.mark,\n              {\n                color: assignment.modified\n                  ? Colors.dark_middle_blue_green\n                  : Colors.black,\n                width: getWidth(assignment.points)\n              }\n            ]}\n            onChangeText={(input) => updatePoints(input, 'earned')}\n          />\n          <Text style={styles.dash}> / </Text>\n          <TextInput\n            defaultValue={\n              isNaN(assignment.total) ? '' : assignment.total.toString()\n            }\n            placeholder={'__'}\n            keyboardType={'numeric'}\n            style={[\n              styles.mark,\n              {\n                color: assignment.modified\n                  ? Colors.dark_middle_blue_green\n                  : Colors.black,\n                width: getWidth(assignment.total)\n              }\n            ]}\n            onChangeText={(input) => updatePoints(input, 'total')}\n          />\n        </View>\n        <TouchableOpacity onPress={() => setIsDropdown(!isDropdown)}>\n          <MaterialIcons\n            name={isDropdown ? 'arrow-drop-up' : 'arrow-drop-down'}\n            color={Colors.middle_blue_green}\n            size={36}\n            style={{ marginRight: 5 }}\n          />\n        </TouchableOpacity>\n      </View>\n      {isDropdown && (\n        <View style={styles.dropdown_container}>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Name:</Text>\n            <Text style={styles.dropdown_text_value}>{assignment.name}</Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Category:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {assignment.category}\n            </Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Effective Weight:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {GradeUtil.roundTo(\n                (marks.courses\n                  .get(props.course)\n                  .categories.get(assignment.category).weight /\n                  totalWeight) *\n                  100,\n                2\n              )}\n              %\n            </Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Weight:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {\n                marks.courses\n                  .get(props.course)\n                  .categories.get(assignment.category).weight\n              }\n              %\n            </Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Grade:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {isNaN(assignment.points / assignment.total)\n                ? 'N/A'\n                : `${GradeUtil.roundTo(\n                    (assignment.points / assignment.total) * 100,\n                    2\n                  )} (${GradeUtil.calculateLetterGrade(\n                    (assignment.points / assignment.total) * 100\n                  )})`}\n            </Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Status:</Text>\n            <Text style={styles.dropdown_text_value}>{assignment.status}</Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Due Date:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {assignment.date.due.toLocaleDateString()}\n            </Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Start Date:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {assignment.date.start.toLocaleDateString()}\n            </Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Notes:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {assignment.notes.length === 0 ? 'None' : assignment.notes}\n            </Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Modified By You:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {assignment.modified ? 'True' : 'False'}\n            </Text>\n          </View>\n          <FontAwesome.Button\n            name=\"trash-o\"\n            backgroundColor=\"transparent\"\n            iconStyle={{\n              color: Colors.red\n            }}\n            underlayColor=\"none\"\n            activeOpacity={0.5}\n            size={24}\n            onPress={() => deleteAssignment()}\n          ></FontAwesome.Button>\n        </View>\n      )}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.primary,\n    borderRadius: 10,\n    marginLeft: 7,\n    marginRight: 7,\n    marginTop: 7,\n    elevation: 3,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 2\n  },\n  horizontal_container: {\n    flexDirection: 'row'\n  },\n  dropdown_container: {\n    padding: 10,\n    backgroundColor: Colors.light_gray,\n    borderTopColor: Colors.onyx_gray,\n    borderTopWidth: 1\n  },\n  assignment_info_container: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    marginLeft: 7,\n    flex: 1\n  },\n  name: {\n    color: Colors.black,\n    fontFamily: 'Inter_700Bold',\n    fontSize: 14,\n    marginHorizontal: 7,\n    lineHeight: 14 * 0.75,\n    paddingTop: 14 - 14 * 0.75,\n    textAlign: 'left'\n  },\n  category: {\n    color: Colors.black,\n    fontFamily: 'Inter_400Regular',\n    fontSize: 11,\n    marginHorizontal: 7,\n    lineHeight: 11 * 0.75,\n    marginTop: 4,\n    paddingTop: 11 - 11 * 0.75,\n    textAlign: 'left'\n  },\n  input_container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  mark: {\n    height: 60,\n    borderWidth: 0,\n    fontSize: 23,\n    fontFamily: 'Inter_600SemiBold',\n    alignSelf: 'center'\n  },\n  dash: {\n    fontSize: 20,\n    alignSelf: 'center',\n    textAlignVertical: 'center',\n    marginRight: 3\n  },\n  dropdown_text_name: {\n    marginHorizontal: 7,\n    fontFamily: 'Montserrat_600SemiBold'\n  },\n  dropdown_text_value: {\n    fontFamily: 'Inter_400Regular',\n    flex: 1\n  }\n})\n\nexport default AssignmentComponent\n","import { Colors } from '../colors/Colors'\n\nexport const LightTheme = {\n  dark: false,\n  colors: {\n    primary: Colors.primary,\n    background: Colors.white,\n    card: Colors.primary,\n    text: Colors.black,\n    border: Colors.secondary,\n    notification: Colors.accent\n  }\n}\n","import { useNavigation } from '@react-navigation/native'\nimport React, { useContext, useEffect, useState } from 'react'\nimport {\n  ActivityIndicator,\n  FlatList,\n  StyleSheet,\n  Text,\n  View\n} from 'react-native'\nimport AppContext from '../contexts/AppContext'\nimport AssignmentComponent from '../components/Assignment'\nimport GradeUtil from '../gradebook/GradeUtil'\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\nimport { LightTheme } from '../theme/LightTheme'\nimport Modal from 'react-native-modal'\nimport { TextInput } from 'react-native-gesture-handler'\nimport DropDownPicker from 'react-native-dropdown-picker'\nimport CustomButton from '../components/CustomButton'\nimport { Colors } from '../colors/Colors'\nimport { showMessage } from 'react-native-flash-message'\nimport { SafeAreaView } from 'react-native-safe-area-context'\nimport AwesomeAlert from 'react-native-awesome-alerts'\n\nconst CourseDetails = ({ route }) => {\n  const courseName = route.params.title\n  const navigation = useNavigation()\n\n  const { marks, client, setMarks } = useContext(AppContext)\n  const course = marks.courses.get(courseName)\n\n  const [isModalVisible, setModalVisible] = useState(false)\n  const [open, setOpen] = useState(false)\n  const [category, setCategory] = useState(\n    marks.courses.get(courseName).categories.values().next().value.name\n  )\n  const [categories, setCategories] = useState(\n    Array.from(marks.courses.get(courseName).categories.values()).map((c) => {\n      return { label: c.name, value: c.name }\n    })\n  )\n  const [assignmentName, setAssignmentName] = useState('')\n  const [points, setPoints] = useState(NaN)\n  const [total, setTotal] = useState(NaN)\n\n  const [isLoading, setIsLoading] = useState(false)\n  const [showAlert, setShowAlert] = useState(false)\n  const [errorMessage, setErrorMessage] = useState()\n\n  useEffect(() => {\n    if (isModalVisible) {\n      setAssignmentName('')\n      setPoints(NaN)\n      setTotal(NaN)\n    }\n  }, [isModalVisible])\n\n  const toggleModal = () => {\n    setModalVisible(!isModalVisible)\n  }\n\n  const addAssignment = () => {\n    setMarks(\n      GradeUtil.addAssignment(\n        marks,\n        course,\n        assignmentName,\n        category,\n        points,\n        total\n      )\n    )\n    toggleModal()\n  }\n\n  const refreshMarks = async () => {\n    setIsLoading(true)\n    try {\n      setMarks(\n        await GradeUtil.convertGradebook(\n          await client.gradebook(marks.reportingPeriod.index)\n        )\n      )\n      showMessage({\n        message: 'Refreshed',\n        type: 'info',\n        icon: 'success'\n      })\n    } catch (err) {\n      setErrorMessage(err.message)\n      setShowAlert(true)\n    }\n    setIsLoading(false)\n  }\n\n  return (\n    <>\n      <SafeAreaView\n        style={{ flex: 1 }}\n        pointerEvents={isLoading ? 'none' : 'auto'}\n      >\n        <View style={styles.course_details_container}>\n          <View\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'flex-start'\n            }}\n          >\n            <FontAwesome.Button\n              name=\"chevron-left\"\n              backgroundColor=\"transparent\"\n              iconStyle={{\n                color: Colors.secondary\n              }}\n              underlayColor=\"none\"\n              activeOpacity={0.5}\n              size={24}\n              onPress={() => navigation.goBack()}\n            ></FontAwesome.Button>\n          </View>\n          <Text numberOfLines={1} style={styles.course_details}>\n            {isNaN(course.value) ? 'N/A' : course.value} |{' '}\n            {GradeUtil.parseCourseName(courseName)}\n          </Text>\n          <View\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'flex-end'\n            }}\n          >\n            <FontAwesome.Button\n              name=\"plus-circle\"\n              backgroundColor=\"transparent\"\n              iconStyle={{\n                color: Colors.secondary\n              }}\n              size={24}\n              underlayColor=\"none\"\n              activeOpacity={0.5}\n              onPress={() => toggleModal()}\n            ></FontAwesome.Button>\n            <FontAwesome.Button\n              name=\"refresh\"\n              backgroundColor=\"transparent\"\n              iconStyle={{\n                color: Colors.secondary\n              }}\n              underlayColor=\"none\"\n              activeOpacity={0.5}\n              size={24}\n              onPress={() => refreshMarks()}\n            ></FontAwesome.Button>\n          </View>\n        </View>\n        <FlatList\n          data={course.assignments}\n          renderItem={({ item }) => (\n            <AssignmentComponent\n              name={item.name}\n              course={courseName}\n            ></AssignmentComponent>\n          )}\n          keyExtractor={(item) => item.name}\n        />\n        <Modal\n          isVisible={isModalVisible}\n          coverScreen={true}\n          onBackdropPress={toggleModal}\n        >\n          <View style={styles.modal}>\n            <View style={styles.modal_view}>\n              <Text style={styles.modal_title}>New Assignment</Text>\n              <TextInput\n                value={assignmentName}\n                placeholder=\"Name\"\n                onChangeText={(t) => {\n                  setAssignmentName(t)\n                }}\n                style={styles.input}\n              ></TextInput>\n              <TextInput\n                defaultValue={isNaN(points) ? '' : points.toString()}\n                keyboardType=\"numeric\"\n                placeholder=\"Points Earned\"\n                onChangeText={(t) => setPoints(parseFloat(t))}\n                style={styles.input}\n              ></TextInput>\n              <TextInput\n                defaultValue={isNaN(total) ? '' : total.toString()}\n                keyboardType=\"numeric\"\n                placeholder=\"Total Points\"\n                onChangeText={(t) => setTotal(parseFloat(t))}\n                style={styles.input}\n              ></TextInput>\n              <View\n                style={{\n                  marginHorizontal: 7,\n                  marginTop: 7\n                }}\n              >\n                <DropDownPicker\n                  open={open}\n                  value={category}\n                  items={categories}\n                  setOpen={setOpen}\n                  setValue={setCategory}\n                  setItems={setCategories}\n                  maxHeight={null}\n                  style={styles.dropdown}\n                ></DropDownPicker>\n                <CustomButton\n                  onPress={addAssignment}\n                  text={'Add Assignment'}\n                  backgroundColor={LightTheme.colors.card}\n                  textColor={Colors.black}\n                  fontFamily=\"Inter_600SemiBold\"\n                  containerStyle={styles.button_container}\n                ></CustomButton>\n              </View>\n            </View>\n          </View>\n        </Modal>\n      </SafeAreaView>\n      {isLoading && (\n        <SafeAreaView style={styles.loading}>\n          <ActivityIndicator size={'large'} />\n        </SafeAreaView>\n      )}\n      <AwesomeAlert\n        show={showAlert}\n        showProgress={false}\n        title={'Error'}\n        message={errorMessage}\n        closeOnTouchOutside={true}\n        closeOnHardwareBackPress={true}\n        showCancelButton={false}\n        showConfirmButton={true}\n        confirmText={'Ok'}\n        confirmButtonColor={Colors.primary}\n        confirmButtonTextStyle={{ color: Colors.black }}\n        onConfirmPressed={() => {\n          setShowAlert(false)\n        }}\n      ></AwesomeAlert>\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  input: {\n    margin: 7,\n    padding: 5,\n    borderWidth: 1,\n    height: 30,\n    borderColor: Colors.black\n  },\n  modal_title: {\n    alignSelf: 'center',\n    marginBottom: 7,\n    marginTop: 14,\n    fontFamily: 'Inter_600SemiBold',\n    fontSize: 18\n  },\n  modal: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    alignSelf: 'center',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    width: 330,\n    height: 300\n  },\n  modal_view: {\n    width: 330,\n    height: 300\n  },\n  dropdown: {\n    height: 30,\n    borderRadius: 0,\n    alignItems: 'center',\n    alignSelf: 'center'\n  },\n  button_container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignSelf: 'center',\n    width: 200,\n    height: 50,\n    borderRadius: 10,\n    borderWidth: 0,\n    marginTop: 30\n  },\n  course_details: {\n    fontSize: 22,\n    flex: 1,\n    flexWrap: 'wrap',\n    fontFamily: 'Inter_800ExtraBold'\n  },\n  course_details_container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  loading: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(200, 200, 200, 0.2)'\n  }\n})\n\nexport default CourseDetails\n","import React from 'react'\nimport { StyleSheet, View, Text } from 'react-native'\nimport { Colors } from '../colors/Colors'\nimport GradeUtil from '../gradebook/GradeUtil'\n\nfunction CourseComponent(props) {\n  const mark = parseFloat(props.mark)\n\n  return (\n    <View style={[styles.container, props.style]}>\n      <Text style={styles.period_number}>{`0${props.period}`}</Text>\n      <View style={styles.course_info_container}>\n        <Text numberOfLines={1} style={styles.name}>\n          {props.name}\n        </Text>\n        <Text numberOfLines={1} style={styles.teacher}>\n          {props.teacher}\n        </Text>\n      </View>\n      <Text style={[styles.mark]}>\n        {isNaN(parseFloat(props.mark)) ? 'N/A' : props.mark}\n      </Text>\n      <Text\n        style={[\n          styles.letter_grade,\n          {\n            color: GradeUtil.calculateMarkColor(mark)\n          }\n        ]}\n      >\n        {GradeUtil.calculateLetterGrade(mark)}\n      </Text>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.primary,\n    borderRadius: 15,\n    height: 55,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginHorizontal: 7,\n    marginTop: 7,\n    padding: 7,\n    elevation: 3,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 2\n  },\n  period_number: {\n    fontFamily: 'Montserrat_800ExtraBold',\n    fontSize: 32\n  },\n  course_info_container: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    marginHorizontal: 7,\n    flex: 1\n  },\n  name: {\n    color: Colors.navy,\n    fontFamily: 'Montserrat_700Bold',\n    fontSize: 18,\n    marginRight: 14,\n    marginLeft: 7,\n    lineHeight: 18 * 0.75,\n    paddingTop: 18 - 18 * 0.75,\n    textAlign: 'left'\n  },\n  teacher: {\n    color: Colors.black,\n    fontFamily: 'Inter_400Regular',\n    fontSize: 12,\n    marginRight: 14,\n    marginLeft: 7,\n    lineHeight: 12 * 0.75,\n    paddingTop: 12 - 12 * 0.75,\n    marginTop: 4,\n    textAlign: 'left'\n  },\n  mark: {\n    fontFamily: 'Montserrat_500Medium',\n    fontSize: 28,\n    alignSelf: 'center'\n  },\n  letter_grade: {\n    marginLeft: 7,\n    fontFamily: 'Montserrat_800ExtraBold',\n    fontSize: 32,\n    alignSelf: 'center'\n  }\n})\n\nexport default CourseComponent\n","import React, { useContext, useState, useEffect } from 'react'\nimport AppContext from '../contexts/AppContext'\nimport {\n  SafeAreaView,\n  StyleSheet,\n  View,\n  Text,\n  ActivityIndicator\n} from 'react-native'\nimport { FlatList, TouchableOpacity } from 'react-native-gesture-handler'\nimport CourseComponent from '../components/Course'\nimport DropDownPicker from 'react-native-dropdown-picker'\nimport GradeUtil from '../gradebook/GradeUtil'\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\nimport { showMessage } from 'react-native-flash-message'\nimport { Colors } from '../colors/Colors'\nimport AwesomeAlert from 'react-native-awesome-alerts'\n\nconst Courses = ({ navigation }) => {\n  const { client, marks, setMarks } = useContext(AppContext)\n  const [open, setOpen] = useState(false)\n  const [value, setValue] = useState(marks.reportingPeriod.index)\n  const [periods, setPeriods] = useState(\n    marks.reportingPeriods.map((p) => {\n      return { label: p.name, value: p.index }\n    })\n  )\n  const [isLoading, setIsLoading] = useState(false)\n  const [showAlert, setShowAlert] = useState(false)\n  const [errorMessage, setErrorMessage] = useState()\n\n  useEffect(() => {\n    setIsLoading(true)\n    let isSubscribed = true\n    const getGradebook = async () => {\n      try {\n        const marks = await GradeUtil.convertGradebook(\n          await client.gradebook(value)\n        )\n        if (isSubscribed) {\n          setMarks(marks)\n        }\n      } catch (err) {\n        setErrorMessage(err.message)\n        setShowAlert(true)\n      }\n    }\n    getGradebook()\n    setIsLoading(false)\n    return () => {\n      isSubscribed = false\n    }\n  }, [value])\n\n  const refreshMarks = async () => {\n    setIsLoading(true)\n    try {\n      const gradebook = await client.gradebook(value)\n      const newMarks = await GradeUtil.convertGradebook(gradebook)\n      setMarks(newMarks)\n    } catch (err) {\n      setErrorMessage(err.message)\n      setShowAlert(true)\n      setIsLoading(false)\n      return\n    }\n    showMessage({\n      message: 'Gradebook refreshed',\n      type: 'info',\n      icon: 'success'\n    })\n    setIsLoading(false)\n  }\n\n  return (\n    <>\n      <SafeAreaView\n        style={{ flex: 1 }}\n        pointerEvents={isLoading ? 'none' : 'auto'}\n      >\n        <DropDownPicker\n          open={open}\n          value={value}\n          items={periods}\n          setOpen={setOpen}\n          setValue={setValue}\n          setItems={setPeriods}\n          maxHeight={null}\n          style={styles.dropdown}\n          textStyle={styles.dropdown_text}\n        ></DropDownPicker>\n        <View style={styles.row_container}>\n          <View style={styles.gpa_container}>\n            <Text style={styles.gpa}>{marks.gpa} GPA</Text>\n          </View>\n          <View style={styles.refresh_button_container}>\n            <FontAwesome.Button\n              name=\"refresh\"\n              backgroundColor=\"transparent\"\n              iconStyle={{\n                color: Colors.secondary\n              }}\n              underlayColor=\"none\"\n              activeOpacity={0.5}\n              size={24}\n              onPress={() => refreshMarks()}\n            ></FontAwesome.Button>\n          </View>\n        </View>\n        {marks != undefined && (\n          <FlatList\n            data={[...marks.courses.entries()]}\n            renderItem={({ item }) => (\n              <TouchableOpacity\n                onPress={() =>\n                  navigation.navigate('Course Details', { title: item[0] })\n                }\n              >\n                <CourseComponent\n                  name={GradeUtil.parseCourseName(item[0])}\n                  mark={item[1].value}\n                  period={item[1].period}\n                  teacher={item[1].teacher}\n                ></CourseComponent>\n              </TouchableOpacity>\n            )}\n            keyExtractor={(item) => item[0]}\n          />\n        )}\n      </SafeAreaView>\n      {isLoading && (\n        <SafeAreaView style={styles.loading}>\n          <ActivityIndicator size={'large'} />\n        </SafeAreaView>\n      )}\n      <AwesomeAlert\n        show={showAlert}\n        showProgress={false}\n        title={'Error'}\n        message={errorMessage}\n        closeOnTouchOutside={true}\n        closeOnHardwareBackPress={true}\n        showCancelButton={false}\n        showConfirmButton={true}\n        confirmText={'Ok'}\n        confirmButtonColor={Colors.primary}\n        confirmButtonTextStyle={{ color: Colors.black }}\n        onConfirmPressed={() => {\n          setShowAlert(false)\n        }}\n      ></AwesomeAlert>\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  dropdown: {\n    borderWidth: 0,\n    height: 30,\n    marginBottom: 15,\n    backgroundColor: 'transparent'\n  },\n  dropdown_text: {\n    fontFamily: 'Inter_800ExtraBold',\n    fontSize: 30\n  },\n  row_container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  gpa_container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-start'\n  },\n  gpa: {\n    marginLeft: 11,\n    fontFamily: 'Montserrat_700Bold',\n    fontSize: 22\n  },\n  refresh_button_container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  loading: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(200, 200, 200, 0.2)'\n  }\n})\n\nexport default Courses\n","import React from 'react'\n\ninterface CourseName {\n  courseHeader: string\n  setCourse: React.Dispatch<React.SetStateAction<string>>\n}\n\nconst GradeContext = React.createContext<CourseName>(null)\n\nexport default GradeContext\n","import React, { useState } from 'react'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport CourseDetails from './CourseDetails'\nimport Courses from './Courses'\nimport GradeContext from '../contexts/GradeContext'\n\nconst Stack = createStackNavigator()\n\nconst StackNavigator = () => {\n  const [course, setCourse] = useState(undefined)\n\n  return (\n    <GradeContext.Provider\n      value={{ courseHeader: course, setCourse: setCourse }}\n    >\n      <Stack.Navigator>\n        <Stack.Screen\n          name=\"Courses\"\n          component={Courses}\n          options={{\n            headerShown: false\n          }}\n        />\n        <Stack.Screen\n          name=\"Course Details\"\n          component={CourseDetails}\n          options={{\n            headerShown: false\n          }}\n        />\n      </Stack.Navigator>\n    </GradeContext.Provider>\n  )\n}\n\nexport default StackNavigator\n","import React, { useContext, useState } from 'react'\nimport { ActivityIndicator, Image, StyleSheet, View, Text } from 'react-native'\nimport { LinearGradient } from 'expo-linear-gradient'\nimport { StudentInfo } from 'studentvue'\nimport { Colors } from '../colors/Colors'\nimport AppContext from '../contexts/AppContext'\nimport { FontAwesome } from '@expo/vector-icons'\nimport { Feather } from '@expo/vector-icons'\n\nconst Profile = () => {\n  const { client } = useContext(AppContext)\n  const [studentInfo, setStudentInfo] = useState(undefined as StudentInfo)\n\n  const fetchStudentInfo = async () => {\n    setStudentInfo(await client.studentInfo())\n  }\n  if (!studentInfo) fetchStudentInfo()\n\n  return (\n    <View style={{ flex: 1 }}>\n      {!studentInfo ? (\n        <ActivityIndicator\n          color={Colors.secondary}\n          animating={true}\n          size=\"large\"\n          style={{\n            alignSelf: 'center',\n            flex: 1,\n            justifyContent: 'center'\n          }}\n        />\n      ) : (\n        <View>\n          <LinearGradient\n            colors={['#DED140', Colors.primary]}\n            style={styles.header}\n          ></LinearGradient>\n          <Image\n            style={styles.avatar}\n            source={{\n              uri: `data:image/png;base64,${studentInfo.photo}`\n            }}\n          />\n          <Text style={styles.name}>{studentInfo.student.name}</Text>\n          <View style={styles.description_container}>\n            <View style={styles.description_part_container}>\n              <Text style={styles.description_part_text}>\n                {studentInfo.grade + suffix(parseInt(studentInfo.grade))}\n              </Text>\n              <FontAwesome\n                name=\"graduation-cap\"\n                size={18}\n                color={Colors.black}\n              />\n            </View>\n            <View style={styles.description_part_container}>\n              <Text style={styles.description_part_text}>\n                {studentInfo.birthDate.toLocaleDateString()}\n              </Text>\n              <FontAwesome\n                name=\"birthday-cake\"\n                size={18}\n                color={Colors.black}\n              />\n            </View>\n          </View>\n          <View style={styles.property_container}>\n            <Feather name=\"phone\" size={26} color={Colors.black} />\n            <Text style={styles.property_text}>{studentInfo.phone}</Text>\n          </View>\n          <View style={styles.property_container}>\n            <Feather name=\"mail\" size={26} color={Colors.black} />\n            <Text style={styles.property_text}>{studentInfo.email}</Text>\n          </View>\n          <View style={styles.property_container}>\n            <Feather name=\"map-pin\" size={26} color={Colors.black} />\n            <Text style={styles.property_text}>{studentInfo.address}</Text>\n          </View>\n          <View style={styles.property_container}>\n            <FontAwesome name=\"building-o\" size={26} color={Colors.black} />\n            <Text style={styles.property_text}>\n              {studentInfo.currentSchool}\n            </Text>\n          </View>\n        </View>\n      )}\n    </View>\n  )\n}\n\nconst suffix = (num: number) => {\n  const j = num % 10,\n    k = num % 100\n  if (j === 1 && k !== 11) {\n    return 'st'\n  }\n  if (j === 2 && k !== 12) {\n    return 'nd'\n  }\n  if (j === 3 && k !== 13) {\n    return 'rd'\n  }\n  return 'th'\n}\n\nconst styles = StyleSheet.create({\n  header: {\n    height: 150\n  },\n  name: {\n    fontSize: 24,\n    fontFamily: 'Montserrat_700Bold',\n    alignSelf: 'center',\n    marginTop: 10\n  },\n  avatar: {\n    width: 130,\n    height: 130,\n    borderRadius: 130 / 2,\n    borderWidth: 4,\n    borderColor: 'white',\n    alignSelf: 'center',\n    marginTop: -130 / 2\n  },\n  description_container: {\n    marginTop: 10,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    borderColor: Colors.secondary,\n    borderWidth: 1\n  },\n  description_part_container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 10\n  },\n  description_part_text: {\n    marginTop: 5,\n    fontSize: 22,\n    fontFamily: 'Montserrat_800ExtraBold'\n  },\n  property_container: {\n    flexDirection: 'row',\n    padding: 12\n  },\n  property_text: {\n    marginHorizontal: 8,\n    fontFamily: 'Inter_400Regular',\n    fontSize: 18,\n    color: Colors.onyx_gray\n  }\n})\n\nexport default Profile\n","import React from 'react'\nimport { StyleSheet, View, Text } from 'react-native'\nimport { Colors } from '../colors/Colors'\n\nfunction DocumentComponent(props) {\n  return (\n    <View style={[styles.container, props.style]}>\n      <View style={styles.doc_info_container}>\n        <Text numberOfLines={1} style={styles.name}>\n          {props.name}\n        </Text>\n        <View style={styles.info_container}>\n          <Text numberOfLines={1} style={[styles.type]}>\n            {props.type}\n          </Text>\n          <Text numberOfLines={1} style={styles.date}>\n            {props.date}\n          </Text>\n        </View>\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.off_white,\n    borderRadius: 10,\n    height: 50,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginHorizontal: 7,\n    marginTop: 7,\n    padding: 7,\n    elevation: 3,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 2\n  },\n  doc_info_container: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    flex: 1,\n    marginHorizontal: 4\n  },\n  info_container: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    flex: 1\n  },\n  name: {\n    color: Colors.black,\n    fontFamily: 'Montserrat_600SemiBold',\n    fontSize: 16,\n    lineHeight: 16 * 0.75,\n    paddingTop: 16 - 16 * 0.75,\n    textAlign: 'left'\n  },\n  type: {\n    color: Colors.black,\n    fontFamily: 'Inter_300Light',\n    fontSize: 12,\n    flex: 1,\n    lineHeight: 12 * 0.75,\n    paddingTop: 12 - 12 * 0.75,\n    marginTop: 4,\n    textAlign: 'left'\n  },\n  date: {\n    color: Colors.black,\n    fontFamily: 'Inter_400Regular',\n    fontSize: 12,\n    lineHeight: 12 * 0.75,\n    paddingTop: 12 - 12 * 0.75,\n    marginTop: 4,\n    textAlign: 'left'\n  }\n})\n\nexport default DocumentComponent\n","import React, { useContext, useState } from 'react'\nimport { SafeAreaView } from 'react-native-safe-area-context'\nimport AppContext from '../contexts/AppContext'\nimport * as Sharing from 'expo-sharing'\nimport * as FileSystem from 'expo-file-system'\nimport {\n  ActivityIndicator,\n  FlatList,\n  Platform,\n  StyleSheet,\n  Text,\n  View\n} from 'react-native'\nimport Document from 'studentvue/StudentVue/Document/Document'\nimport DocumentComponent from '../components/Document'\nimport { TouchableOpacity } from 'react-native-gesture-handler'\nimport { Colors } from '../colors/Colors'\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\nimport { showMessage } from 'react-native-flash-message'\nimport AwesomeAlert from 'react-native-awesome-alerts'\n\nconst Documents = () => {\n  const { client } = useContext(AppContext)\n  const [documents, setDocuments] = useState(undefined)\n  const [isLoading, setIsLoading] = useState(false)\n  const [showAlert, setShowAlert] = useState(false)\n  const [errorMessage, setErrorMessage] = useState()\n\n  const fetchDocuments = async () => {\n    setIsLoading(true)\n    try {\n      setDocuments(await client.documents())\n    } catch (err) {\n      setErrorMessage(err.message)\n      setShowAlert(true)\n    }\n    setIsLoading(false)\n  }\n  if (!documents && !isLoading) fetchDocuments()\n\n  const base64toBlob = (base64: string, sliceSize = 512) => {\n    const byteCharacters = window.atob(base64)\n    const byteArrays = []\n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n      const slice = byteCharacters.slice(offset, offset + sliceSize)\n      const byteNumbers = new Array(slice.length)\n      for (let i = 0; i < slice.length; i++) {\n        byteNumbers[i] = slice.charCodeAt(i)\n      }\n      byteArrays.push(new Uint8Array(byteNumbers))\n    }\n    return new Blob(byteArrays)\n  }\n\n  const downloadDocument = async (document: Document) => {\n    const file = (await document.get())[0]\n    const fileName =\n      document.comment.replace(/ /g, '_') +\n      file.file.name.substring(file.file.name.lastIndexOf('.'))\n    if (Platform.OS === 'android' || Platform.OS === 'ios') {\n      const filePath = FileSystem.documentDirectory + fileName\n      try {\n        await FileSystem.writeAsStringAsync(filePath, file.base64, {\n          encoding: 'base64'\n        })\n        await Sharing.shareAsync(filePath)\n      } catch (e) {}\n    } else {\n      require('file-saver').saveAs(base64toBlob(file.base64), fileName)\n    }\n  }\n\n  return (\n    <>\n      <SafeAreaView\n        style={{ flex: 1 }}\n        pointerEvents={isLoading ? 'none' : 'auto'}\n      >\n        <View style={styles.row_container}>\n          <View style={styles.title_container}>\n            <Text style={styles.title}>Documents</Text>\n          </View>\n          <View style={styles.refresh_button_container}>\n            <FontAwesome.Button\n              name=\"refresh\"\n              backgroundColor=\"transparent\"\n              iconStyle={{\n                color: Colors.secondary\n              }}\n              underlayColor=\"none\"\n              activeOpacity={0.5}\n              size={24}\n              onPress={async () => {\n                try {\n                  setDocuments(await client.documents())\n                  showMessage({\n                    message: 'Refreshed',\n                    type: 'info',\n                    icon: 'success'\n                  })\n                } catch (err) {\n                  setErrorMessage(err.message)\n                  setShowAlert(true)\n                }\n              }}\n            ></FontAwesome.Button>\n          </View>\n        </View>\n        {documents && (\n          <FlatList\n            data={documents}\n            renderItem={({ item }) => (\n              <TouchableOpacity\n                onPress={() => {\n                  downloadDocument(item)\n                }}\n              >\n                <DocumentComponent\n                  name={(item as Document).comment}\n                  type={(item as Document).file.type}\n                  date={(item as Document).file.date.toLocaleDateString()}\n                ></DocumentComponent>\n              </TouchableOpacity>\n            )}\n            keyExtractor={(item) => (item as Document).documentGu}\n          ></FlatList>\n        )}\n      </SafeAreaView>\n      {isLoading && (\n        <SafeAreaView style={styles.loading}>\n          <ActivityIndicator size={'large'} />\n        </SafeAreaView>\n      )}\n      <AwesomeAlert\n        show={showAlert}\n        showProgress={false}\n        title={'Error'}\n        message={errorMessage}\n        closeOnTouchOutside={true}\n        closeOnHardwareBackPress={true}\n        showCancelButton={false}\n        showConfirmButton={true}\n        confirmText={'Ok'}\n        confirmButtonColor={Colors.primary}\n        confirmButtonTextStyle={{ color: Colors.black }}\n        onConfirmPressed={() => {\n          setShowAlert(false)\n        }}\n      ></AwesomeAlert>\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  row_container: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  title_container: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    width: '75%'\n  },\n  title: {\n    fontFamily: 'Inter_800ExtraBold',\n    fontSize: 30,\n    marginHorizontal: 11\n  },\n  refresh_button_container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  loading: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(200, 200, 200, 0.2)'\n  }\n})\n\nexport default Documents\n","import { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\nimport Grades from '../screens/Grades'\nimport Profile from '../screens/Profile'\nimport React from 'react'\nimport { StackNavigationProp } from '@react-navigation/stack'\nimport { RootStackParamList } from '../types/RootStackParams'\nimport { useNavigation } from '@react-navigation/native'\nimport { Ionicons } from '@expo/vector-icons'\nimport { MaterialIcons } from '@expo/vector-icons'\nimport Documents from '../screens/Documents'\nimport { TouchableOpacity } from 'react-native'\nimport { Colors } from '../colors/Colors'\n\nconst Tab = createBottomTabNavigator()\ntype navScreenProp = StackNavigationProp<RootStackParamList, 'Menu'>\n\nconst EmptyComponent = () => null\n\nconst App = () => {\n  const navigation = useNavigation<navScreenProp>()\n\n  return (\n    <Tab.Navigator\n      screenOptions={{\n        tabBarShowLabel: false,\n        tabBarStyle: {\n          borderTopWidth: 1\n        }\n      }}\n    >\n      <Tab.Screen\n        name=\"Grades\"\n        component={Grades}\n        options={{\n          headerShown: false,\n          tabBarIcon: (tabInfo) => {\n            return tabInfo.focused ? (\n              <MaterialIcons\n                name=\"insert-chart\"\n                size={30}\n                color={Colors.middle_blue_green}\n              />\n            ) : (\n              <MaterialIcons\n                name=\"insert-chart-outlined\"\n                size={30}\n                color={Colors.secondary}\n              />\n            )\n          }\n        }}\n      />\n      <Tab.Screen\n        name=\"Documents\"\n        component={Documents}\n        options={{\n          headerShown: false,\n          tabBarIcon: (tabInfo) => {\n            return tabInfo.focused ? (\n              <Ionicons\n                name=\"folder\"\n                size={30}\n                color={Colors.middle_blue_green}\n              />\n            ) : (\n              <Ionicons\n                name=\"folder-outline\"\n                size={30}\n                color={Colors.secondary}\n              />\n            )\n          }\n        }}\n      />\n      <Tab.Screen\n        name=\"Profile\"\n        component={Profile}\n        options={{\n          headerShown: false,\n          tabBarIcon: (tabInfo) => {\n            return tabInfo.focused ? (\n              <Ionicons\n                name=\"person\"\n                size={30}\n                color={Colors.middle_blue_green}\n              />\n            ) : (\n              <Ionicons\n                name=\"person-outline\"\n                size={30}\n                color={Colors.secondary}\n              />\n            )\n          }\n        }}\n      />\n      <Tab.Screen\n        name=\"Logout\"\n        component={EmptyComponent}\n        options={({ navigation }) => ({\n          headerShown: false,\n          tabBarIcon: () => {\n            return (\n              <Ionicons name=\"exit-outline\" size={32} color={Colors.black} />\n            )\n          },\n          tabBarButton: (props) => (\n            <TouchableOpacity\n              {...props}\n              onPress={() => navigation.navigate('Login')}\n            />\n          )\n        })}\n      />\n    </Tab.Navigator>\n  )\n}\n\nexport default App\n","import Login from './screens/Login'\nimport React, { useState } from 'react'\nimport BottomNavigation from './navigation/BottomNavigation'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport { RootStackParamList } from './types/RootStackParams'\nimport AppContext from './contexts/AppContext'\nimport { LightTheme } from './theme/LightTheme'\nimport {\n  useFonts,\n  Inter_100Thin,\n  Inter_200ExtraLight,\n  Inter_300Light,\n  Inter_400Regular,\n  Inter_500Medium,\n  Inter_600SemiBold,\n  Inter_700Bold,\n  Inter_800ExtraBold,\n  Inter_900Black\n} from '@expo-google-fonts/inter'\nimport {\n  Montserrat_100Thin,\n  Montserrat_200ExtraLight,\n  Montserrat_300Light,\n  Montserrat_400Regular,\n  Montserrat_500Medium,\n  Montserrat_600SemiBold,\n  Montserrat_700Bold,\n  Montserrat_800ExtraBold,\n  Montserrat_900Black,\n  Montserrat_100Thin_Italic,\n  Montserrat_200ExtraLight_Italic,\n  Montserrat_300Light_Italic,\n  Montserrat_400Regular_Italic,\n  Montserrat_500Medium_Italic,\n  Montserrat_600SemiBold_Italic,\n  Montserrat_700Bold_Italic,\n  Montserrat_800ExtraBold_Italic,\n  Montserrat_900Black_Italic\n} from '@expo-google-fonts/montserrat'\nimport { View } from 'react-native'\nimport { SafeAreaProvider } from 'react-native-safe-area-context'\nimport FlashMessage from 'react-native-flash-message'\n\nconst Stack = createStackNavigator<RootStackParamList>()\n\nconst App = () => {\n  const [client, setClient] = useState(undefined)\n  const [marks, setMarks] = useState(undefined)\n  const [gradebook, setGradebook] = useState(undefined)\n  const [username, setUsername] = useState(undefined)\n  const [password, setPassword] = useState(undefined)\n  const user = {\n    username: username,\n    password: password,\n    client: client,\n    marks: marks,\n    gradebook: gradebook,\n    setUsername,\n    setPassword,\n    setClient,\n    setMarks,\n    setGradebook\n  }\n  let [fontsLoaded] = useFonts({\n    Inter_100Thin,\n    Inter_200ExtraLight,\n    Inter_300Light,\n    Inter_400Regular,\n    Inter_500Medium,\n    Inter_600SemiBold,\n    Inter_700Bold,\n    Inter_800ExtraBold,\n    Inter_900Black,\n    Montserrat_100Thin,\n    Montserrat_200ExtraLight,\n    Montserrat_300Light,\n    Montserrat_400Regular,\n    Montserrat_500Medium,\n    Montserrat_600SemiBold,\n    Montserrat_700Bold,\n    Montserrat_800ExtraBold,\n    Montserrat_900Black,\n    Montserrat_100Thin_Italic,\n    Montserrat_200ExtraLight_Italic,\n    Montserrat_300Light_Italic,\n    Montserrat_400Regular_Italic,\n    Montserrat_500Medium_Italic,\n    Montserrat_600SemiBold_Italic,\n    Montserrat_700Bold_Italic,\n    Montserrat_800ExtraBold_Italic,\n    Montserrat_900Black_Italic\n  })\n  if (!fontsLoaded) {\n    return <View></View>\n  }\n\n  return (\n    <>\n      <SafeAreaProvider>\n        <AppContext.Provider value={user}>\n          <NavigationContainer theme={LightTheme}>\n            <Stack.Navigator>\n              <Stack.Screen\n                name=\"Login\"\n                component={Login}\n                options={{\n                  headerShown: false\n                }}\n              />\n              <Stack.Screen\n                name=\"Menu\"\n                component={BottomNavigation}\n                options={{\n                  headerShown: false\n                }}\n              />\n            </Stack.Navigator>\n          </NavigationContainer>\n        </AppContext.Provider>\n      </SafeAreaProvider>\n      <FlashMessage position=\"top\" />\n    </>\n  )\n}\n\nexport default App\n"],"sourceRoot":""}
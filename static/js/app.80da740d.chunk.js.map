{"version":3,"sources":["components/CustomButton.tsx","theme/LightTheme.ts","colors/Colors.ts","App.tsx","screens/Login.tsx","contexts/AppContext.tsx","assets/mountainbackground.png","navigation/BottomNavigation.tsx","screens/Grades.tsx","screens/CourseDetails.tsx","components/Assignment.tsx","gradebook/GradeUtil.ts","screens/Courses.tsx","components/Course.tsx","contexts/GradeContext.tsx","screens/Profile.tsx","screens/Documents.tsx","components/Document.tsx"],"names":["styles","StyleSheet","create","buttonText","fontSize","textAlign","onPress","text","backgroundColor","textColor","fontFamily","containerStyle","disabled","TouchableOpacity","style","View","Text","color","LightTheme","dark","colors","primary","Colors","background","white","card","black","border","secondary","notification","accent","middle_blue_green","dark_middle_blue_green","alice_blue","onyx_gray","corn_silk_white","red","off_white","light_gray","navy","Stack","createNativeStackNavigator","useState","undefined","client","setClient","marks","setMarks","username","setUsername","user","password","setPassword","useFonts","Inter_100Thin","Inter_200ExtraLight","Inter_300Light","Inter_400Regular","Inter_500Medium","Inter_600SemiBold","Inter_700Bold","Inter_800ExtraBold","Inter_900Black","Montserrat_100Thin","Montserrat_200ExtraLight","Montserrat_300Light","Montserrat_400Regular","Montserrat_500Medium","Montserrat_600SemiBold","Montserrat_700Bold","Montserrat_800ExtraBold","Montserrat_900Black","Montserrat_100Thin_Italic","Montserrat_200ExtraLight_Italic","Montserrat_300Light_Italic","Montserrat_400Regular_Italic","Montserrat_500Medium_Italic","Montserrat_600SemiBold_Italic","Montserrat_700Bold_Italic","Montserrat_800ExtraBold_Italic","Montserrat_900Black_Italic","RussoOne_400Regular","SafeAreaProvider","Provider","value","NavigationContainer","theme","Navigator","Screen","name","component","Login","options","headerShown","BottomNavigation","position","margin","ActivityIndicator","animating","size","navigation","useNavigation","useContext","AppContext","isLoading","setIsLoading","isChecked","setToggleCheckBox","showAlert","setShowAlert","errorMessage","setErrorMessage","firstLaunch","setFirstLaunch","useCookies","cookies","setCookie","removeCookie","open","setOpen","setValue","require","map","d","label","list","setList","getValueFor","StudentVue","login","find","parentVueUrl","gradebook","GradeUtil","convertGradebook","err","alert","message","navigate","save","remove","openInstagram","Platform","OS","appUrl","Linking","canOpenURL","openURL","key","path","SecureStore","setItemAsync","getItemAsync","useAsyncEffect","savedCredentials","getAsyncStorage","setAsyncStorage","deleteItemAsync","AsyncStorage","setItem","e","getItem","ImageBackground","source","resizeMode","flex","SafeAreaView","alignItems","horizontal_container","mountain","FontAwesome5","description","KeyboardAvoidingView","container","behavior","login_info","TextInput","defaultValue","onChangeText","u","placeholder","input","p","secureTextEntry","searchable","items","setItems","maxHeight","Dimensions","get","height","dropDownDirection","dropdown","textStyle","dropdown_text","dropdown_container","listMode","translation","SEARCH_PLACEHOLDER","PLACEHOLDER","NOTHING_TO_SHOW","tickIconStyle","dropdown_tick","listItemLabelStyle","dropdown_item","searchContainerStyle","dropdown_search_container","searchTextInputStyle","dropdown_search_text","listItemContainerStyle","dropdown_list_item_container","renderListItem","props","isSelected","district_name_container","numberOfLines","checkbox_container","fillColor","unfillColor","disableText","iconStyle","borderColor","disableBuiltInState","save_text","onLogin","button_container","marginBottom","bottom","row_container","insta_button_container","Button","insta_button","underlayColor","activeOpacity","insta_text","show","showProgress","title","closeOnTouchOutside","closeOnHardwareBackPress","showCancelButton","showConfirmButton","confirmText","confirmButtonColor","confirmButtonTextStyle","onConfirmPressed","alignSelf","justifyContent","marginTop","flexDirection","marginLeft","width","padding","borderWidth","borderRadius","paddingHorizontal","paddingVertical","borderBottomWidth","loading","marginHorizontal","React","createContext","module","exports","Tab","createBottomTabNavigator","EmptyComponent","screenOptions","tabBarShowLabel","tabBarStyle","borderTopWidth","overflow","Grades","tabBarIcon","tabInfo","focused","MaterialIcons","Documents","Ionicons","Profile","tabBarButton","course","setCourse","courseHeader","Courses","CourseDetails","marginVertical","modal","modal_view","course_details","flexWrap","course_details_container","left","right","top","category_name_container","category_check_container","courseName","route","params","courses","isModalVisible","setModalVisible","categories","values","next","category","setCategory","Array","from","c","setCategories","assignmentName","setAssignmentName","points","setPoints","total","setTotal","useEffect","toggleModal","refreshMarks","reportingPeriod","index","showMessage","type","icon","pointerEvents","goBack","isNaN","parseCourseName","FlatList","data","assignments","renderItem","item","keyExtractor","isVisible","coverScreen","onBackdropPress","t","keyboardType","autoComplete","isNumber","MaterialCommunityIcons","addAssignment","parseFloat","marginRight","hairlineWidth","borderTopColor","assignment_info_container","name_web","lineHeight","paddingBottom","category_web","paddingTop","input_container","mark","dash","textAlignVertical","dropdown_text_name","dropdown_text_value","isDropdown","setIsDropdown","assignment","a","totalWeight","reduce","weight","toString","score","hasScore","updatePoints","getWidth","n","Math","max","length","borderLeftColor","calculateMarkColor","borderLeftWidth","modified","date","due","toLocaleDateString","outlineStyle","roundTo","calculateLetterGrade","status","start","notes","deleteAssignment","substring","lastIndexOf","trim","gpa","Map","current","reportingPeriods","available","set","period","findIndex","teacher","staff","NaN","weightedCategories","toUpperCase","standard","parsePoints","push","this","calculatePoints","Promise","resolve","numOfCourses","regex","match","split","num","places","multiplicator","pow","toFixed","round","newMarks","Object","assign","filter","some","indentifier","unshift","Date","m","test","Constants","statusBarHeight","gpa_container","refresh_button_container","periods","setPeriods","isSubscribed","getGradebook","entries","period_number","course_info_container","teacher_web","letter_grade","slice","suffix","j","k","header","avatar","description_container","description_part_container","description_part_text","property_container","property_text","studentInfo","setStudentInfo","fetchStudentInfo","Image","uri","photo","student","grade","parseInt","FontAwesome","birthDate","Feather","phone","email","address","currentSchool","title_container","documents","setDocuments","fetchDocuments","downloadDocument","document","file","fileName","comment","replace","filePath","FileSystem","documentDirectory","writeAsStringAsync","base64","encoding","Sharing","shareAsync","saveAs","sliceSize","byteCharacters","window","atob","byteArrays","offset","byteNumbers","i","charCodeAt","Uint8Array","Blob","base64toBlob","documentGu","doc_info_container","info_container"],"mappings":"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","file":"static/js/app.80da740d.chunk.js","sourcesContent":["import React from 'react'\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native'\n\ntype Props = {\n  onPress: any\n  text: string\n  backgroundColor: string\n  textColor: string\n  fontFamily: string\n  containerStyle: any\n  disabled: boolean\n}\n\nconst CustomButton: React.FC<Props> = ({\n  onPress,\n  text,\n  backgroundColor,\n  textColor,\n  fontFamily,\n  containerStyle,\n  disabled\n}: Props) => {\n  return (\n    <TouchableOpacity\n      onPress={onPress}\n      style={[containerStyle, { backgroundColor: backgroundColor }]}\n      disabled={disabled}\n    >\n      <View>\n        <Text\n          style={[\n            styles.buttonText,\n            { color: textColor, fontFamily: fontFamily }\n          ]}\n        >\n          {text}\n        </Text>\n      </View>\n    </TouchableOpacity>\n  )\n}\n\nconst styles = StyleSheet.create({\n  buttonText: {\n    fontSize: 20,\n    textAlign: 'center'\n  }\n})\n\nexport default CustomButton\n","import { Colors } from '../colors/Colors'\n\nexport const LightTheme = {\n  dark: false,\n  colors: {\n    primary: Colors.primary,\n    background: Colors.white,\n    card: Colors.primary,\n    text: Colors.black,\n    border: Colors.secondary,\n    notification: Colors.accent\n  }\n}\n","export const Colors = {\n  primary: '#FEF156',\n  secondary: '#AEAC99',\n  accent: '#00F1EE',\n  middle_blue_green: '#83C5BE',\n  dark_middle_blue_green: '#298980',\n  alice_blue: '#EDF6F9',\n  onyx_gray: '#454545',\n  corn_silk_white: '#FEFAE0',\n  white: '#FFFFFF',\n  black: '#001219',\n  red: '#A30800',\n  off_white: '#F5F5F5',\n  light_gray: '#E4E4E4',\n  navy: '#000080'\n}\n","import Login from './screens/Login'\nimport React, { useState } from 'react'\nimport BottomNavigation from './navigation/BottomNavigation'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\nimport { RootStackParamList } from './types/RootStackParams'\nimport AppContext from './contexts/AppContext'\nimport { LightTheme } from './theme/LightTheme'\nimport {\n  useFonts,\n  Inter_100Thin,\n  Inter_200ExtraLight,\n  Inter_300Light,\n  Inter_400Regular,\n  Inter_500Medium,\n  Inter_600SemiBold,\n  Inter_700Bold,\n  Inter_800ExtraBold,\n  Inter_900Black\n} from '@expo-google-fonts/inter'\nimport {\n  Montserrat_100Thin,\n  Montserrat_200ExtraLight,\n  Montserrat_300Light,\n  Montserrat_400Regular,\n  Montserrat_500Medium,\n  Montserrat_600SemiBold,\n  Montserrat_700Bold,\n  Montserrat_800ExtraBold,\n  Montserrat_900Black,\n  Montserrat_100Thin_Italic,\n  Montserrat_200ExtraLight_Italic,\n  Montserrat_300Light_Italic,\n  Montserrat_400Regular_Italic,\n  Montserrat_500Medium_Italic,\n  Montserrat_600SemiBold_Italic,\n  Montserrat_700Bold_Italic,\n  Montserrat_800ExtraBold_Italic,\n  Montserrat_900Black_Italic\n} from '@expo-google-fonts/montserrat'\nimport { RussoOne_400Regular } from '@expo-google-fonts/russo-one'\nimport { SafeAreaProvider } from 'react-native-safe-area-context'\nimport FlashMessage from 'react-native-flash-message'\nimport { User } from './interfaces/User'\nimport { ActivityIndicator, Text, View } from 'react-native'\nimport { Colors } from './colors/Colors'\nimport { Client } from 'studentvue'\nimport { Marks } from './interfaces/Gradebook'\n\nconst Stack = createNativeStackNavigator<RootStackParamList>()\n\nconst App = () => {\n  const [client, setClient] = useState(undefined as Client)\n  const [marks, setMarks] = useState(undefined as Marks)\n  const [username, setUsername] = useState(undefined as string)\n  const [password, setPassword] = useState(undefined as string)\n  const user: User = {\n    username: username,\n    password: password,\n    client: client,\n    marks: marks,\n    setUsername,\n    setPassword,\n    setClient,\n    setMarks\n  }\n  let [fontsLoaded] = useFonts({\n    Inter_100Thin,\n    Inter_200ExtraLight,\n    Inter_300Light,\n    Inter_400Regular,\n    Inter_500Medium,\n    Inter_600SemiBold,\n    Inter_700Bold,\n    Inter_800ExtraBold,\n    Inter_900Black,\n    Montserrat_100Thin,\n    Montserrat_200ExtraLight,\n    Montserrat_300Light,\n    Montserrat_400Regular,\n    Montserrat_500Medium,\n    Montserrat_600SemiBold,\n    Montserrat_700Bold,\n    Montserrat_800ExtraBold,\n    Montserrat_900Black,\n    Montserrat_100Thin_Italic,\n    Montserrat_200ExtraLight_Italic,\n    Montserrat_300Light_Italic,\n    Montserrat_400Regular_Italic,\n    Montserrat_500Medium_Italic,\n    Montserrat_600SemiBold_Italic,\n    Montserrat_700Bold_Italic,\n    Montserrat_800ExtraBold_Italic,\n    Montserrat_900Black_Italic,\n    RussoOne_400Regular\n  })\n\n  if (!fontsLoaded) {\n    return (\n      <>\n        <View style={{ backgroundColor: Colors.primary }}>\n          <Text style={{ margin: 10 }}>Loading Schools...</Text>\n          <ActivityIndicator\n            color={Colors.secondary}\n            animating={true}\n            size=\"large\"\n          />\n        </View>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <SafeAreaProvider>\n        <AppContext.Provider value={user}>\n          <NavigationContainer theme={LightTheme}>\n            <Stack.Navigator>\n              <Stack.Screen\n                name=\"Login\"\n                component={Login}\n                options={{\n                  headerShown: false\n                }}\n              />\n              <Stack.Screen\n                name=\"Menu\"\n                component={BottomNavigation}\n                options={{\n                  headerShown: false\n                }}\n              />\n            </Stack.Navigator>\n          </NavigationContainer>\n        </AppContext.Provider>\n      </SafeAreaProvider>\n      <FlashMessage position=\"top\" />\n    </>\n  )\n}\n\nexport default App\n","import React, { useContext, useState } from 'react'\nimport {\n  TextInput,\n  View,\n  Text,\n  StyleSheet,\n  ActivityIndicator,\n  SafeAreaView,\n  Platform,\n  Linking,\n  KeyboardAvoidingView,\n  TouchableOpacity,\n  ImageBackground,\n  Dimensions\n} from 'react-native'\nimport StudentVue from 'studentvue'\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack'\nimport { RootStackParamList } from '../types/RootStackParams'\nimport { useNavigation } from '@react-navigation/native'\nimport CustomButton from '../components/CustomButton'\nimport AppContext from '../contexts/AppContext'\nimport BouncyCheckbox from 'react-native-bouncy-checkbox'\nimport GradeUtil from '../gradebook/GradeUtil'\nimport { Colors } from '../colors/Colors'\nimport AwesomeAlert from 'react-native-awesome-alerts'\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\nimport DropDownPicker from 'react-native-dropdown-picker'\nimport { SchoolDistrict } from 'studentvue/StudentVue/StudentVue.interfaces'\nimport { useCookies } from 'react-cookie'\nimport * as SecureStore from 'expo-secure-store'\nimport AsyncStorage from '@react-native-async-storage/async-storage'\nimport useAsyncEffect from 'use-async-effect'\nimport { FontAwesome5 } from '@expo/vector-icons'\n\ntype loginScreenProp = NativeStackNavigationProp<RootStackParamList, 'Login'>\n\ntype loginInfo = 'username' | 'password' | 'district'\n\nconst Login = () => {\n  const navigation = useNavigation<loginScreenProp>()\n  const { username, password, setUsername, setPassword, setClient, setMarks } =\n    useContext(AppContext)\n  const [isLoading, setIsLoading] = useState(false)\n  const [isChecked, setToggleCheckBox] = useState(false)\n  const [showAlert, setShowAlert] = useState(false)\n  const [errorMessage, setErrorMessage] = useState(undefined as string)\n\n  const [firstLaunch, setFirstLaunch] = useState(false)\n\n  const [cookies, setCookie, removeCookie] = useCookies([\n    'username',\n    'password',\n    'district'\n  ] as loginInfo[])\n\n  const [open, setOpen] = useState(false)\n  const [value, setValue] = useState(undefined as string)\n  const [list, setList] = useState(\n    require('../assets/districts.json').map((d: SchoolDistrict) => {\n      return { label: d.name, value: d.name }\n    })\n  )\n\n  useAsyncEffect(async () => {\n    savedCredentials()\n    if (!(await getAsyncStorage('firstLaunch'))) {\n      setFirstLaunch(true)\n      setAsyncStorage('firstLaunch', 'true')\n    }\n  }, [])\n\n  async function savedCredentials() {\n    const username: string = await getValueFor('username')\n    const password: string = await getValueFor('password')\n    const value: string = await getValueFor('district')\n\n    // Auto login\n    if (username && password && value) {\n      setUsername(username)\n      setPassword(password)\n      setValue(value)\n      setIsLoading(true)\n      setToggleCheckBox(true)\n      try {\n        const client = await StudentVue.login(\n          require('../assets/districts.json').find(\n            (d: SchoolDistrict) => d.name === value\n          ).parentVueUrl,\n          {\n            username: username,\n            password: password\n          }\n        )\n        const gradebook = await client.gradebook()\n        const marks = await GradeUtil.convertGradebook(gradebook)\n        setClient(client)\n        setMarks(marks)\n      } catch (err) {\n        setIsLoading(false)\n        alert(err.message)\n        return\n      }\n      setIsLoading(false)\n      navigation.navigate('Menu')\n    }\n  }\n\n  function alert(message: string) {\n    setErrorMessage(message)\n    setShowAlert(true)\n  }\n\n  async function onLogin() {\n    setIsLoading(true)\n    if (!username) {\n      alert('Enter your username')\n      setIsLoading(false)\n      return\n    }\n    if (!password) {\n      alert('Enter your password')\n      setIsLoading(false)\n      return\n    }\n    if (!value) {\n      alert('Select your school district')\n      setIsLoading(false)\n      return\n    }\n    try {\n      const client = await StudentVue.login(\n        require('../assets/districts.json').find(\n          (d: SchoolDistrict) => d.name === value\n        ).parentVueUrl,\n        {\n          username: username,\n          password: password\n        }\n      )\n      const gradebook = await client.gradebook()\n      const marks = await GradeUtil.convertGradebook(gradebook)\n      setClient(client)\n      setMarks(marks)\n    } catch (err) {\n      setIsLoading(false)\n      alert(err.message)\n      return\n    }\n    if (isChecked) {\n      save('username', username)\n      save('password', password)\n      save('district', value)\n    } else {\n      remove('username')\n      remove('password')\n      remove('username')\n    }\n    setIsLoading(false)\n    navigation.navigate('Menu')\n  }\n\n  async function openInstagram(username: string) {\n    if (Platform.OS !== 'web') {\n      const appUrl = `instagram://user?username=${username}`\n      try {\n        if (await Linking.canOpenURL(appUrl)) {\n          Linking.openURL(appUrl)\n        } else {\n          try {\n            Linking.openURL(`https://instagram.com/${username}`)\n          } catch (err) {\n            alert('Cannot open Instagram')\n          }\n        }\n      } catch (err) {\n        alert('Cannot open Instagram')\n      }\n    } else {\n      try {\n        Linking.openURL(`https://instagram.com/${username}`)\n      } catch (err) {\n        alert('Cannot open Instagram')\n      }\n    }\n  }\n\n  function nameFontSize(): number {\n    if (Platform.OS === 'web') return 60\n    return 40\n  }\n\n  function descriptionFontSize(): number {\n    if (Platform.OS === 'web') return 25\n    return 20\n  }\n\n  function mountainSize(): number {\n    if (Platform.OS === 'web') return 40\n    return 30\n  }\n\n  async function save(key: loginInfo, value: string) {\n    if (value === null) return\n    if (Platform.OS === 'web') {\n      setCookie(key, value, { path: '/' })\n    } else {\n      await SecureStore.setItemAsync(key, value)\n    }\n  }\n\n  async function getValueFor(key: loginInfo) {\n    if (Platform.OS === 'web') {\n      cookies[key]\n    } else {\n      return await SecureStore.getItemAsync(key)\n    }\n  }\n\n  const remove = async (key: loginInfo) => {\n    if (Platform.OS === 'web') {\n      removeCookie(key, { path: '/' })\n    } else {\n      await SecureStore.deleteItemAsync(key)\n    }\n  }\n\n  const setAsyncStorage = async (key: string, value: string) => {\n    try {\n      await AsyncStorage.setItem(key, value)\n    } catch (e) {}\n  }\n\n  const getAsyncStorage = async (key: string): Promise<string> => {\n    try {\n      return await AsyncStorage.getItem(key)\n    } catch (e) {\n      return null\n    }\n  }\n\n  return (\n    <>\n      <ImageBackground\n        source={require('../assets/mountainbackground.png')}\n        resizeMode=\"cover\"\n        style={{ flex: 1 }}\n      >\n        <SafeAreaView style={{ alignItems: 'center' }}>\n          <View style={styles.horizontal_container}>\n            <Text style={[styles.name, { fontSize: nameFontSize() }]}>\n              Summit\n            </Text>\n            <View style={styles.mountain}>\n              <FontAwesome5\n                name=\"mountain\"\n                size={mountainSize()}\n                color=\"black\"\n              />\n            </View>\n          </View>\n          <Text\n            style={[styles.description, { fontSize: descriptionFontSize() }]}\n          >\n            Grade Viewer\n          </Text>\n        </SafeAreaView>\n        <KeyboardAvoidingView\n          style={styles.container}\n          behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n        >\n          {firstLaunch && (\n            <Text style={styles.login_info}>\n              Username and password are the same as StudentVue\n            </Text>\n          )}\n          <TextInput\n            defaultValue={username}\n            onChangeText={(u) => setUsername(u)}\n            placeholder={'Username'}\n            style={styles.input}\n          />\n          <TextInput\n            defaultValue={password}\n            onChangeText={(p) => setPassword(p)}\n            placeholder={'Password'}\n            secureTextEntry={true}\n            style={styles.input}\n          />\n          <DropDownPicker\n            searchable={true}\n            open={open}\n            value={value}\n            items={list}\n            setOpen={setOpen}\n            setValue={setValue}\n            setItems={setList}\n            maxHeight={Dimensions.get('window').height / 2 - 125}\n            dropDownDirection={'BOTTOM'}\n            style={styles.dropdown}\n            textStyle={styles.dropdown_text}\n            containerStyle={styles.dropdown_container}\n            listMode={'FLATLIST'}\n            translation={{\n              SEARCH_PLACEHOLDER: 'Enter School District Name',\n              PLACEHOLDER: 'Select School District',\n              NOTHING_TO_SHOW:\n                'Nothing found, make sure you are entering your DISTRICT NAME not SCHOOL NAME'\n            }}\n            tickIconStyle={styles.dropdown_tick}\n            listItemLabelStyle={styles.dropdown_item}\n            searchContainerStyle={styles.dropdown_search_container}\n            searchTextInputStyle={styles.dropdown_search_text}\n            listItemContainerStyle={styles.dropdown_list_item_container}\n            renderListItem={(props) => {\n              return (\n                <TouchableOpacity\n                  {...props}\n                  style={[\n                    props.listItemContainerStyle,\n                    {\n                      backgroundColor: props.isSelected && Colors.light_gray\n                    }\n                  ]}\n                  onPress={() => {\n                    setValue(props.value)\n                    setOpen(false)\n                  }}\n                >\n                  <View style={styles.district_name_container}>\n                    <Text numberOfLines={1} style={props.listItemLabelStyle}>\n                      {props.label}\n                    </Text>\n                  </View>\n                </TouchableOpacity>\n              )\n            }}\n          ></DropDownPicker>\n          <View style={styles.checkbox_container}>\n            <BouncyCheckbox\n              size={24}\n              fillColor={Colors.accent}\n              unfillColor=\"transparent\"\n              disableText\n              iconStyle={{ borderColor: Colors.black }}\n              isChecked={isChecked}\n              disableBuiltInState\n              onPress={async () => {\n                setToggleCheckBox(!isChecked)\n              }}\n            />\n            <Text style={styles.save_text}>Save Login Information</Text>\n          </View>\n          <CustomButton\n            onPress={() => {\n              if (!isLoading) onLogin()\n            }}\n            text={'Login'}\n            backgroundColor={\n              !isLoading ? Colors.navy : 'rgba(100, 100, 100, 0.6)'\n            }\n            textColor={Colors.white}\n            fontFamily=\"Inter_800ExtraBold\"\n            containerStyle={styles.button_container}\n            disabled={isLoading}\n          ></CustomButton>\n          <ActivityIndicator\n            color={Colors.secondary}\n            animating={isLoading}\n            style={{ marginBottom: 50 }}\n            size=\"large\"\n          />\n          <View\n            style={{\n              alignItems: 'center',\n              position: 'absolute',\n              bottom: 20\n            }}\n          >\n            <View style={styles.row_container}>\n              <View style={styles.insta_button_container}>\n                <FontAwesome.Button\n                  name=\"instagram\"\n                  backgroundColor=\"transparent\"\n                  iconStyle={styles.insta_button}\n                  underlayColor=\"none\"\n                  activeOpacity={0.5}\n                  size={28}\n                  onPress={() => openInstagram('richardyin99')}\n                ></FontAwesome.Button>\n                <Text style={styles.insta_text}>Richard Y</Text>\n              </View>\n              <View style={styles.insta_button_container}>\n                <FontAwesome.Button\n                  name=\"instagram\"\n                  backgroundColor=\"transparent\"\n                  iconStyle={styles.insta_button}\n                  underlayColor=\"none\"\n                  activeOpacity={0.5}\n                  size={28}\n                  onPress={() => openInstagram('karthik.whynot')}\n                ></FontAwesome.Button>\n                <Text style={styles.insta_text}>Karthik M</Text>\n              </View>\n            </View>\n          </View>\n        </KeyboardAvoidingView>\n      </ImageBackground>\n      <AwesomeAlert\n        show={showAlert}\n        showProgress={false}\n        title={'Error'}\n        message={errorMessage}\n        closeOnTouchOutside={true}\n        closeOnHardwareBackPress={true}\n        showCancelButton={false}\n        showConfirmButton={true}\n        confirmText={'Ok'}\n        confirmButtonColor={Colors.primary}\n        confirmButtonTextStyle={{ color: Colors.black }}\n        onConfirmPressed={() => {\n          setShowAlert(false)\n        }}\n      ></AwesomeAlert>\n    </>\n  )\n}\n\nexport default Login\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    alignSelf: 'center',\n    justifyContent: 'center',\n    marginTop: 10\n  },\n  horizontal_container: {\n    flexDirection: 'row',\n    marginTop: 10\n  },\n  mountain: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginLeft: 5\n  },\n  name: {\n    fontFamily: 'Montserrat_900Black'\n  },\n  description: {\n    fontFamily: 'RussoOne_400Regular',\n    textAlign: 'center'\n  },\n  login_info: {\n    fontFamily: 'Inter_400Regular',\n    fontSize: 12,\n    marginBottom: 10,\n    marginTop: 15\n  },\n  checkbox_container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 10\n  },\n  input: {\n    width: 250,\n    height: 50,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: Colors.black,\n    borderRadius: 5,\n    marginBottom: 10\n  },\n  dropdown: {\n    borderWidth: 1,\n    borderColor: Colors.black,\n    width: 250,\n    marginBottom: 10,\n    backgroundColor: 'transparent',\n    padding: 10,\n    borderRadius: 5\n  },\n  dropdown_text: {\n    fontFamily: 'Inter_700Bold',\n    fontSize: 12\n  },\n  dropdown_container: {\n    width: 250\n  },\n  dropdown_item: {\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    fontFamily: 'Inter_600SemiBold'\n  },\n  dropdown_tick: {\n    marginLeft: 10\n  },\n  dropdown_search_container: {\n    padding: 10,\n    borderBottomWidth: 0\n  },\n  dropdown_search_text: {\n    fontFamily: 'Inter_400Regular'\n  },\n  dropdown_list_item_container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  district_name_container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-start'\n  },\n  loading: {\n    margin: 'auto'\n  },\n  button_container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'relative',\n    width: 100,\n    height: 50,\n    padding: 10,\n    borderRadius: 10,\n    borderWidth: 0,\n    marginBottom: 10\n  },\n  save_text: {\n    marginLeft: 8,\n    fontFamily: 'Inter_400Regular'\n  },\n  row_container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  insta_button_container: {\n    marginHorizontal: 10\n  },\n  insta_button: {\n    color: Colors.black\n  },\n  insta_text: {\n    fontFamily: 'Inter_300Light',\n    fontSize: 10\n  }\n})\n","import React from 'react'\nimport { User } from '../interfaces/User'\n\nconst AppContext = React.createContext<User>(null)\n\nexport default AppContext\n","module.exports = __webpack_public_path__ + \"static/media/mountainbackground.240775b1.png\";","import { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\nimport Grades from '../screens/Grades'\nimport Profile from '../screens/Profile'\nimport React from 'react'\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack'\nimport { RootStackParamList } from '../types/RootStackParams'\nimport { useNavigation } from '@react-navigation/native'\nimport { Ionicons } from '@expo/vector-icons'\nimport { MaterialIcons } from '@expo/vector-icons'\nimport Documents from '../screens/Documents'\nimport { TouchableOpacity } from 'react-native'\nimport { Colors } from '../colors/Colors'\n\nconst Tab = createBottomTabNavigator()\ntype navScreenProp = NativeStackNavigationProp<RootStackParamList, 'Menu'>\n\nconst EmptyComponent = () => null\n\nconst App = () => {\n  const navigation = useNavigation<navScreenProp>()\n\n  return (\n    <Tab.Navigator\n      screenOptions={{\n        tabBarShowLabel: false,\n        tabBarStyle: {\n          borderTopWidth: 1,\n          overflow: 'hidden'\n        }\n      }}\n    >\n      <Tab.Screen\n        name=\"Grades\"\n        component={Grades}\n        options={{\n          headerShown: false,\n          tabBarIcon: (tabInfo) => {\n            return tabInfo.focused ? (\n              <MaterialIcons\n                name=\"insert-chart\"\n                size={30}\n                color={Colors.navy}\n              />\n            ) : (\n              <MaterialIcons\n                name=\"insert-chart-outlined\"\n                size={30}\n                color={Colors.secondary}\n              />\n            )\n          }\n        }}\n      />\n      <Tab.Screen\n        name=\"Documents\"\n        component={Documents}\n        options={{\n          headerShown: false,\n          tabBarIcon: (tabInfo) => {\n            return tabInfo.focused ? (\n              <Ionicons name=\"folder\" size={30} color={Colors.navy} />\n            ) : (\n              <Ionicons\n                name=\"folder-outline\"\n                size={30}\n                color={Colors.secondary}\n              />\n            )\n          }\n        }}\n      />\n      <Tab.Screen\n        name=\"Profile\"\n        component={Profile}\n        options={{\n          headerShown: false,\n          tabBarIcon: (tabInfo) => {\n            return tabInfo.focused ? (\n              <Ionicons name=\"person\" size={30} color={Colors.navy} />\n            ) : (\n              <Ionicons\n                name=\"person-outline\"\n                size={30}\n                color={Colors.secondary}\n              />\n            )\n          }\n        }}\n      />\n      <Tab.Screen\n        name=\"Logout\"\n        component={EmptyComponent}\n        options={({ navigation }) => ({\n          headerShown: false,\n          tabBarIcon: () => {\n            return (\n              <Ionicons name=\"exit-outline\" size={32} color={Colors.black} />\n            )\n          },\n          tabBarButton: (props) => (\n            <TouchableOpacity\n              {...props}\n              onPress={() => navigation.navigate('Login')}\n            />\n          )\n        })}\n      />\n    </Tab.Navigator>\n  )\n}\n\nexport default App\n","import React, { useState } from 'react'\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\nimport CourseDetails from './CourseDetails'\nimport Courses from './Courses'\nimport GradeContext from '../contexts/GradeContext'\n\nconst Stack = createNativeStackNavigator()\n\nconst StackNavigator = () => {\n  const [course, setCourse] = useState(undefined as string)\n\n  return (\n    <GradeContext.Provider\n      value={{ courseHeader: course, setCourse: setCourse }}\n    >\n      <Stack.Navigator>\n        <Stack.Screen\n          name=\"Courses\"\n          component={Courses}\n          options={{\n            headerShown: false\n          }}\n        />\n        <Stack.Screen\n          name=\"Course Details\"\n          component={CourseDetails}\n          options={{\n            headerShown: false\n          }}\n        />\n      </Stack.Navigator>\n    </GradeContext.Provider>\n  )\n}\n\nexport default StackNavigator\n","import { useNavigation } from '@react-navigation/native'\nimport React, { useContext, useEffect, useState } from 'react'\nimport {\n  ActivityIndicator,\n  FlatList,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View\n} from 'react-native'\nimport AppContext from '../contexts/AppContext'\nimport AssignmentComponent from '../components/Assignment'\nimport GradeUtil from '../gradebook/GradeUtil'\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\nimport { LightTheme } from '../theme/LightTheme'\nimport Modal from 'react-native-modal'\nimport { TextInput } from 'react-native-gesture-handler'\nimport DropDownPicker from 'react-native-dropdown-picker'\nimport CustomButton from '../components/CustomButton'\nimport { Colors } from '../colors/Colors'\nimport { showMessage } from 'react-native-flash-message'\nimport { SafeAreaView } from 'react-native-safe-area-context'\nimport AwesomeAlert from 'react-native-awesome-alerts'\nimport { MaterialCommunityIcons } from '@expo/vector-icons'\n\nconst CourseDetails = ({ route }) => {\n  const courseName = route.params.title\n  const navigation = useNavigation()\n\n  const { marks, client, setMarks } = useContext(AppContext)\n  const course = marks.courses.get(courseName)\n\n  const [isModalVisible, setModalVisible] = useState(false)\n  const [open, setOpen] = useState(false)\n  const [category, setCategory] = useState(\n    marks.courses.get(courseName).categories.values().next().value?.name\n  )\n  const [categories, setCategories] = useState(\n    Array.from(marks.courses.get(courseName).categories.values()).map((c) => {\n      return { label: c.name, value: c.name }\n    })\n  )\n  const [assignmentName, setAssignmentName] = useState('')\n  const [points, setPoints] = useState('')\n  const [total, setTotal] = useState('')\n\n  const [isLoading, setIsLoading] = useState(false)\n  const [showAlert, setShowAlert] = useState(false)\n  const [errorMessage, setErrorMessage] = useState()\n\n  useEffect(() => {\n    if (isModalVisible) {\n      setAssignmentName('')\n      setPoints('')\n      setTotal('')\n    }\n  }, [isModalVisible])\n\n  const toggleModal = () => {\n    setModalVisible(!isModalVisible)\n  }\n\n  const addAssignment = () => {\n    setMarks(\n      GradeUtil.addAssignment(\n        marks,\n        course,\n        assignmentName,\n        category,\n        parseFloat(points),\n        parseFloat(total)\n      )\n    )\n    toggleModal()\n  }\n\n  const refreshMarks = async () => {\n    setIsLoading(true)\n    try {\n      setMarks(\n        await GradeUtil.convertGradebook(\n          await client.gradebook(marks.reportingPeriod.index)\n        )\n      )\n      showMessage({\n        message: 'Refreshed',\n        type: 'info',\n        icon: 'success'\n      })\n    } catch (err) {\n      setErrorMessage(err.message)\n      setShowAlert(true)\n    }\n    setIsLoading(false)\n  }\n\n  return (\n    <>\n      <SafeAreaView\n        style={{ flex: 1 }}\n        pointerEvents={isLoading ? 'none' : 'auto'}\n      >\n        <View style={styles.course_details_container}>\n          <View\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'flex-start'\n            }}\n          >\n            <FontAwesome.Button\n              name=\"chevron-left\"\n              backgroundColor=\"transparent\"\n              iconStyle={{\n                color: Colors.secondary\n              }}\n              underlayColor=\"none\"\n              activeOpacity={0.5}\n              size={24}\n              onPress={() => navigation.goBack()}\n            ></FontAwesome.Button>\n          </View>\n          <Text numberOfLines={1} style={styles.course_details}>\n            {isNaN(course.value) ? 'N/A' : course.value} |{' '}\n            {GradeUtil.parseCourseName(courseName)}\n          </Text>\n          <View\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'flex-end'\n            }}\n          >\n            <FontAwesome.Button\n              name=\"plus-circle\"\n              backgroundColor=\"transparent\"\n              iconStyle={{\n                color: Colors.secondary\n              }}\n              size={24}\n              underlayColor=\"none\"\n              activeOpacity={0.5}\n              onPress={() => toggleModal()}\n            ></FontAwesome.Button>\n            <FontAwesome.Button\n              name=\"refresh\"\n              backgroundColor=\"transparent\"\n              iconStyle={{\n                color: Colors.secondary\n              }}\n              underlayColor=\"none\"\n              activeOpacity={0.5}\n              size={24}\n              onPress={() => refreshMarks()}\n            ></FontAwesome.Button>\n          </View>\n        </View>\n        <FlatList\n          data={course.assignments}\n          renderItem={({ item }) => (\n            <AssignmentComponent\n              name={item.name}\n              course={courseName}\n            ></AssignmentComponent>\n          )}\n          keyExtractor={(item) => item.name}\n        />\n        <Modal\n          isVisible={isModalVisible}\n          coverScreen={true}\n          onBackdropPress={toggleModal}\n        >\n          <View style={styles.modal}>\n            <View style={styles.modal_view}>\n              <TextInput\n                value={assignmentName}\n                placeholder=\"Name (Optional)\"\n                onChangeText={(t) => {\n                  setAssignmentName(t)\n                }}\n                style={[styles.input, { marginTop: 10 }]}\n              ></TextInput>\n              <TextInput\n                value={points}\n                keyboardType=\"decimal-pad\"\n                autoComplete=\"off\"\n                placeholder=\"Points Earned\"\n                onChangeText={(t) => {\n                  if (GradeUtil.isNumber(t) || t === '') setPoints(t)\n                }}\n                style={styles.input}\n              ></TextInput>\n              <TextInput\n                value={total}\n                keyboardType=\"decimal-pad\"\n                autoComplete=\"off\"\n                placeholder=\"Total Points\"\n                onChangeText={(t) => {\n                  if (GradeUtil.isNumber(t) || t === '') setTotal(t)\n                }}\n                style={styles.input}\n              ></TextInput>\n              <View\n                style={{\n                  marginHorizontal: 7,\n                  marginTop: 7\n                }}\n              >\n                <DropDownPicker\n                  open={open}\n                  value={category}\n                  items={categories}\n                  setOpen={setOpen}\n                  setValue={setCategory}\n                  setItems={setCategories}\n                  maxHeight={null}\n                  style={styles.dropdown}\n                  textStyle={styles.dropdown_text}\n                  containerStyle={styles.dropdown_container}\n                  translation={{\n                    PLACEHOLDER: 'Select Category'\n                  }}\n                  tickIconStyle={styles.dropdown_tick}\n                  listItemLabelStyle={styles.dropdown_item}\n                  searchContainerStyle={styles.dropdown_search_container}\n                  listItemContainerStyle={styles.dropdown_list_item_container}\n                  renderListItem={(props) => {\n                    return (\n                      <TouchableOpacity\n                        {...props}\n                        style={[\n                          props.listItemContainerStyle,\n                          {\n                            backgroundColor:\n                              props.isSelected && Colors.light_gray\n                          }\n                        ]}\n                        onPress={() => {\n                          setCategory(props.value)\n                          setOpen(false)\n                        }}\n                      >\n                        <View style={styles.category_name_container}>\n                          <Text\n                            numberOfLines={1}\n                            style={props.listItemLabelStyle}\n                          >\n                            {props.label}\n                          </Text>\n                        </View>\n                        {props.isSelected && (\n                          <View style={styles.category_check_container}>\n                            <MaterialCommunityIcons\n                              name={'check'}\n                              size={20}\n                              style={{ marginHorizontal: 5 }}\n                            />\n                          </View>\n                        )}\n                      </TouchableOpacity>\n                    )\n                  }}\n                ></DropDownPicker>\n                <CustomButton\n                  onPress={addAssignment}\n                  text={'Add Assignment'}\n                  backgroundColor={LightTheme.colors.card}\n                  textColor={Colors.black}\n                  fontFamily=\"Inter_600SemiBold\"\n                  containerStyle={styles.button_container}\n                  disabled={false}\n                ></CustomButton>\n              </View>\n            </View>\n          </View>\n        </Modal>\n      </SafeAreaView>\n      {isLoading && (\n        <SafeAreaView style={styles.loading}>\n          <ActivityIndicator size={'large'} />\n        </SafeAreaView>\n      )}\n      <AwesomeAlert\n        show={showAlert}\n        showProgress={false}\n        title={'Error'}\n        message={errorMessage}\n        closeOnTouchOutside={true}\n        closeOnHardwareBackPress={true}\n        showCancelButton={false}\n        showConfirmButton={true}\n        confirmText={'Ok'}\n        confirmButtonColor={Colors.primary}\n        confirmButtonTextStyle={{ color: Colors.black }}\n        onConfirmPressed={() => {\n          setShowAlert(false)\n        }}\n      ></AwesomeAlert>\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  input: {\n    marginHorizontal: 10,\n    marginVertical: 5,\n    padding: 5,\n    borderWidth: 1,\n    height: 30,\n    borderColor: Colors.black,\n    fontFamily: 'Inter_400Regular',\n    fontSize: 12,\n    borderRadius: 5\n  },\n  modal: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    alignSelf: 'center',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    width: 330,\n    height: 250\n  },\n  modal_view: {\n    width: 330,\n    height: 250\n  },\n  button_container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignSelf: 'center',\n    width: 200,\n    height: 50,\n    borderRadius: 10,\n    borderWidth: 0,\n    margin: 10\n  },\n  course_details: {\n    fontSize: 22,\n    flex: 1,\n    flexWrap: 'wrap',\n    fontFamily: 'Inter_800ExtraBold'\n  },\n  course_details_container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  loading: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(200, 200, 200, 0.2)'\n  },\n  dropdown: {\n    borderWidth: 1,\n    borderColor: Colors.black,\n    backgroundColor: 'transparent',\n    padding: 5,\n    marginHorizontal: 10,\n    width: 310,\n    alignSelf: 'center'\n  },\n  dropdown_text: {\n    fontFamily: 'Inter_400Regular',\n    fontSize: 12\n  },\n  dropdown_container: {\n    width: 310,\n    alignSelf: 'center'\n  },\n  category_name_container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-start'\n  },\n  category_check_container: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end'\n  },\n  dropdown_item: {\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    fontFamily: 'Inter_400Regular'\n  },\n  dropdown_tick: {\n    marginLeft: 10\n  },\n  dropdown_search_container: {\n    padding: 10,\n    borderBottomWidth: 0\n  },\n  dropdown_list_item_container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  }\n})\n\nexport default CourseDetails\n","import React, { useContext, useState } from 'react'\nimport { StyleSheet, View, Text, TextInput, Platform } from 'react-native'\nimport GradeUtil from '../gradebook/GradeUtil'\nimport AppContext from '../contexts/AppContext'\nimport { Colors } from '../colors/Colors'\nimport { MaterialIcons } from '@expo/vector-icons'\nimport { TouchableOpacity } from 'react-native-gesture-handler'\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\n\nfunction AssignmentComponent(props) {\n  const { marks, setMarks } = useContext(AppContext)\n  const [isDropdown, setIsDropdown] = useState(false)\n  const assignment = marks.courses\n    .get(props.course)\n    .assignments.find((a) => a.name === props.name)\n  const totalWeight = Array.from(\n    marks.courses.get(props.course).categories.values()\n  ).reduce((p, c) => (isNaN(c.value) ? p : p + c.weight), 0)\n  const [points, setPoints] = useState(\n    isNaN(assignment.points) ? '' : assignment.points.toString()\n  )\n  const [total, setTotal] = useState(\n    isNaN(assignment.total) ? '' : assignment.total.toString()\n  )\n  const score = (assignment.points / assignment.total) * 100\n  const hasScore = !isNaN((assignment.points / assignment.total) * 100)\n\n  const updatePoints = (input: string, type: string) => {\n    setMarks(\n      GradeUtil.updatePoints(\n        marks,\n        props.course,\n        assignment.name,\n        parseFloat(input),\n        type\n      )\n    )\n  }\n\n  const deleteAssignment = () => {\n    setMarks(GradeUtil.deleteAssignment(marks, props.course, assignment.name))\n  }\n\n  const getWidth = (n: number) => {\n    const min = 34\n    if (isNaN(n)) return min\n    return Math.max(n.toString().length * 15, min)\n  }\n\n  return (\n    <View\n      style={[\n        styles.container,\n        props.style,\n        hasScore\n          ? {\n              borderLeftColor: GradeUtil.calculateMarkColor(score),\n              borderLeftWidth: 3\n            }\n          : {}\n      ]}\n    >\n      <View style={[styles.horizontal_container, { height: 52 }]}>\n        <View style={styles.assignment_info_container}>\n          <Text\n            numberOfLines={1}\n            style={[\n              Platform.OS === 'web' ? styles.name_web : styles.name,\n              {\n                color: assignment.modified\n                  ? Colors.dark_middle_blue_green\n                  : Colors.navy\n              }\n            ]}\n          >\n            {props.name}\n          </Text>\n          <Text\n            numberOfLines={1}\n            style={\n              Platform.OS === 'web' ? styles.category_web : styles.category\n            }\n          >\n            {assignment.category} - {assignment.date.due.toLocaleDateString()}\n          </Text>\n        </View>\n        <View style={styles.input_container}>\n          <TextInput\n            value={points}\n            placeholder={'__'}\n            keyboardType={'decimal-pad'}\n            autoComplete={'off'}\n            style={[\n              styles.mark,\n              {\n                color: assignment.modified\n                  ? Colors.dark_middle_blue_green\n                  : Colors.black,\n                width: getWidth(assignment.points),\n                ...(Platform.OS === 'web' ? { outlineStyle: 'none' } : {})\n              }\n            ]}\n            onChangeText={(input) => {\n              if (GradeUtil.isNumber(input) || input === '') {\n                setPoints(input)\n                updatePoints(input, 'earned')\n              }\n            }}\n          />\n          <Text style={styles.dash}> / </Text>\n          <TextInput\n            value={total}\n            placeholder={'__'}\n            keyboardType={'decimal-pad'}\n            autoComplete={'off'}\n            style={[\n              styles.mark,\n              {\n                color: assignment.modified\n                  ? Colors.dark_middle_blue_green\n                  : Colors.black,\n                width: getWidth(assignment.total),\n                ...(Platform.OS === 'web' ? { outlineStyle: 'none' } : {})\n              }\n            ]}\n            onChangeText={(input) => {\n              if (GradeUtil.isNumber(input) || input === '') {\n                setTotal(input)\n                updatePoints(input, 'total')\n              }\n            }}\n          />\n        </View>\n        <TouchableOpacity onPress={() => setIsDropdown(!isDropdown)}>\n          <MaterialIcons\n            name={isDropdown ? 'arrow-drop-up' : 'arrow-drop-down'}\n            color={Colors.middle_blue_green}\n            size={36}\n            style={{ marginRight: 5 }}\n          />\n        </TouchableOpacity>\n      </View>\n      {isDropdown && (\n        <View style={styles.dropdown_container}>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Name:</Text>\n            <Text style={styles.dropdown_text_value}>{assignment.name}</Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Category:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {assignment.category}\n            </Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Effective Weight:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {GradeUtil.roundTo(\n                (marks.courses\n                  .get(props.course)\n                  .categories.get(assignment.category).weight /\n                  totalWeight) *\n                  100,\n                2\n              )}\n              %\n            </Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Weight:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {\n                marks.courses\n                  .get(props.course)\n                  .categories.get(assignment.category).weight\n              }\n              %\n            </Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Grade:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {hasScore\n                ? `${GradeUtil.roundTo(\n                    score,\n                    2\n                  )}% (${GradeUtil.calculateLetterGrade(score)})`\n                : 'N/A'}\n            </Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Status:</Text>\n            <Text style={styles.dropdown_text_value}>{assignment.status}</Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Due Date:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {assignment.date.due.toLocaleDateString()}\n            </Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Start Date:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {assignment.date.start.toLocaleDateString()}\n            </Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Notes:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {assignment.notes.length === 0 ? 'None' : assignment.notes}\n            </Text>\n          </View>\n          <FontAwesome.Button\n            name=\"trash-o\"\n            backgroundColor=\"transparent\"\n            iconStyle={{\n              color: Colors.red\n            }}\n            underlayColor=\"none\"\n            activeOpacity={0.5}\n            size={24}\n            onPress={() => deleteAssignment()}\n          ></FontAwesome.Button>\n        </View>\n      )}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.off_white,\n    borderRadius: 10,\n    marginLeft: 7,\n    marginRight: 7,\n    marginTop: 7,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: Colors.secondary\n  },\n  horizontal_container: {\n    flexDirection: 'row'\n  },\n  dropdown_container: {\n    padding: 10,\n    backgroundColor: Colors.off_white,\n    borderTopColor: Colors.onyx_gray,\n    borderTopWidth: 1\n  },\n  assignment_info_container: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    marginLeft: 7,\n    flex: 1\n  },\n  name_web: {\n    color: Colors.black,\n    fontFamily: 'Inter_700Bold',\n    fontSize: 14,\n    marginHorizontal: 7,\n    lineHeight: 14 * 0.75,\n    paddingBottom: 11 - 11 * 0.75,\n    textAlign: 'left'\n  },\n  category_web: {\n    color: Colors.black,\n    fontFamily: 'Inter_400Regular',\n    fontSize: 12,\n    marginHorizontal: 7,\n    lineHeight: 11 * 0.75,\n    paddingVertical: 2,\n    marginTop: 4,\n    textAlign: 'left'\n  },\n  name: {\n    color: Colors.black,\n    fontFamily: 'Inter_700Bold',\n    fontSize: 14,\n    marginHorizontal: 7,\n    lineHeight: 14 * 0.75,\n    paddingTop: 14 - 14 * 0.75,\n    textAlign: 'left'\n  },\n  category: {\n    color: Colors.black,\n    fontFamily: 'Inter_400Regular',\n    fontSize: 12,\n    marginHorizontal: 7,\n    lineHeight: 12 * 0.75,\n    marginTop: 4,\n    paddingTop: 12 - 12 * 0.75,\n    textAlign: 'left'\n  },\n  input_container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  mark: {\n    height: 60,\n    fontSize: 23,\n    fontFamily: 'Inter_600SemiBold',\n    alignSelf: 'center'\n  },\n  dash: {\n    fontSize: 20,\n    alignSelf: 'center',\n    textAlignVertical: 'center',\n    marginRight: 3\n  },\n  dropdown_text_name: {\n    marginHorizontal: 7,\n    fontFamily: 'Montserrat_600SemiBold',\n    fontSize: 12\n  },\n  dropdown_text_value: {\n    fontFamily: 'Inter_400Regular',\n    flex: 1,\n    fontSize: 12\n  }\n})\n\nexport default AssignmentComponent\n","import { Gradebook } from 'studentvue'\nimport { Colors } from '../colors/Colors'\nimport { Assignment, Category, Course, Marks } from '../interfaces/Gradebook'\n\nexport default class GradeUtil {\n  // Some course names have the course ID at the end, ex: AP History A (SOC49351)\n  static parseCourseName(name: string) {\n    return name.substring(0, name.lastIndexOf('(')).trim()\n  }\n\n  static convertGradebook(gradebook: Gradebook) {\n    let marks: Marks = {\n      gpa: 0,\n      courses: new Map<string, Course>(),\n      reportingPeriod: {\n        name: gradebook.reportingPeriod.current.name,\n        index: gradebook.reportingPeriod.current.index\n      },\n      reportingPeriods: gradebook.reportingPeriod.available.map((p) => {\n        return { name: p.name, index: p.index }\n      })\n    }\n    for (const course of gradebook.courses) {\n      marks.courses.set(course.title, {\n        name: course.title,\n        period:\n          gradebook.courses.findIndex((c) => c.title === course.title) + 1,\n        teacher: course.staff.name,\n        points: 0,\n        total: 0,\n        value: NaN,\n        assignments: [],\n        categories: new Map<string, Category>()\n      })\n      const c = marks.courses.get(course.title)\n      for (const category of course.marks[0].weightedCategories) {\n        if (category.type.toUpperCase() !== 'TOTAL') {\n          c.categories.set(category.type, {\n            name: category.type,\n            points: 0,\n            total: 0,\n            value: NaN,\n            weight: parseFloat(category.weight.standard)\n          })\n        }\n      }\n      for (const assignment of course.marks[0].assignments) {\n        const value = assignment.score.value\n        const points = this.parsePoints(assignment.points)\n        const a: Assignment = {\n          name: assignment.name,\n          category: assignment.type,\n          status:\n            value != 'Not Graded' && value != 'Not Due' ? 'Graded' : value,\n          notes: assignment.notes,\n          points: points[0],\n          total: points[1],\n          modified: false,\n          date: {\n            due: assignment.date.due,\n            start: assignment.date.start\n          }\n        }\n        c.assignments.push(a)\n      }\n    }\n    marks = this.calculatePoints(marks)\n    return new Promise((resolve) => {\n      resolve(marks)\n    })\n  }\n\n  static calculatePoints(marks: Marks) {\n    marks.gpa = 0\n    let numOfCourses = 0\n    for (const course of marks.courses.values()) {\n      ;(course.points = 0), (course.total = 0), (course.value = NaN)\n      for (const category of course.categories.values()) {\n        ;(category.points = 0), (category.total = 0), (category.value = NaN)\n      }\n      for (const assignment of course.assignments) {\n        const category = course.categories.get(assignment.category)\n        if (category && !isNaN(assignment.points) && !isNaN(assignment.total)) {\n          category.points += assignment.points\n          category.total += assignment.total\n          category.value = category.points / category.total\n        }\n      }\n      for (const category of course.categories.values()) {\n        if (!isNaN(category.value)) {\n          course.points += category.value * category.weight\n          course.total += category.weight\n        }\n      }\n      course.value = this.roundTo((course.points / course.total) * 100, 2)\n      if (!isNaN(course.value)) {\n        if (course.value >= 89.5) {\n          marks.gpa += 4\n        } else if (course.value >= 79.5) {\n          marks.gpa += 3\n        } else if (course.value >= 69.5) {\n          marks.gpa += 2\n        } else if (course.value >= 59.5) {\n          marks.gpa += 1\n        }\n        numOfCourses++\n      }\n    }\n    marks.gpa = this.roundTo(marks.gpa / numOfCourses, 2)\n    return marks\n  }\n\n  static parsePoints(points: string) {\n    const regex = /^(\\d+\\.?\\d*|\\.\\d+) \\/ (\\d+\\.?\\d*|\\.\\d+)$/\n    if (points.match(regex)) {\n      const p = points.split(regex)\n      return [parseFloat(p[1]), parseFloat(p[2])]\n    } else {\n      return [NaN, parseFloat(points)]\n    }\n  }\n\n  static roundTo(num: number, places: number) {\n    const multiplicator = Math.pow(10, places)\n    num = parseFloat((num * multiplicator).toFixed(11))\n    const test = Math.round(num) / multiplicator\n    return +test.toFixed(places)\n  }\n\n  static deleteAssignment(marks: Marks, course: string, assignment: string) {\n    const newMarks = Object.assign({}, marks)\n    newMarks.courses.get(course).assignments = newMarks.courses\n      .get(course)\n      .assignments.filter((a) => a.name !== assignment)\n    return GradeUtil.calculatePoints(newMarks)\n  }\n\n  static updatePoints(\n    marks: Marks,\n    course: string,\n    assignmentName: string,\n    points: number,\n    type: string\n  ) {\n    const newMarks = Object.assign({}, marks)\n    const assignment = newMarks.courses\n      .get(course)\n      .assignments.find((a) => a.name === assignmentName)\n    if (type === 'earned') {\n      assignment.points = points\n    } else if (type === 'total') {\n      assignment.total = points\n    }\n    assignment.modified = true\n    return GradeUtil.calculatePoints(newMarks)\n  }\n\n  static addAssignment(\n    marks: Marks,\n    course: Course,\n    assignment: string,\n    category: string,\n    points: number,\n    total: number\n  ) {\n    let name = assignment.length === 0 ? 'Assignment' : assignment\n    if (course.assignments.some((a) => a.name === name)) {\n      let indentifier = 2\n      while (course.assignments.some((a) => a.name === name + indentifier)) {\n        indentifier++\n      }\n      name = name + indentifier\n    }\n    course.assignments.unshift({\n      name: name,\n      category: category,\n      status: 'Graded',\n      notes: '',\n      points: points,\n      total: total,\n      modified: true,\n      date: {\n        due: new Date(),\n        start: new Date()\n      }\n    })\n    marks.courses.set(course.name, course)\n    const m = Object.assign({}, marks)\n    return GradeUtil.calculatePoints(m)\n  }\n\n  static calculateMarkColor(mark: number) {\n    switch (this.calculateLetterGrade(mark)) {\n      case 'A':\n        return '#10C212'\n      case 'B':\n        return '#1E2EE6'\n      case 'C':\n        return '#F5A327'\n      case 'D':\n        return '#C72222'\n      case 'E':\n        return '#330505'\n      case 'F':\n        return Colors.black\n    }\n  }\n\n  static calculateLetterGrade(mark: number) {\n    if (mark >= 89.5) {\n      return 'A'\n    } else if (mark >= 79.5) {\n      return 'B'\n    } else if (mark >= 69.5) {\n      return 'C'\n    } else if (mark >= 59.5) {\n      return 'D'\n    } else if (mark >= 49.5) {\n      return 'E'\n    } else {\n      return 'F'\n    }\n  }\n\n  static isNumber(input: string) {\n    return /^[0-9.]+$/g.test(input)\n  }\n}\n","import React, { useContext, useState, useEffect } from 'react'\nimport AppContext from '../contexts/AppContext'\nimport {\n  SafeAreaView,\n  StyleSheet,\n  View,\n  Text,\n  ActivityIndicator,\n  Platform\n} from 'react-native'\nimport { FlatList, TouchableOpacity } from 'react-native-gesture-handler'\nimport CourseComponent from '../components/Course'\nimport DropDownPicker from 'react-native-dropdown-picker'\nimport GradeUtil from '../gradebook/GradeUtil'\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\nimport { showMessage } from 'react-native-flash-message'\nimport { Colors } from '../colors/Colors'\nimport AwesomeAlert from 'react-native-awesome-alerts'\nimport Constants from 'expo-constants'\n\nconst Courses = ({ navigation }) => {\n  const { client, marks, setMarks } = useContext(AppContext)\n  const [open, setOpen] = useState(false)\n  const [value, setValue] = useState(marks.reportingPeriod.index)\n  const [periods, setPeriods] = useState(\n    marks.reportingPeriods.map((p) => {\n      return { label: p.name, value: p.index }\n    })\n  )\n  const [isLoading, setIsLoading] = useState(false)\n  const [showAlert, setShowAlert] = useState(false)\n  const [errorMessage, setErrorMessage] = useState()\n\n  useEffect(() => {\n    setIsLoading(true)\n    let isSubscribed = true\n    const getGradebook = async () => {\n      try {\n        const marks = await GradeUtil.convertGradebook(\n          await client.gradebook(value)\n        )\n        if (isSubscribed) {\n          setMarks(marks)\n        }\n      } catch (err) {\n        setErrorMessage(err.message)\n        setShowAlert(true)\n      }\n    }\n    getGradebook()\n    setIsLoading(false)\n    return () => {\n      isSubscribed = false\n    }\n  }, [value])\n\n  const refreshMarks = async () => {\n    setIsLoading(true)\n    try {\n      const gradebook = await client.gradebook(value)\n      const newMarks = await GradeUtil.convertGradebook(gradebook)\n      setMarks(newMarks)\n    } catch (err) {\n      setErrorMessage(err.message)\n      setShowAlert(true)\n      setIsLoading(false)\n      return\n    }\n    showMessage({\n      message: 'Gradebook refreshed',\n      type: 'info',\n      icon: 'success'\n    })\n    setIsLoading(false)\n  }\n\n  return (\n    <>\n      <SafeAreaView\n        style={{ flex: 1 }}\n        pointerEvents={isLoading ? 'none' : 'auto'}\n      >\n        <DropDownPicker\n          open={open}\n          value={value}\n          items={periods}\n          setOpen={setOpen}\n          setValue={setValue}\n          setItems={setPeriods}\n          maxHeight={null}\n          style={styles.dropdown}\n          textStyle={styles.dropdown_text}\n          renderListItem={(props) => {\n            return (\n              <TouchableOpacity\n                {...props}\n                style={[\n                  props.listItemContainerStyle,\n                  {\n                    backgroundColor: props.isSelected && Colors.light_gray\n                  }\n                ]}\n                onPress={() => {\n                  setValue(props.value)\n                  setOpen(false)\n                }}\n              >\n                <View style={styles.district_name_container}>\n                  <Text numberOfLines={1} style={props.listItemLabelStyle}>\n                    {props.label}\n                  </Text>\n                </View>\n              </TouchableOpacity>\n            )\n          }}\n        ></DropDownPicker>\n        <View style={styles.row_container}>\n          {!isNaN(marks.gpa) && (\n            <View style={styles.gpa_container}>\n              <Text style={styles.gpa}>{marks.gpa} GPA</Text>\n            </View>\n          )}\n          <View style={styles.refresh_button_container}>\n            <FontAwesome.Button\n              name=\"refresh\"\n              backgroundColor=\"transparent\"\n              iconStyle={{\n                color: Colors.secondary\n              }}\n              underlayColor=\"none\"\n              activeOpacity={0.5}\n              size={24}\n              onPress={() => refreshMarks()}\n            ></FontAwesome.Button>\n          </View>\n        </View>\n        {marks && (\n          <FlatList\n            data={[...marks.courses.entries()]}\n            renderItem={({ item }) => (\n              <TouchableOpacity\n                onPress={() =>\n                  navigation.navigate('Course Details', { title: item[0] })\n                }\n              >\n                <CourseComponent\n                  name={GradeUtil.parseCourseName(item[0])}\n                  mark={item[1].value}\n                  period={item[1].period}\n                  teacher={item[1].teacher}\n                ></CourseComponent>\n              </TouchableOpacity>\n            )}\n            keyExtractor={(item) => item[0]}\n          />\n        )}\n      </SafeAreaView>\n      {isLoading && (\n        <SafeAreaView style={styles.loading}>\n          <ActivityIndicator size={'large'} />\n        </SafeAreaView>\n      )}\n      <AwesomeAlert\n        show={showAlert}\n        showProgress={false}\n        title={'Error'}\n        message={errorMessage}\n        closeOnTouchOutside={true}\n        closeOnHardwareBackPress={true}\n        showCancelButton={false}\n        showConfirmButton={true}\n        confirmText={'Ok'}\n        confirmButtonColor={Colors.primary}\n        confirmButtonTextStyle={{ color: Colors.black }}\n        onConfirmPressed={() => {\n          setShowAlert(false)\n        }}\n      ></AwesomeAlert>\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  // android status bar not accounted for properly in safeview + dropdownpicker\n  // web needs to be shifted 11 right\n  dropdown: {\n    borderWidth: 0,\n    height: 30,\n    marginBottom: 15,\n    marginTop: Platform.OS === 'android' ? Constants.statusBarHeight : 0,\n    backgroundColor: 'transparent'\n  },\n  dropdown_text: {\n    fontFamily: 'Inter_800ExtraBold',\n    fontSize: 30\n  },\n  district_name_container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-start'\n  },\n  row_container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  gpa_container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-start'\n  },\n  gpa: {\n    marginLeft: 11,\n    fontFamily: 'Montserrat_700Bold',\n    fontSize: 22\n  },\n  refresh_button_container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  loading: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(200, 200, 200, 0.2)'\n  }\n})\n\nexport default Courses\n","import React from 'react'\nimport { StyleSheet, View, Text, Platform } from 'react-native'\nimport { Colors } from '../colors/Colors'\nimport GradeUtil from '../gradebook/GradeUtil'\n\nfunction CourseComponent(props) {\n  const mark = parseFloat(props.mark)\n\n  return (\n    <View style={[styles.container, props.style]}>\n      <Text style={styles.period_number}>\n        {('0' + props.period).slice(-2)}\n      </Text>\n      <View style={styles.course_info_container}>\n        <Text\n          numberOfLines={1}\n          style={Platform.OS === 'web' ? styles.name_web : styles.name}\n        >\n          {props.name}\n        </Text>\n        <Text\n          numberOfLines={1}\n          style={Platform.OS === 'web' ? styles.teacher_web : styles.teacher}\n        >\n          {props.teacher}\n        </Text>\n      </View>\n      <Text style={[styles.mark]}>\n        {isNaN(parseFloat(props.mark)) ? 'N/A' : props.mark}\n      </Text>\n      {!isNaN(parseFloat(props.mark)) && (\n        <Text\n          style={[\n            styles.letter_grade,\n            {\n              color: GradeUtil.calculateMarkColor(mark)\n            }\n          ]}\n        >\n          {GradeUtil.calculateLetterGrade(mark)}\n        </Text>\n      )}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.off_white,\n    borderRadius: 15,\n    height: 55,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginHorizontal: 7,\n    marginTop: 10,\n    padding: 10,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: Colors.secondary\n  },\n  period_number: {\n    fontFamily: 'Montserrat_800ExtraBold',\n    fontSize: 32\n  },\n  course_info_container: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    marginHorizontal: 7,\n    flex: 1\n  },\n  name_web: {\n    color: Colors.navy,\n    fontFamily: 'Montserrat_700Bold',\n    fontSize: 18,\n    marginRight: 14,\n    marginLeft: 7,\n    lineHeight: 18 * 0.75,\n    textAlign: 'left',\n    paddingBottom: 12 - 12 * 0.75\n  },\n  teacher_web: {\n    color: Colors.black,\n    fontFamily: 'Inter_400Regular',\n    fontSize: 12,\n    marginRight: 14,\n    marginLeft: 7,\n    lineHeight: 12 * 0.75,\n    paddingBottom: 2,\n    marginTop: 4,\n    textAlign: 'left'\n  },\n  name: {\n    color: Colors.navy,\n    fontFamily: 'Montserrat_700Bold',\n    fontSize: 18,\n    marginRight: 14,\n    marginLeft: 7,\n    lineHeight: 18 * 0.75,\n    paddingTop: 18 - 18 * 0.75,\n    textAlign: 'left'\n  },\n  teacher: {\n    color: Colors.black,\n    fontFamily: 'Inter_400Regular',\n    fontSize: 12,\n    marginRight: 14,\n    marginLeft: 7,\n    lineHeight: 12 * 0.75,\n    paddingTop: 12 - 12 * 0.75,\n    marginTop: 4,\n    textAlign: 'left'\n  },\n  mark: {\n    fontFamily: 'Montserrat_500Medium',\n    fontSize: 28,\n    alignSelf: 'center'\n  },\n  letter_grade: {\n    marginLeft: 7,\n    fontFamily: 'Montserrat_800ExtraBold',\n    fontSize: 32,\n    alignSelf: 'center'\n  }\n})\n\nexport default CourseComponent\n","import React from 'react'\n\ninterface CourseName {\n  courseHeader: string\n  setCourse: React.Dispatch<React.SetStateAction<string>>\n}\n\nconst GradeContext = React.createContext<CourseName>(null)\n\nexport default GradeContext\n","import React, { useContext, useState } from 'react'\nimport { ActivityIndicator, Image, StyleSheet, View, Text } from 'react-native'\nimport { StudentInfo } from 'studentvue'\nimport { Colors } from '../colors/Colors'\nimport AppContext from '../contexts/AppContext'\nimport { FontAwesome } from '@expo/vector-icons'\nimport { Feather } from '@expo/vector-icons'\n\nconst Profile = () => {\n  const { client } = useContext(AppContext)\n  const [studentInfo, setStudentInfo] = useState(undefined as StudentInfo)\n\n  const fetchStudentInfo = async () => {\n    setStudentInfo(await client.studentInfo())\n  }\n  if (!studentInfo) fetchStudentInfo()\n\n  return (\n    <View style={{ flex: 1 }}>\n      {!studentInfo ? (\n        <ActivityIndicator\n          color={Colors.secondary}\n          animating={true}\n          size=\"large\"\n          style={{\n            alignSelf: 'center',\n            flex: 1,\n            justifyContent: 'center'\n          }}\n        />\n      ) : (\n        <View>\n          <View style={styles.header}></View>\n          <Image\n            style={styles.avatar}\n            source={{\n              uri: `data:image/png;base64,${studentInfo.photo}`\n            }}\n          />\n          <Text style={styles.name}>{studentInfo.student.name}</Text>\n          <View style={styles.description_container}>\n            <View style={styles.description_part_container}>\n              <Text style={styles.description_part_text}>\n                {studentInfo.grade + suffix(parseInt(studentInfo.grade))}\n              </Text>\n              <FontAwesome\n                name=\"graduation-cap\"\n                size={18}\n                color={Colors.black}\n              />\n            </View>\n            <View style={styles.description_part_container}>\n              <Text style={styles.description_part_text}>\n                {studentInfo.birthDate.toLocaleDateString()}\n              </Text>\n              <FontAwesome\n                name=\"birthday-cake\"\n                size={18}\n                color={Colors.black}\n              />\n            </View>\n          </View>\n          <View style={styles.property_container}>\n            <Feather name=\"phone\" size={26} color={Colors.black} />\n            <Text style={styles.property_text}>{studentInfo.phone}</Text>\n          </View>\n          <View style={styles.property_container}>\n            <Feather name=\"mail\" size={26} color={Colors.black} />\n            <Text style={styles.property_text}>{studentInfo.email}</Text>\n          </View>\n          <View style={styles.property_container}>\n            <Feather name=\"map-pin\" size={26} color={Colors.black} />\n            <Text style={styles.property_text}>{studentInfo.address}</Text>\n          </View>\n          <View style={styles.property_container}>\n            <FontAwesome name=\"building-o\" size={26} color={Colors.black} />\n            <Text style={styles.property_text}>\n              {studentInfo.currentSchool}\n            </Text>\n          </View>\n        </View>\n      )}\n    </View>\n  )\n}\n\nconst suffix = (num: number) => {\n  const j = num % 10,\n    k = num % 100\n  if (j === 1 && k !== 11) {\n    return 'st'\n  }\n  if (j === 2 && k !== 12) {\n    return 'nd'\n  }\n  if (j === 3 && k !== 13) {\n    return 'rd'\n  }\n  return 'th'\n}\n\nconst styles = StyleSheet.create({\n  header: {\n    height: 150,\n    backgroundColor: Colors.primary\n  },\n  name: {\n    fontSize: 24,\n    fontFamily: 'Montserrat_700Bold',\n    alignSelf: 'center',\n    marginTop: 10\n  },\n  avatar: {\n    width: 130,\n    height: 130,\n    borderRadius: 130 / 2,\n    borderWidth: 4,\n    borderColor: 'white',\n    alignSelf: 'center',\n    marginTop: -130 / 2\n  },\n  description_container: {\n    marginTop: 10,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    borderColor: Colors.secondary,\n    borderWidth: 1\n  },\n  description_part_container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 10\n  },\n  description_part_text: {\n    marginTop: 5,\n    fontSize: 22,\n    fontFamily: 'Montserrat_800ExtraBold'\n  },\n  property_container: {\n    flexDirection: 'row',\n    padding: 12\n  },\n  property_text: {\n    marginHorizontal: 8,\n    fontFamily: 'Inter_400Regular',\n    fontSize: 18,\n    color: Colors.onyx_gray\n  }\n})\n\nexport default Profile\n","import React, { useContext, useState } from 'react'\nimport { SafeAreaView } from 'react-native-safe-area-context'\nimport AppContext from '../contexts/AppContext'\nimport * as Sharing from 'expo-sharing'\nimport * as FileSystem from 'expo-file-system'\nimport {\n  ActivityIndicator,\n  FlatList,\n  Platform,\n  StyleSheet,\n  Text,\n  View\n} from 'react-native'\nimport Document from 'studentvue/StudentVue/Document/Document'\nimport DocumentComponent from '../components/Document'\nimport { TouchableOpacity } from 'react-native-gesture-handler'\nimport { Colors } from '../colors/Colors'\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\nimport { showMessage } from 'react-native-flash-message'\nimport AwesomeAlert from 'react-native-awesome-alerts'\n\nconst Documents = () => {\n  const { client } = useContext(AppContext)\n  const [documents, setDocuments] = useState(undefined as Document[])\n  const [isLoading, setIsLoading] = useState(false)\n  const [showAlert, setShowAlert] = useState(false)\n  const [errorMessage, setErrorMessage] = useState()\n\n  const fetchDocuments = async () => {\n    setIsLoading(true)\n    try {\n      setDocuments(await client.documents())\n    } catch (err) {\n      setErrorMessage(err.message)\n      setShowAlert(true)\n    }\n    setIsLoading(false)\n  }\n  if (!documents && !isLoading) fetchDocuments()\n\n  const base64toBlob = (base64: string, sliceSize = 512) => {\n    const byteCharacters = window.atob(base64)\n    const byteArrays = []\n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n      const slice = byteCharacters.slice(offset, offset + sliceSize)\n      const byteNumbers = new Array(slice.length)\n      for (let i = 0; i < slice.length; i++) {\n        byteNumbers[i] = slice.charCodeAt(i)\n      }\n      byteArrays.push(new Uint8Array(byteNumbers))\n    }\n    return new Blob(byteArrays)\n  }\n\n  const downloadDocument = async (document: Document) => {\n    const file = (await document.get())[0]\n    const fileName =\n      document.comment.replace(/ /g, '_') +\n      file.file.name.substring(file.file.name.lastIndexOf('.'))\n    if (Platform.OS === 'android' || Platform.OS === 'ios') {\n      const filePath = FileSystem.documentDirectory + fileName\n      try {\n        await FileSystem.writeAsStringAsync(filePath, file.base64, {\n          encoding: 'base64'\n        })\n        await Sharing.shareAsync(filePath)\n      } catch (e) {}\n    } else {\n      require('file-saver').saveAs(base64toBlob(file.base64), fileName)\n    }\n  }\n\n  return (\n    <>\n      <SafeAreaView\n        style={{ flex: 1 }}\n        pointerEvents={isLoading ? 'none' : 'auto'}\n      >\n        <View style={styles.row_container}>\n          <View style={styles.title_container}>\n            <Text style={styles.title}>Documents</Text>\n          </View>\n          <View style={styles.refresh_button_container}>\n            <FontAwesome.Button\n              name=\"refresh\"\n              backgroundColor=\"transparent\"\n              iconStyle={{\n                color: Colors.secondary\n              }}\n              underlayColor=\"none\"\n              activeOpacity={0.5}\n              size={24}\n              onPress={async () => {\n                try {\n                  setDocuments(await client.documents())\n                  showMessage({\n                    message: 'Refreshed',\n                    type: 'info',\n                    icon: 'success'\n                  })\n                } catch (err) {\n                  setErrorMessage(err.message)\n                  setShowAlert(true)\n                }\n              }}\n            ></FontAwesome.Button>\n          </View>\n        </View>\n        {documents && (\n          <FlatList\n            data={documents}\n            renderItem={({ item }) => (\n              <TouchableOpacity\n                onPress={() => {\n                  downloadDocument(item)\n                }}\n              >\n                <DocumentComponent\n                  name={(item as Document).comment}\n                  type={(item as Document).file.type}\n                  date={(item as Document).file.date.toLocaleDateString()}\n                ></DocumentComponent>\n              </TouchableOpacity>\n            )}\n            keyExtractor={(item) => (item as Document).documentGu}\n          ></FlatList>\n        )}\n      </SafeAreaView>\n      {isLoading && (\n        <SafeAreaView style={styles.loading}>\n          <ActivityIndicator size={'large'} />\n        </SafeAreaView>\n      )}\n      <AwesomeAlert\n        show={showAlert}\n        showProgress={false}\n        title={'Error'}\n        message={errorMessage}\n        closeOnTouchOutside={true}\n        closeOnHardwareBackPress={true}\n        showCancelButton={false}\n        showConfirmButton={true}\n        confirmText={'Ok'}\n        confirmButtonColor={Colors.primary}\n        confirmButtonTextStyle={{ color: Colors.black }}\n        onConfirmPressed={() => {\n          setShowAlert(false)\n        }}\n      ></AwesomeAlert>\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  row_container: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  title_container: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    width: '75%'\n  },\n  title: {\n    fontFamily: 'Inter_800ExtraBold',\n    fontSize: 30,\n    marginHorizontal: 11\n  },\n  refresh_button_container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  loading: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(200, 200, 200, 0.2)'\n  }\n})\n\nexport default Documents\n","import React from 'react'\nimport { StyleSheet, View, Text } from 'react-native'\nimport { Colors } from '../colors/Colors'\n\nfunction DocumentComponent(props) {\n  return (\n    <View style={[styles.container, props.style]}>\n      <View style={styles.doc_info_container}>\n        <Text numberOfLines={1} style={styles.name}>\n          {props.name}\n        </Text>\n        <View style={styles.info_container}>\n          <Text numberOfLines={1} style={[styles.type]}>\n            {props.type}\n          </Text>\n          <Text numberOfLines={1} style={styles.date}>\n            {props.date}\n          </Text>\n        </View>\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.off_white,\n    borderRadius: 10,\n    height: 50,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginHorizontal: 7,\n    marginTop: 7,\n    padding: 7,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: Colors.secondary\n  },\n  doc_info_container: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    flex: 1,\n    marginHorizontal: 4\n  },\n  info_container: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    flex: 1\n  },\n  name: {\n    color: Colors.black,\n    fontFamily: 'Montserrat_600SemiBold',\n    fontSize: 16,\n    lineHeight: 16 * 0.75,\n    paddingTop: 16 - 16 * 0.75,\n    textAlign: 'left'\n  },\n  type: {\n    color: Colors.black,\n    fontFamily: 'Inter_300Light',\n    fontSize: 12,\n    flex: 1,\n    lineHeight: 12 * 0.75,\n    paddingTop: 12 - 12 * 0.75,\n    marginTop: 4,\n    textAlign: 'left'\n  },\n  date: {\n    color: Colors.black,\n    fontFamily: 'Inter_400Regular',\n    fontSize: 12,\n    lineHeight: 12 * 0.75,\n    paddingTop: 12 - 12 * 0.75,\n    marginTop: 4,\n    textAlign: 'left'\n  }\n})\n\nexport default DocumentComponent\n"],"sourceRoot":""}
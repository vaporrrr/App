{"version":3,"sources":["components/CustomButton.tsx","components/Login.tsx","contexts/AppContext.tsx","colors/Colors.ts","gradebook/GradeUtil.ts","components/District.tsx","screens/Login.tsx","components/Assignment.tsx","screens/CourseDetails.tsx","components/Course.tsx","screens/Courses.tsx","contexts/GradeContext.tsx","screens/Grades.tsx","screens/Settings.tsx","screens/Profile.tsx","components/Document.tsx","screens/Documents.tsx","navigation/BottomNavigation.tsx","theme/LightTheme.ts","Notification.tsx","App.tsx","assets/mountainbackground.png"],"names":["styles","StyleSheet","create","buttonText","fontSize","textAlign","CustomButton","onPress","text","backgroundColor","textColor","fontFamily","containerStyle","disabled","TouchableOpacity","style","activeOpacity","View","Text","color","container","flex","alignItems","alignSelf","justifyContent","marginTop","LoginView","children","Platform","select","web","ios","KeyboardAvoidingView","behavior","android","AppContext","React","createContext","Colors","Dimensions","get","parseCourseName","width","height","name","substring","lastIndexOf","trim","convertGradebook","gradebook","marks","gpa","courses","Map","reportingPeriod","current","reportingPeriods","available","course","set","title","period","findIndex","c","teacher","staff","points","total","value","NaN","assignments","categories","length","category","weightedCategories","type","toUpperCase","weight","parseFloat","standard","assignment","score","parsePoints","a","status","notes","modified","date","due","start","push","calculatePoints","Promise","resolve","numOfCourses","values","isNaN","roundTo","regex","match","p","split","num","places","multiplicator","Math","pow","toFixed","round","calculateMarkColor","mark","calculateLetterGrade","isNumber","input","test","suffix","j","k","dateDiffInDays","b","utc1","Date","UTC","getFullYear","getMonth","getDate","utc2","floor","district_name_container","flexDirection","memo","props","listItemContainerStyle","isSelected","numberOfLines","listItemLabelStyle","label","Login","navigation","useNavigation","refInput","useRef","useContext","username","password","setUsername","setPassword","setClient","setMarks","useState","isLoading","setIsLoading","isChecked","setToggleCheckBox","showAlert","setShowAlert","undefined","errorMessage","setErrorMessage","firstLaunch","setFirstLaunch","isModalVisible","setModalVisible","useCookies","cookies","setCookie","removeCookie","open","setOpen","setValue","require","map","d","list","setList","getValueFor","client","StudentVue","login","find","parentVueUrl","err","alert","message","navigate","save","remove","openInstagram","OS","appUrl","Linking","canOpenURL","openURL","key","path","SecureStore","useAsyncEffect","savedCredentials","backHandler","BackHandler","addEventListener","exitApp","isVisible","coverScreen","onBackdropPress","animationIn","animationOut","modal","modal_view","security_modal","FontAwesome","Button","iconStyle","underlayColor","size","ImageBackground","source","resizeMode","horizontal_container","mountain","FontAwesome5","description","login_info_container","security","login_info","TextInput","defaultValue","onChangeText","u","placeholder","returnKeyType","onSubmitEditing","focus","blurOnSubmit","secureTextEntry","ref","searchable","items","setItems","dropDownDirection","dropdown","textStyle","dropdown_text","dropdown_container","listMode","translation","SEARCH_PLACEHOLDER","PLACEHOLDER","NOTHING_TO_SHOW","tickIconStyle","dropdown_tick","dropdown_item","searchContainerStyle","dropdown_search_container","searchTextInputStyle","dropdown_search_text","dropdown_list_item_container","renderListItem","checkbox_container","BouncyCheckbox","fillColor","unfillColor","disableText","innerIconStyle","borderWidth","borderColor","disableBuiltInState","save_text","onLogin","button_container","ActivityIndicator","animating","marginBottom","row_container","insta_button_container","insta_button","insta_text","show","showProgress","closeOnTouchOutside","closeOnHardwareBackPress","showCancelButton","showConfirmButton","confirmText","confirmButtonColor","confirmButtonTextStyle","onConfirmPressed","borderRadius","padding","marginLeft","paddingHorizontal","paddingVertical","borderBottomWidth","loading","margin","position","marginHorizontal","marginVertical","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","paddingTop","assignment_info_container","lineHeight","paddingBottom","default","input_container","marginRight","outlineStyle","dash","textAlignVertical","dropdown_text_name","dropdown_text_value","Assignment","courseName","isDropdown","setIsDropdown","pointsString","toString","totalString","totalWeight","Array","from","reduce","hasScore","update","assignmentName","newMarks","Object","assign","updatePoints","getWidth","n","max","useEffect","borderLeftWidth","toLocaleDateString","keyboardType","autoComplete","filter","deleteAssignment","transition","Sequence","Change","In","durationMs","Out","course_name","flexWrap","course_name_container","Constants","statusBarHeight","category_name_container","course_mark_container","course_mark","CourseDetails","route","params","refInput2","next","setCategory","setCategories","setAssignmentName","setPoints","setTotal","refreshing","setRefreshing","onRefresh","useCallback","index","goBack","toggleModal","SafeAreaView","Transitioning","borderTopLeftRadius","borderTopRightRadius","borderTopWidth","borderEndWidth","borderStartWidth","ScrollView","refreshControl","RefreshControl","contentContainerStyle","flexGrow","item","animateNextTransition","t","maxHeight","some","indentifier","unshift","m","addAssignment","period_number","course_info_container","letter_grade","Course","slice","marking_period_container","gpa_container","refresh_button_container","Courses","periods","setPeriods","labelProps","end","FlatList","data","entries","renderItem","keyExtractor","GradeContext","Stack","createNativeStackNavigator","StackNavigator","setCourse","Provider","courseHeader","Navigator","Screen","component","options","headerShown","Settings","Profile","studentInfo","setStudentInfo","schoolInfo","setSchoolInfo","Ionicons","avatar_info_container","Image","avatar","uri","photo","info_container","student","details_container","detaiL_container","detail_value","grade","parseInt","detail_name","birthDate","content_container","property_view","id","property_container","AntDesign","property_text","phone","Feather","email","address","currentSchool","school","homeRoom","counselor","principal","MaterialCommunityIcons","createStackNavigator","ProfileNav","Doc","title_container","Documents","documents","setDocuments","downloadDocument","document","file","fileName","comment","replace","saveAs","base64","sliceSize","byteCharacters","window","atob","byteArrays","offset","byteNumbers","i","charCodeAt","Uint8Array","Blob","base64toBlob","filePath","FileSystem","encoding","Sharing","e","documentGu","Tab","createBottomTabNavigator","App","screenOptions","tabBarShowLabel","tabBarStyle","overflow","Grades","tabBarIcon","tabInfo","focused","MaterialIcons","LightTheme","dark","colors","primary","background","card","border","notification","registerForPushNotificationsAsync","Notifications","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","importance","DEFAULT","vibrationPattern","lightColor","existingStatus","finalStatus","scheduleGradeCheck","identifier","strings","gradeCheck","content","body","random","trigger","repeats","hour","minute","user","useFonts","Inter_100Thin","Inter_200ExtraLight","Inter_300Light","Inter_400Regular","Inter_500Medium","Inter_600SemiBold","Inter_700Bold","Inter_800ExtraBold","Inter_900Black","Montserrat_100Thin","Montserrat_200ExtraLight","Montserrat_300Light","Montserrat_400Regular","Montserrat_500Medium","Montserrat_600SemiBold","Montserrat_700Bold","Montserrat_800ExtraBold","Montserrat_900Black","Montserrat_100Thin_Italic","Montserrat_200ExtraLight_Italic","Montserrat_300Light_Italic","Montserrat_400Regular_Italic","Montserrat_500Medium_Italic","Montserrat_600SemiBold_Italic","Montserrat_700Bold_Italic","Montserrat_800ExtraBold_Italic","Montserrat_900Black_Italic","RussoOne_400Regular","CookiesProvider","NavigationContainer","theme","BottomNavigation","module","exports"],"mappings":"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","file":"static/js/app.6b2008b4.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  StyleProp,\n  ViewStyle\n} from 'react-native'\n\ntype Props = {\n  onPress: any\n  text: string\n  backgroundColor: string\n  textColor: string\n  fontFamily: string\n  containerStyle: StyleProp<ViewStyle>\n  disabled: boolean\n}\n\nconst CustomButton: React.FC<Props> = ({\n  onPress,\n  text,\n  backgroundColor,\n  textColor,\n  fontFamily,\n  containerStyle,\n  disabled\n}: Props) => {\n  return (\n    <TouchableOpacity\n      onPress={onPress}\n      style={[containerStyle, { backgroundColor: backgroundColor }]}\n      disabled={disabled}\n      activeOpacity={0.2}\n    >\n      <View>\n        <Text\n          style={[\n            styles.buttonText,\n            { color: textColor, fontFamily: fontFamily }\n          ]}\n        >\n          {text}\n        </Text>\n      </View>\n    </TouchableOpacity>\n  )\n}\n\nconst styles = StyleSheet.create({\n  buttonText: {\n    fontSize: 20,\n    textAlign: 'center'\n  }\n})\n\nexport default CustomButton\n","import React from 'react'\nimport { KeyboardAvoidingView, Platform, StyleSheet, View } from 'react-native'\n\nconst LoginView = ({ children }) =>\n  Platform.select({\n    web: () => <View style={styles.container}>{children}</View>,\n    ios: () => (\n      <KeyboardAvoidingView style={styles.container} behavior={'padding'}>\n        {children}\n      </KeyboardAvoidingView>\n    ),\n    android: () => (\n      <KeyboardAvoidingView style={styles.container} behavior={'height'}>\n        {children}\n      </KeyboardAvoidingView>\n    )\n  })()\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    alignSelf: 'center',\n    justifyContent: 'center',\n    marginTop: 10\n  }\n})\n\nexport default LoginView\n","import React from 'react'\nimport { User } from '../interfaces/User'\n\nconst AppContext = React.createContext<User>(null)\n\nexport default AppContext\n","export const Colors = {\n  primary: '#FEF156',\n  secondary: '#AEAC99',\n  accent: '#00F1EE',\n  middle_blue_green: '#83C5BE',\n  dark_middle_blue_green: '#298980',\n  alice_blue: '#EDF6F9',\n  onyx_gray: '#454545',\n  corn_silk_white: '#FEFAE0',\n  white: '#FFFFFF',\n  black: '#001219',\n  red: '#A30800',\n  off_white: '#F5F5F5',\n  light_gray: '#E4E4E4',\n  navy: '#000080'\n}\n","import { Gradebook } from 'studentvue'\nimport { Colors } from '../colors/Colors'\nimport { Assignment, Category, Course, Marks } from '../interfaces/Gradebook'\nimport { Dimensions, Platform, PixelRatio } from 'react-native'\n\nconst { width: SCREEN_WIDTH, height: SCREEN_HEIGHT } = Dimensions.get('window')\n\nconst scale = SCREEN_WIDTH / 320\n\nconst normalize = (size: number): number => {\n  const newSize = size * scale\n  if (Platform.OS === 'ios') {\n    return Math.round(PixelRatio.roundToNearestPixel(newSize))\n  } else {\n    return Math.round(PixelRatio.roundToNearestPixel(newSize)) - 2\n  }\n}\n\n// Some course names have the course ID at the end, ex: AP History A (SOC49351)\nconst parseCourseName = (name: string): string => {\n  return name.substring(0, name.lastIndexOf('(')).trim()\n}\n\nconst convertGradebook = (gradebook: Gradebook): Promise<Marks> => {\n  let marks: Marks = {\n    gpa: 0,\n    courses: new Map<string, Course>(),\n    reportingPeriod: gradebook.reportingPeriod.current,\n    reportingPeriods: gradebook.reportingPeriod.available\n  }\n  for (const course of gradebook.courses) {\n    marks.courses.set(course.title, {\n      name: course.title,\n      period: gradebook.courses.findIndex((c) => c.title === course.title) + 1,\n      teacher: course.staff.name,\n      points: 0,\n      total: 0,\n      value: NaN,\n      assignments: [],\n      categories: new Map<string, Category>()\n    })\n    const c = marks.courses.get(course.title)\n    if (course.marks.length > 0) {\n      for (const category of course.marks[0].weightedCategories) {\n        if (category.type.toUpperCase() !== 'TOTAL') {\n          c.categories.set(category.type, {\n            name: category.type,\n            points: 0,\n            total: 0,\n            value: NaN,\n            weight: parseFloat(category.weight.standard)\n          })\n        }\n      }\n      for (const assignment of course.marks[0].assignments) {\n        const value = assignment.score.value\n        const points = parsePoints(assignment.points)\n        const a: Assignment = {\n          name: assignment.name,\n          category: assignment.type,\n          status:\n            value != 'Not Graded' && value != 'Not Due' ? 'Graded' : value,\n          notes: assignment.notes,\n          points: points[0],\n          total: points[1],\n          modified: false,\n          date: {\n            due: assignment.date.due,\n            start: assignment.date.start\n          }\n        }\n        c.assignments.push(a)\n      }\n    }\n  }\n  marks = calculatePoints(marks)\n  return new Promise((resolve) => {\n    resolve(marks)\n  })\n}\n\nconst calculatePoints = (marks: Marks): Marks => {\n  marks.gpa = 0\n  let numOfCourses = 0\n  for (const course of marks.courses.values()) {\n    ;(course.points = 0), (course.total = 0), (course.value = NaN)\n    for (const category of course.categories.values()) {\n      ;(category.points = 0), (category.total = 0), (category.value = NaN)\n    }\n    for (const assignment of course.assignments) {\n      const category = course.categories.get(assignment.category)\n      if (category && !isNaN(assignment.points) && !isNaN(assignment.total)) {\n        category.points += assignment.points\n        category.total += assignment.total\n        category.value = category.points / category.total\n      }\n    }\n    for (const category of course.categories.values()) {\n      if (!isNaN(category.value)) {\n        course.points += category.value * category.weight\n        course.total += category.weight\n      }\n    }\n    course.value = roundTo((course.points / course.total) * 100, 2)\n    if (!isNaN(course.value)) {\n      if (course.value >= 89.5) {\n        marks.gpa += 4\n      } else if (course.value >= 79.5) {\n        marks.gpa += 3\n      } else if (course.value >= 69.5) {\n        marks.gpa += 2\n      } else if (course.value >= 59.5) {\n        marks.gpa += 1\n      }\n      numOfCourses++\n    }\n  }\n  marks.gpa = roundTo(marks.gpa / numOfCourses, 2)\n  return marks\n}\n\nconst parsePoints = (points: string): number[] => {\n  const regex = /^(\\d+\\.?\\d*|\\.\\d+) \\/ (\\d+\\.?\\d*|\\.\\d+)$/\n  if (points.match(regex)) {\n    const p = points.split(regex)\n    return [parseFloat(p[1]), parseFloat(p[2])]\n  } else {\n    return [NaN, parseFloat(points)]\n  }\n}\n\nconst roundTo = (num: number, places: number): number => {\n  const multiplicator = Math.pow(10, places)\n  num = parseFloat((num * multiplicator).toFixed(11))\n  const test = Math.round(num) / multiplicator\n  return +test.toFixed(places)\n}\n\nconst deleteAssignment = (\n  marks: Marks,\n  course: string,\n  assignment: string\n): Marks => {\n  const newMarks = Object.assign({}, marks)\n  newMarks.courses.get(course).assignments = newMarks.courses\n    .get(course)\n    .assignments.filter((a) => a.name !== assignment)\n  return calculatePoints(newMarks)\n}\n\nconst updatePoints = (\n  marks: Marks,\n  course: string,\n  assignmentName: string,\n  points: number,\n  type: string\n): Marks => {\n  const newMarks = Object.assign({}, marks)\n  const assignment = newMarks.courses\n    .get(course)\n    .assignments.find((a) => a.name === assignmentName)\n  if (type === 'earned') {\n    assignment.points = points\n  } else if (type === 'total') {\n    assignment.total = points\n  }\n  assignment.modified = true\n  return calculatePoints(newMarks)\n}\n\nconst addAssignment = (\n  marks: Marks,\n  course: Course,\n  assignment: string,\n  category: string,\n  points: number,\n  total: number\n): Marks => {\n  let name = assignment.length === 0 ? 'Assignment' : assignment\n  if (course.assignments.some((a) => a.name === name)) {\n    let indentifier = 2\n    while (course.assignments.some((a) => a.name === name + indentifier)) {\n      indentifier++\n    }\n    name = name + indentifier\n  }\n  course.assignments.unshift({\n    name: name,\n    category: category,\n    status: 'Graded',\n    notes: '',\n    points: points,\n    total: total,\n    modified: true,\n    date: {\n      due: new Date(),\n      start: new Date()\n    }\n  })\n  marks.courses.set(course.name, course)\n  const m = Object.assign({}, marks)\n  return calculatePoints(m)\n}\n\nconst calculateMarkColor = (mark: number): string => {\n  switch (calculateLetterGrade(mark)) {\n    case 'A':\n      return '#10C212'\n    case 'B':\n      return '#1E2EE6'\n    case 'C':\n      return '#F5A327'\n    case 'D':\n      return '#C72222'\n    case 'E':\n      return '#330505'\n    case 'F':\n      return Colors.black\n  }\n}\n\nconst calculateLetterGrade = (\n  mark: number\n): 'A' | 'B' | 'C' | 'D' | 'E' | 'F' => {\n  if (mark >= 89.5) {\n    return 'A'\n  } else if (mark >= 79.5) {\n    return 'B'\n  } else if (mark >= 69.5) {\n    return 'C'\n  } else if (mark >= 59.5) {\n    return 'D'\n  } else if (mark >= 49.5) {\n    return 'E'\n  } else {\n    return 'F'\n  }\n}\n\nconst isNumber = (input: string): boolean => {\n  return /^[0-9.]+$/g.test(input)\n}\n\nconst suffix = (num: number): 'st' | 'nd' | 'rd' | 'th' | '' => {\n  if (isNaN(num)) return ''\n  const j = num % 10,\n    k = num % 100\n  if (j === 1 && k !== 11) {\n    return 'st'\n  }\n  if (j === 2 && k !== 12) {\n    return 'nd'\n  }\n  if (j === 3 && k !== 13) {\n    return 'rd'\n  }\n  return 'th'\n}\n\n// https://stackoverflow.com/questions/3224834/get-difference-between-2-dates-in-javascript\nconst dateDiffInDays = (a: Date, b: Date): number => {\n  const _MS_PER_DAY = 1000 * 60 * 60 * 24\n  // Discard the time and time-zone information.\n  const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate())\n  const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate())\n\n  return Math.floor((utc2 - utc1) / _MS_PER_DAY)\n}\n\nexport {\n  parseCourseName,\n  convertGradebook,\n  calculatePoints,\n  parsePoints,\n  roundTo,\n  deleteAssignment,\n  updatePoints,\n  addAssignment,\n  calculateMarkColor,\n  calculateLetterGrade,\n  isNumber,\n  suffix,\n  normalize,\n  dateDiffInDays\n}\n","import React from 'react'\nimport { memo } from 'react'\nimport { TouchableOpacity, StyleSheet, View, Text } from 'react-native'\nimport { Colors } from '../colors/Colors'\nconst District = (props) => {\n  return (\n    <TouchableOpacity\n      {...props}\n      style={[\n        props.listItemContainerStyle,\n        {\n          backgroundColor: props.isSelected && Colors.light_gray\n        }\n      ]}\n      onPress={props.onPress}\n      activeOpacity={0.2}\n    >\n      <View style={styles.district_name_container}>\n        <Text numberOfLines={1} style={props.listItemLabelStyle}>\n          {props.label}\n        </Text>\n      </View>\n    </TouchableOpacity>\n  )\n}\n\nconst styles = StyleSheet.create({\n  district_name_container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-start'\n  }\n})\n\nexport default memo(District)\n","import React, { useContext, useEffect, useRef, useState } from 'react'\nimport {\n  TextInput,\n  View,\n  Text,\n  StyleSheet,\n  ActivityIndicator,\n  Platform,\n  Linking,\n  ImageBackground,\n  BackHandler\n} from 'react-native'\nimport { SafeAreaView } from 'react-native-safe-area-context'\nimport StudentVue from 'studentvue'\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack'\nimport { RootStackParamList } from '../types/RootStackParams'\nimport { useNavigation } from '@react-navigation/native'\nimport CustomButton from '../components/CustomButton'\nimport LoginView from '../components/Login'\nimport AppContext from '../contexts/AppContext'\nimport BouncyCheckbox from 'react-native-bouncy-checkbox'\nimport { convertGradebook } from '../gradebook/GradeUtil'\nimport { Colors } from '../colors/Colors'\nimport AwesomeAlert from 'react-native-awesome-alerts'\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\nimport DropDownPicker from 'react-native-dropdown-picker'\nimport { SchoolDistrict } from 'studentvue/StudentVue/StudentVue.interfaces'\nimport { useCookies } from 'react-cookie'\nimport * as SecureStore from 'expo-secure-store'\nimport { FontAwesome5 } from '@expo/vector-icons'\nimport Modal from 'react-native-modal'\nimport District from '../components/District'\nimport * as Notifications from 'expo-notifications'\nimport useAsyncEffect from 'use-async-effect'\nimport Constants from 'expo-constants'\n\ntype loginScreenProp = NativeStackNavigationProp<RootStackParamList, 'Login'>\n\ntype loginInfo = 'username' | 'password' | 'district'\n\nconst Login = () => {\n  const navigation = useNavigation<loginScreenProp>()\n  const refInput = useRef<TextInput | null>(null)\n  const { username, password, setUsername, setPassword, setClient, setMarks } =\n    useContext(AppContext)\n  const [isLoading, setIsLoading] = useState(false)\n  const [isChecked, setToggleCheckBox] = useState(false)\n  const [showAlert, setShowAlert] = useState(false)\n  const [errorMessage, setErrorMessage] = useState(undefined as string)\n\n  const [firstLaunch, setFirstLaunch] = useState(false)\n\n  const [isModalVisible, setModalVisible] = useState(false)\n\n  const [cookies, setCookie, removeCookie] = useCookies([\n    'username',\n    'password',\n    'district'\n  ] as loginInfo[])\n\n  const [open, setOpen] = useState(false)\n  const [value, setValue] = useState(undefined as string)\n  const [list, setList] = useState(\n    require('../assets/districts.json').map((d: SchoolDistrict) => {\n      return { label: d.name, value: d.name }\n    })\n  )\n\n  useAsyncEffect(async () => {\n    savedCredentials()\n\n    const backAction = () => {\n      BackHandler.exitApp()\n      return true\n    }\n\n    const backHandler = BackHandler.addEventListener(\n      'hardwareBackPress',\n      backAction\n    )\n\n    return () => backHandler.remove()\n  }, [])\n\n  async function savedCredentials(): Promise<void> {\n    const username: string = await getValueFor('username')\n    const password: string = await getValueFor('password')\n    const value: string = await getValueFor('district')\n\n    // Auto login\n    if (!username || !password || !value) {\n      setFirstLaunch(true)\n      return\n    }\n\n    setUsername(username)\n    setPassword(password)\n    setValue(value)\n    setIsLoading(true)\n    setToggleCheckBox(true)\n    try {\n      const client = await StudentVue.login(\n        require('../assets/districts.json').find(\n          (d: SchoolDistrict) => d.name === value\n        ).parentVueUrl,\n        {\n          username: username,\n          password: password\n        }\n      )\n      const gradebook = await client.gradebook()\n      const marks = await convertGradebook(gradebook)\n      setClient(client)\n      setMarks(marks)\n    } catch (err) {\n      setIsLoading(false)\n      alert(err.message)\n      return\n    }\n    setIsLoading(false)\n    navigation.navigate('Menu')\n  }\n\n  function alert(message: string): void {\n    setErrorMessage(message)\n    setShowAlert(true)\n  }\n\n  async function onLogin(): Promise<void> {\n    if (!username) {\n      alert('Enter your username')\n      return\n    }\n    if (!password) {\n      alert('Enter your password')\n      return\n    }\n    if (!value) {\n      alert('Select your school district')\n      return\n    }\n    setIsLoading(true)\n    try {\n      const client = await StudentVue.login(\n        require('../assets/districts.json').find(\n          (d: SchoolDistrict) => d.name === value\n        ).parentVueUrl,\n        {\n          username: username,\n          password: password\n        }\n      )\n      const gradebook = await client.gradebook()\n      const marks = await convertGradebook(gradebook)\n      setClient(client)\n      setMarks(marks)\n    } catch (err) {\n      setIsLoading(false)\n      alert(err.message)\n      return\n    }\n    if (isChecked) {\n      save('username', username)\n      save('password', password)\n      save('district', value)\n    } else {\n      remove('username')\n      remove('password')\n      remove('username')\n    }\n    setIsLoading(false)\n    navigation.navigate('Menu')\n  }\n\n  async function openInstagram(username: string): Promise<void> {\n    if (Platform.OS !== 'web') {\n      const appUrl = `instagram://user?username=${username}`\n      try {\n        if (await Linking.canOpenURL(appUrl)) {\n          Linking.openURL(appUrl)\n        } else {\n          try {\n            Linking.openURL(`https://instagram.com/${username}`)\n          } catch (err) {}\n        }\n      } catch (err) {}\n    } else {\n      try {\n        Linking.openURL(`https://instagram.com/${username}`)\n      } catch (err) {}\n    }\n  }\n\n  function nameFontSize(): number {\n    return Platform.OS === 'web' ? 60 : 40\n  }\n\n  function descriptionFontSize(): number {\n    return Platform.OS === 'web' ? 25 : 20\n  }\n\n  function mountainSize(): number {\n    return Platform.OS === 'web' ? 40 : 30\n  }\n\n  async function save(key: loginInfo, value: string): Promise<void> {\n    if (value === null) return\n    if (Platform.OS === 'web') {\n      setCookie(key, value, { path: '/' })\n    } else {\n      await SecureStore.setItemAsync(key, value)\n    }\n  }\n\n  async function getValueFor(key: loginInfo): Promise<string> {\n    if (Platform.OS === 'web') {\n      return cookies[key]\n    } else {\n      return await SecureStore.getItemAsync(key)\n    }\n  }\n\n  const remove = async (key: loginInfo): Promise<void> => {\n    if (Platform.OS === 'web') {\n      removeCookie(key, { path: '/' })\n    } else {\n      await SecureStore.deleteItemAsync(key)\n    }\n  }\n\n  return (\n    <>\n      <Modal\n        isVisible={isModalVisible}\n        coverScreen={false}\n        onBackdropPress={() => setModalVisible(!isModalVisible)}\n        animationIn={'fadeIn'}\n        animationOut={'fadeOut'}\n      >\n        <View style={styles.modal}>\n          <View style={styles.modal_view}>\n            <Text style={styles.security_modal}>\n              We do not collect/save your login information. Info entered is\n              sent directly to your school district's StudentVue website.\n            </Text>\n            <FontAwesome.Button\n              name=\"github\"\n              backgroundColor=\"transparent\"\n              iconStyle={{\n                color: Colors.black\n              }}\n              underlayColor=\"none\"\n              activeOpacity={0.2}\n              size={25}\n              onPress={() =>\n                Linking.openURL('https://github.com/vaporrrr/Summit')\n              }\n            ></FontAwesome.Button>\n          </View>\n        </View>\n      </Modal>\n      <ImageBackground\n        source={require('../assets/mountainbackground.png')}\n        resizeMode=\"cover\"\n        style={{ flex: 1 }}\n      >\n        <SafeAreaView style={{ alignItems: 'center' }}>\n          <View style={styles.horizontal_container}>\n            <Text style={[styles.name, { fontSize: nameFontSize() }]}>\n              Summit\n            </Text>\n            <View style={styles.mountain}>\n              <FontAwesome5\n                name=\"mountain\"\n                size={mountainSize()}\n                color=\"black\"\n              />\n            </View>\n          </View>\n          <Text\n            style={[styles.description, { fontSize: descriptionFontSize() }]}\n          >\n            Grade Viewer\n          </Text>\n        </SafeAreaView>\n        <LoginView>\n          {firstLaunch && (\n            <View style={styles.login_info_container}>\n              <View style={styles.horizontal_container}>\n                <Text style={styles.security}>\n                  This app is safe to use and open source\n                </Text>\n                <FontAwesome.Button\n                  name=\"info-circle\"\n                  backgroundColor=\"transparent\"\n                  iconStyle={{\n                    color: Colors.black\n                  }}\n                  underlayColor=\"none\"\n                  activeOpacity={0.2}\n                  size={18}\n                  onPress={() => setModalVisible(true)}\n                ></FontAwesome.Button>\n              </View>\n              <Text style={styles.login_info}>\n                Login info is the same as StudentVue\n              </Text>\n            </View>\n          )}\n          <TextInput\n            defaultValue={username}\n            onChangeText={(u) => setUsername(u)}\n            placeholder={'Username'}\n            style={styles.input}\n            returnKeyType={'next'}\n            onSubmitEditing={() => refInput.current.focus()}\n            blurOnSubmit={false}\n          />\n          <TextInput\n            defaultValue={password}\n            onChangeText={(p) => setPassword(p)}\n            placeholder={'Password'}\n            secureTextEntry={true}\n            style={styles.input}\n            returnKeyType={'next'}\n            ref={refInput}\n            onSubmitEditing={() => setOpen(true)}\n          />\n          <DropDownPicker\n            searchable={true}\n            open={open}\n            value={value}\n            items={list}\n            setOpen={setOpen}\n            setValue={setValue}\n            setItems={setList}\n            dropDownDirection={'BOTTOM'}\n            style={styles.dropdown}\n            textStyle={styles.dropdown_text}\n            containerStyle={styles.dropdown_container}\n            listMode={'FLATLIST'}\n            translation={{\n              SEARCH_PLACEHOLDER: 'Enter School District Name',\n              PLACEHOLDER: 'Select School District',\n              NOTHING_TO_SHOW:\n                'Nothing found, make sure you are entering your DISTRICT NAME not SCHOOL NAME'\n            }}\n            tickIconStyle={styles.dropdown_tick}\n            listItemLabelStyle={styles.dropdown_item}\n            searchContainerStyle={styles.dropdown_search_container}\n            searchTextInputStyle={styles.dropdown_search_text}\n            listItemContainerStyle={styles.dropdown_list_item_container}\n            renderListItem={(props) => {\n              return (\n                <District\n                  {...props}\n                  onPress={() => {\n                    setValue(props.value)\n                    setOpen(false)\n                  }}\n                ></District>\n              )\n            }}\n            props={{\n              activeOpacity: 0.5\n            }}\n          ></DropDownPicker>\n          <View style={styles.checkbox_container}>\n            <BouncyCheckbox\n              size={24}\n              fillColor={Colors.navy}\n              unfillColor=\"transparent\"\n              disableText\n              innerIconStyle={{\n                borderWidth: 1,\n                borderColor: Colors.black\n              }}\n              isChecked={isChecked}\n              disableBuiltInState\n              onPress={async () => {\n                setToggleCheckBox(!isChecked)\n              }}\n            />\n            <Text style={styles.save_text}>Save Login Information</Text>\n          </View>\n          <CustomButton\n            onPress={() => {\n              if (!isLoading) onLogin()\n            }}\n            text={'Login'}\n            backgroundColor={\n              !isLoading ? Colors.navy : 'rgba(100, 100, 100, 0.6)'\n            }\n            textColor={Colors.white}\n            fontFamily=\"Inter_800ExtraBold\"\n            containerStyle={styles.button_container}\n            disabled={isLoading}\n          ></CustomButton>\n          <ActivityIndicator\n            color={Colors.secondary}\n            animating={isLoading}\n            style={{ marginBottom: 50 }}\n            size=\"large\"\n          />\n        </LoginView>\n        <View style={styles.row_container}>\n          <View style={styles.insta_button_container}>\n            <FontAwesome.Button\n              name=\"instagram\"\n              backgroundColor=\"transparent\"\n              iconStyle={styles.insta_button}\n              underlayColor=\"none\"\n              activeOpacity={0.2}\n              size={28}\n              onPress={() => openInstagram('richardyin99')}\n            ></FontAwesome.Button>\n            <Text style={styles.insta_text}>Richard Y</Text>\n          </View>\n          <View style={styles.insta_button_container}>\n            <FontAwesome.Button\n              name=\"instagram\"\n              backgroundColor=\"transparent\"\n              iconStyle={styles.insta_button}\n              underlayColor=\"none\"\n              activeOpacity={0.2}\n              size={28}\n              onPress={() => openInstagram('karthik.whynot')}\n            ></FontAwesome.Button>\n            <Text style={styles.insta_text}>Karthik M</Text>\n          </View>\n        </View>\n      </ImageBackground>\n      <AwesomeAlert\n        show={showAlert}\n        showProgress={false}\n        title={'Error'}\n        message={errorMessage}\n        closeOnTouchOutside={true}\n        closeOnHardwareBackPress={true}\n        showCancelButton={false}\n        showConfirmButton={true}\n        confirmText={'Ok'}\n        confirmButtonColor={Colors.primary}\n        confirmButtonTextStyle={{ color: Colors.black }}\n        onConfirmPressed={() => {\n          setShowAlert(false)\n        }}\n      ></AwesomeAlert>\n    </>\n  )\n}\n\nexport default Login\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    alignSelf: 'center',\n    justifyContent: 'center',\n    marginTop: 10\n  },\n  horizontal_container: {\n    flexDirection: 'row'\n  },\n  modal: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    alignSelf: 'center',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    width: 250,\n    height: 140\n  },\n  modal_view: {\n    width: 250,\n    height: 140,\n    padding: 15\n  },\n  security_modal: {\n    fontFamily: 'Inter_400Regular'\n  },\n  mountain: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginLeft: 5\n  },\n  name: {\n    fontFamily: 'Montserrat_900Black'\n  },\n  description: {\n    fontFamily: 'RussoOne_400Regular',\n    textAlign: 'center'\n  },\n  login_info_container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  login_info: {\n    fontFamily: 'Montserrat_300Light_Italic',\n    fontSize: 12,\n    marginBottom: 10\n  },\n  security: {\n    fontFamily: 'Inter_600SemiBold',\n    fontSize: 14,\n    marginTop: 8\n  },\n  checkbox_container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 10\n  },\n  input: {\n    width: 250,\n    height: 50,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: Colors.black,\n    borderRadius: 5,\n    marginBottom: 10\n  },\n  dropdown: {\n    borderWidth: 1,\n    borderColor: Colors.black,\n    width: 250,\n    marginBottom: 10,\n    backgroundColor: 'transparent',\n    padding: 10,\n    borderRadius: 5\n  },\n  dropdown_text: {\n    fontFamily: 'Inter_700Bold',\n    fontSize: 12\n  },\n  dropdown_container: {\n    width: 250\n  },\n  dropdown_item: {\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    fontFamily: 'Inter_600SemiBold'\n  },\n  dropdown_tick: {\n    marginLeft: 10\n  },\n  dropdown_search_container: {\n    padding: 10,\n    borderBottomWidth: 0\n  },\n  dropdown_search_text: {\n    fontFamily: 'Inter_400Regular'\n  },\n  dropdown_list_item_container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  district_name_container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-start'\n  },\n  loading: {\n    margin: 'auto'\n  },\n  button_container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'relative',\n    width: 100,\n    height: 50,\n    padding: 10,\n    borderRadius: 10,\n    borderWidth: 0,\n    marginBottom: 10\n  },\n  save_text: {\n    marginLeft: 8,\n    fontFamily: 'Inter_400Regular'\n  },\n  row_container: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 25\n  },\n  insta_button_container: {\n    marginHorizontal: 10\n  },\n  insta_button: {\n    color: Colors.black\n  },\n  insta_text: {\n    fontFamily: 'Inter_300Light',\n    fontSize: 10\n  }\n})\n","import React, { useContext, useEffect, useRef, useState } from 'react'\nimport {\n  StyleSheet,\n  View,\n  Text,\n  TextInput,\n  Platform,\n  TouchableOpacity,\n  StyleProp,\n  ViewStyle\n} from 'react-native'\nimport {\n  calculateMarkColor,\n  updatePoints,\n  deleteAssignment,\n  isNumber,\n  roundTo,\n  calculateLetterGrade\n} from '../gradebook/GradeUtil'\nimport AppContext from '../contexts/AppContext'\nimport { Colors } from '../colors/Colors'\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\n\ntype Props = {\n  courseName: string\n  name: string\n  style?: StyleProp<ViewStyle>\n  onPress: any\n}\n\nconst Assignment: React.FC<Props> = ({ courseName, name, style, onPress }) => {\n  const { marks, setMarks } = useContext(AppContext)\n  const [isDropdown, setIsDropdown] = useState(false)\n  const course = marks.courses.get(courseName)\n  const assignment = course.assignments.find((a) => a.name === name)\n  const pointsString = isNaN(assignment.points)\n    ? ''\n    : assignment.points.toString()\n  const totalString = isNaN(assignment.total) ? '' : assignment.total.toString()\n  const totalWeight: number = Array.from(course.categories.values()).reduce(\n    (p, c) => (isNaN(c.value) ? p : p + c.weight),\n    0\n  )\n  const score: number = (assignment.points / assignment.total) * 100\n  const hasScore: boolean = !isNaN((assignment.points / assignment.total) * 100)\n\n  const update = (input: string, type: 'total' | 'earned') => {\n    if (type === 'total') {\n      total.current = input\n    } else {\n      points.current = input\n    }\n    setMarks(updatePoints(marks, courseName, name, parseFloat(input), type))\n  }\n\n  const getWidth = (n: number) => {\n    const min = 34\n    if (isNaN(n)) return min\n    return Math.max(n.toString().length * 15, min)\n  }\n\n  const points = useRef(pointsString)\n  const total = useRef(totalString)\n\n  useEffect(() => {\n    points.current = pointsString\n    total.current = totalString\n  }, [marks])\n\n  return (\n    <View\n      style={[\n        styles.container,\n        style,\n        hasScore\n          ? {\n              borderLeftColor: calculateMarkColor(score),\n              borderLeftWidth: 4\n            }\n          : {}\n      ]}\n    >\n      <View style={[styles.horizontal_container, { height: 52 }]}>\n        <TouchableOpacity\n          onPress={() => {\n            onPress()\n            setIsDropdown(!isDropdown)\n          }}\n          activeOpacity={0.2}\n          style={styles.assignment_info_container}\n        >\n          <Text\n            numberOfLines={1}\n            style={[\n              styles.name,\n              {\n                color: assignment.modified\n                  ? Colors.dark_middle_blue_green\n                  : Colors.navy\n              }\n            ]}\n          >\n            {name}\n          </Text>\n          <Text numberOfLines={1} style={styles.category}>\n            {assignment.category} - {assignment.date.due.toLocaleDateString()}\n          </Text>\n        </TouchableOpacity>\n        <View style={styles.input_container}>\n          <TextInput\n            value={points.current}\n            placeholder={'__'}\n            keyboardType={'decimal-pad'}\n            returnKeyType={'done'}\n            autoComplete={'off'}\n            style={[\n              styles.mark,\n              {\n                color: assignment.modified\n                  ? Colors.dark_middle_blue_green\n                  : Colors.black,\n                width: getWidth(assignment.points)\n              }\n            ]}\n            onChangeText={(input) => {\n              if (isNumber(input) || input === '') update(input, 'earned')\n            }}\n          />\n          <Text style={styles.dash}> / </Text>\n          <TextInput\n            value={total.current}\n            placeholder={'__'}\n            keyboardType={'decimal-pad'}\n            returnKeyType={'done'}\n            autoComplete={'off'}\n            style={[\n              styles.mark,\n              {\n                color: assignment.modified\n                  ? Colors.dark_middle_blue_green\n                  : Colors.black,\n                width: getWidth(assignment.total)\n              }\n            ]}\n            onChangeText={(input) => {\n              if (isNumber(input) || input === '') update(input, 'total')\n            }}\n          />\n        </View>\n      </View>\n      {isDropdown && (\n        <View style={styles.dropdown_container}>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Full Name:</Text>\n            <Text style={styles.dropdown_text_value}>{name}</Text>\n          </View>\n          {course.categories.size > 0 && (\n            <View style={styles.horizontal_container}>\n              <Text style={styles.dropdown_text_name}>Effective Weight:</Text>\n              <Text style={styles.dropdown_text_value}>\n                {roundTo(\n                  (course.categories.get(assignment.category).weight /\n                    totalWeight) *\n                    100,\n                  2\n                )}\n                %\n              </Text>\n            </View>\n          )}\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Grade:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {hasScore\n                ? `${roundTo(score, 2)}% (${calculateLetterGrade(score)})`\n                : 'N/A'}\n            </Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Status:</Text>\n            <Text style={styles.dropdown_text_value}>{assignment.status}</Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Due Date:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {assignment.date.due.toLocaleDateString()}\n            </Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Start Date:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {assignment.date.start.toLocaleDateString()}\n            </Text>\n          </View>\n          <View style={styles.horizontal_container}>\n            <Text style={styles.dropdown_text_name}>Notes:</Text>\n            <Text style={styles.dropdown_text_value}>\n              {assignment.notes.length === 0 ? 'None' : assignment.notes}\n            </Text>\n          </View>\n          <FontAwesome.Button\n            name=\"trash-o\"\n            backgroundColor=\"transparent\"\n            iconStyle={{\n              color: Colors.red\n            }}\n            underlayColor=\"none\"\n            activeOpacity={0.2}\n            size={24}\n            onPress={() => setMarks(deleteAssignment(marks, courseName, name))}\n          ></FontAwesome.Button>\n        </View>\n      )}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.off_white,\n    borderRadius: 10,\n    marginVertical: 3.5,\n    borderWidth: 1,\n    borderTopColor: Colors.secondary,\n    borderRightColor: Colors.secondary,\n    borderBottomColor: Colors.secondary,\n    borderLeftColor: Colors.secondary\n  },\n  horizontal_container: {\n    flexDirection: 'row'\n  },\n  dropdown_container: {\n    padding: 7,\n    paddingTop: 0\n  },\n  assignment_info_container: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    marginLeft: 3,\n    flex: 1\n  },\n  name: {\n    color: Colors.black,\n    fontFamily: 'Inter_700Bold',\n    fontSize: 14,\n    marginHorizontal: 7,\n    lineHeight: 14 * 0.75,\n    textAlign: 'left',\n    ...Platform.select({\n      web: {\n        paddingBottom: 11 - 11 * 0.75\n      },\n      default: {\n        paddingTop: 14 - 14 * 0.75\n      }\n    })\n  },\n  category: {\n    color: Colors.black,\n    fontFamily: 'Inter_400Regular',\n    fontSize: 12,\n    marginHorizontal: 7,\n    marginTop: 4,\n    textAlign: 'left',\n    ...Platform.select({\n      web: {\n        lineHeight: 11 * 0.75,\n        paddingVertical: 2\n      },\n      default: {\n        lineHeight: 12 * 0.75,\n        paddingTop: 12 - 12 * 0.75\n      }\n    })\n  },\n  input_container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginRight: 7\n  },\n  mark: {\n    height: 60,\n    fontSize: 23,\n    fontFamily: 'Inter_600SemiBold',\n    alignSelf: 'center',\n    outlineStyle: 'none'\n  },\n  dash: {\n    fontSize: 20,\n    alignSelf: 'center',\n    textAlignVertical: 'center',\n    marginRight: 3\n  },\n  dropdown_text_name: {\n    marginHorizontal: 7,\n    fontFamily: 'Montserrat_600SemiBold',\n    fontSize: 12\n  },\n  dropdown_text_value: {\n    fontFamily: 'Inter_400Regular',\n    flex: 1,\n    fontSize: 12\n  }\n})\n\nexport default Assignment\n","import { useNavigation } from '@react-navigation/native'\nimport React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useRef,\n  useState\n} from 'react'\nimport {\n  Platform,\n  RefreshControl,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n  SafeAreaView,\n  BackHandler\n} from 'react-native'\nimport AppContext from '../contexts/AppContext'\nimport Assignment from '../components/Assignment'\nimport {\n  addAssignment,\n  convertGradebook,\n  parseCourseName,\n  isNumber,\n  calculateMarkColor\n} from '../gradebook/GradeUtil'\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\nimport Modal from 'react-native-modal'\nimport DropDownPicker from 'react-native-dropdown-picker'\nimport { Colors } from '../colors/Colors'\nimport Animated, { Transition, Transitioning } from 'react-native-reanimated'\nimport Constants from 'expo-constants'\n\nconst transition = (\n  <Transition.Sequence>\n    <Transition.Change />\n    <Transition.In type=\"fade\" durationMs={250} />\n    <Transition.Out type=\"fade\" durationMs={250} />\n    <Transition.Change />\n  </Transition.Sequence>\n)\n\nconst CourseDetails = ({ route }) => {\n  const courseName = route.params.title\n  const navigation = useNavigation()\n\n  const { marks, client, setMarks } = useContext(AppContext)\n  const course = marks.courses.get(courseName)\n\n  const refInput = useRef<TextInput | null>(null)\n  const refInput2 = useRef<TextInput | null>(null)\n\n  const [isModalVisible, setModalVisible] = useState(false)\n  const [open, setOpen] = useState(false)\n  const [category, setCategory] = useState(\n    marks.courses.get(courseName).categories.values().next().value?.name\n  )\n  const [categories, setCategories] = useState(\n    Array.from(marks.courses.get(courseName).categories.values()).map((c) => {\n      return { label: c.name, value: c.name }\n    })\n  )\n  const [assignmentName, setAssignmentName] = useState('')\n  const [points, setPoints] = useState('')\n  const [total, setTotal] = useState('')\n\n  const ref = useRef(null)\n\n  const [refreshing, setRefreshing] = useState(false)\n\n  const onRefresh = useCallback(async () => {\n    setRefreshing(true)\n    try {\n      setMarks(\n        await convertGradebook(\n          await client.gradebook(marks.reportingPeriod.index)\n        )\n      )\n    } catch (err) {}\n    setRefreshing(false)\n  }, [])\n\n  useEffect(() => {\n    if (isModalVisible) {\n      setAssignmentName('')\n      setPoints('')\n      setTotal('')\n    }\n  }, [isModalVisible])\n\n  useEffect(() => {\n    const backAction = () => {\n      navigation.goBack()\n      return true\n    }\n\n    const backHandler = BackHandler.addEventListener(\n      'hardwareBackPress',\n      backAction\n    )\n\n    return () => backHandler.remove()\n  }, [])\n\n  const toggleModal = (): void => {\n    setModalVisible(!isModalVisible)\n  }\n\n  const add = () => {\n    setMarks(\n      addAssignment(\n        marks,\n        course,\n        assignmentName,\n        category,\n        parseFloat(points),\n        parseFloat(total)\n      )\n    )\n    toggleModal()\n  }\n\n  return (\n    <View style={{ flex: 1, backgroundColor: Colors.primary }}>\n      <SafeAreaView style={styles.course_name_container}>\n        <View\n          style={{\n            flexDirection: 'row',\n            justifyContent: 'flex-start'\n          }}\n        >\n          <FontAwesome.Button\n            name=\"chevron-left\"\n            backgroundColor=\"transparent\"\n            iconStyle={{\n              color: Colors.navy\n            }}\n            underlayColor=\"none\"\n            activeOpacity={0.2}\n            size={30}\n            onPress={() => navigation.goBack()}\n          ></FontAwesome.Button>\n        </View>\n        <Text numberOfLines={1} style={styles.course_name}>\n          {parseCourseName(courseName)}\n        </Text>\n        <View\n          style={{\n            flexDirection: 'row',\n            justifyContent: 'flex-end'\n          }}\n        >\n          <FontAwesome.Button\n            name=\"plus-circle\"\n            backgroundColor=\"transparent\"\n            iconStyle={{\n              color: Colors.navy\n            }}\n            size={30}\n            underlayColor=\"none\"\n            activeOpacity={0.2}\n            onPress={() => toggleModal()}\n          ></FontAwesome.Button>\n          {Platform.OS === 'web' && (\n            <FontAwesome.Button\n              name=\"refresh\"\n              backgroundColor=\"transparent\"\n              iconStyle={{\n                color: Colors.navy\n              }}\n              underlayColor=\"none\"\n              activeOpacity={0.2}\n              size={30}\n              onPress={onRefresh}\n            ></FontAwesome.Button>\n          )}\n        </View>\n      </SafeAreaView>\n      <View\n        style={[\n          styles.course_mark_container,\n          { borderColor: calculateMarkColor(course.value) }\n        ]}\n      >\n        <Text numberOfLines={1} style={styles.course_mark}>\n          {isNaN(course.value) ? 'N/A' : course.value}\n        </Text>\n      </View>\n      <Transitioning.View\n        ref={ref}\n        transition={transition}\n        style={{\n          backgroundColor: Colors.white,\n          borderTopLeftRadius: 10,\n          borderTopRightRadius: 10,\n          borderColor: Colors.secondary,\n          borderTopWidth: 1,\n          borderEndWidth: 1,\n          borderStartWidth: 1,\n          flex: 1\n        }}\n      >\n        <Animated.ScrollView\n          refreshControl={\n            <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n          }\n          contentContainerStyle={{\n            flexGrow: 1,\n            paddingHorizontal: 12,\n            paddingTop: 8.5,\n            paddingBottom: 10\n          }}\n        >\n          {course.assignments.map((item) => {\n            return (\n              <Assignment\n                name={item.name}\n                courseName={courseName}\n                onPress={() => ref.current.animateNextTransition()}\n                key={item.name}\n              ></Assignment>\n            )\n          })}\n        </Animated.ScrollView>\n      </Transitioning.View>\n      <Modal\n        isVisible={isModalVisible}\n        coverScreen={false}\n        onBackdropPress={toggleModal}\n        animationIn={'fadeIn'}\n        animationOut={'fadeOut'}\n      >\n        <View style={styles.modal}>\n          <View style={styles.modal_view}>\n            <TextInput\n              returnKeyType={'next'}\n              value={assignmentName}\n              placeholder=\"Name (Optional)\"\n              onChangeText={(t) => {\n                setAssignmentName(t)\n              }}\n              style={[styles.input, { marginTop: 10 }]}\n              blurOnSubmit={false}\n              onSubmitEditing={() => refInput.current.focus()}\n            />\n            <TextInput\n              returnKeyType={'next'}\n              value={points}\n              keyboardType=\"decimal-pad\"\n              autoComplete=\"off\"\n              placeholder=\"Points Earned\"\n              onChangeText={(t) => {\n                if (isNumber(t) || t === '') setPoints(t)\n              }}\n              style={styles.input}\n              blurOnSubmit={false}\n              ref={refInput}\n              onSubmitEditing={() => refInput2.current.focus()}\n            />\n            <TextInput\n              returnKeyType={'next'}\n              value={total}\n              keyboardType=\"decimal-pad\"\n              autoComplete=\"off\"\n              placeholder=\"Total Points\"\n              onChangeText={(t) => {\n                if (isNumber(t) || t === '') setTotal(t)\n              }}\n              style={styles.input}\n              ref={refInput2}\n              onSubmitEditing={() => setOpen(true)}\n            />\n            <View\n              style={{\n                marginHorizontal: 10,\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                marginVertical: 5\n              }}\n            >\n              <DropDownPicker\n                open={open}\n                value={category}\n                items={categories}\n                setOpen={setOpen}\n                setValue={setCategory}\n                setItems={setCategories}\n                maxHeight={null}\n                style={styles.dropdown}\n                textStyle={styles.dropdown_text}\n                containerStyle={styles.dropdown_container}\n                translation={{\n                  PLACEHOLDER: 'Select Category'\n                }}\n                renderListItem={(props) => {\n                  return (\n                    <TouchableOpacity\n                      {...props}\n                      style={[\n                        props.listItemContainerStyle,\n                        {\n                          backgroundColor: props.isSelected && Colors.light_gray\n                        }\n                      ]}\n                      onPress={() => {\n                        setCategory(props.value)\n                        setOpen(false)\n                      }}\n                      activeOpacity={0.2}\n                    >\n                      <View style={styles.category_name_container}>\n                        <Text\n                          numberOfLines={1}\n                          style={props.listItemLabelStyle}\n                        >\n                          {props.label}\n                        </Text>\n                      </View>\n                    </TouchableOpacity>\n                  )\n                }}\n              ></DropDownPicker>\n              <FontAwesome.Button\n                name=\"plus-circle\"\n                backgroundColor=\"transparent\"\n                iconStyle={{\n                  color: Colors.navy\n                }}\n                style={{\n                  margin: 0,\n                  padding: 0\n                }}\n                size={55}\n                underlayColor=\"none\"\n                activeOpacity={0.2}\n                onPress={add}\n              ></FontAwesome.Button>\n            </View>\n          </View>\n        </View>\n      </Modal>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  input: {\n    marginHorizontal: 10,\n    marginVertical: 5,\n    padding: 5,\n    borderWidth: 1,\n    height: 30,\n    borderColor: Colors.black,\n    fontFamily: 'Inter_400Regular',\n    fontSize: 12,\n    borderRadius: 5\n  },\n  modal: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    alignSelf: 'center',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    width: 300,\n    height: 195\n  },\n  modal_view: {\n    width: 300,\n    height: 195\n  },\n  course_name: {\n    fontSize: 24,\n    flex: 1,\n    flexWrap: 'wrap',\n    fontFamily: 'Inter_800ExtraBold',\n    textAlign: 'center'\n  },\n  course_name_container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    ...Platform.select({\n      android: {\n        marginTop: Constants.statusBarHeight\n      }\n    })\n  },\n  dropdown: {\n    borderWidth: 1,\n    borderColor: Colors.black,\n    backgroundColor: 'transparent',\n    padding: 5,\n    marginHorizontal: 10,\n    width: 210,\n    alignSelf: 'center'\n  },\n  dropdown_text: {\n    fontFamily: 'Inter_400Regular',\n    fontSize: 12\n  },\n  dropdown_container: {\n    width: 210,\n    alignSelf: 'center'\n  },\n  category_name_container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-start'\n  },\n  course_mark_container: {\n    backgroundColor: Colors.white,\n    marginBottom: 30,\n    margin: 10,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 15,\n    paddingHorizontal: 20,\n    borderRadius: 10,\n    borderWidth: 3\n  },\n  course_mark: {\n    textAlignVertical: 'center',\n    fontFamily: 'Montserrat_800ExtraBold',\n    fontSize: 50\n  }\n})\n\nexport default CourseDetails\n","import React from 'react'\nimport {\n  StyleSheet,\n  View,\n  Text,\n  Platform,\n  TouchableOpacity\n} from 'react-native'\nimport { Colors } from '../colors/Colors'\nimport {\n  calculateLetterGrade,\n  calculateMarkColor\n} from '../gradebook/GradeUtil'\n\nfunction Course(props) {\n  const mark: number = parseFloat(props.mark)\n\n  return (\n    <TouchableOpacity\n      style={[styles.container, props.style]}\n      onPress={props.onPress}\n      activeOpacity={0.2}\n    >\n      <Text style={styles.period_number}>{('0' + props.period).slice(-2)}</Text>\n      <View style={styles.course_info_container}>\n        <Text numberOfLines={1} style={styles.name}>\n          {props.name}\n        </Text>\n        <Text numberOfLines={1} style={styles.teacher}>\n          {props.teacher}\n        </Text>\n      </View>\n      <Text style={[styles.mark]}>\n        {isNaN(parseFloat(props.mark)) ? 'N/A' : props.mark}\n      </Text>\n      {!isNaN(parseFloat(props.mark)) && (\n        <Text\n          style={[\n            styles.letter_grade,\n            {\n              color: calculateMarkColor(mark)\n            }\n          ]}\n        >\n          {calculateLetterGrade(mark)}\n        </Text>\n      )}\n    </TouchableOpacity>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.off_white,\n    borderRadius: 15,\n    height: 55,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginVertical: 5,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: Colors.secondary\n  },\n  period_number: {\n    fontFamily: 'Montserrat_800ExtraBold',\n    fontSize: 32,\n    lineHeight: 36\n  },\n  course_info_container: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    marginHorizontal: 7,\n    flex: 1\n  },\n  name: {\n    color: Colors.navy,\n    fontFamily: 'Montserrat_700Bold',\n    fontSize: 16,\n    marginRight: 14,\n    marginLeft: 7,\n    lineHeight: 18 * 0.75,\n    textAlign: 'left',\n    ...Platform.select({\n      web: {\n        paddingBottom: 12 - 12 * 0.75\n      },\n      default: {\n        paddingTop: 18 - 18 * 0.75\n      }\n    })\n  },\n  teacher: {\n    color: Colors.black,\n    fontFamily: 'Inter_400Regular',\n    fontSize: 12,\n    marginRight: 14,\n    marginLeft: 7,\n    lineHeight: 12 * 0.75,\n    marginTop: 4,\n    textAlign: 'left',\n    ...Platform.select({\n      web: {\n        paddingBottom: 2\n      },\n      default: {\n        paddingTop: 12 - 12 * 0.75\n      }\n    })\n  },\n  mark: {\n    fontFamily: 'Montserrat_500Medium',\n    fontSize: 30,\n    lineHeight: 36\n  },\n  letter_grade: {\n    marginLeft: 7,\n    fontFamily: 'Montserrat_800ExtraBold',\n    fontSize: 30,\n    lineHeight: 36\n  }\n})\n\nexport default Course\n","import React, { useContext, useState, useEffect } from 'react'\nimport AppContext from '../contexts/AppContext'\nimport {\n  StyleSheet,\n  View,\n  Text,\n  Platform,\n  FlatList,\n  TouchableOpacity,\n  RefreshControl,\n  BackHandler\n} from 'react-native'\nimport Course from '../components/Course'\nimport DropDownPicker from 'react-native-dropdown-picker'\nimport {\n  convertGradebook,\n  dateDiffInDays,\n  parseCourseName\n} from '../gradebook/GradeUtil'\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\nimport { Colors } from '../colors/Colors'\nimport { SafeAreaView } from 'react-native-safe-area-context'\n\nconst Courses = ({ navigation }) => {\n  const { client, marks, setMarks } = useContext(AppContext)\n  const [open, setOpen] = useState(false)\n  const [value, setValue] = useState(marks.reportingPeriod.index)\n  const [periods, setPeriods] = useState(\n    marks.reportingPeriods.map((p) => {\n      return { label: p.name, value: p.index }\n    })\n  )\n\n  useEffect(() => {\n    onRefresh()\n  }, [value])\n\n  useEffect(() => {\n    const backAction = () => {\n      navigation.goBack()\n      return true\n    }\n\n    const backHandler = BackHandler.addEventListener(\n      'hardwareBackPress',\n      backAction\n    )\n\n    return () => backHandler.remove()\n  }, [])\n\n  const [refreshing, setRefreshing] = useState(false)\n\n  const onRefresh = async () => {\n    setRefreshing(true)\n    try {\n      setMarks(await convertGradebook(await client.gradebook(value)))\n    } catch (err) {}\n    setRefreshing(false)\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <DropDownPicker\n        open={open}\n        value={value}\n        items={periods}\n        setOpen={setOpen}\n        setValue={setValue}\n        setItems={setPeriods}\n        maxHeight={null}\n        style={styles.dropdown}\n        labelProps={{ numberOfLines: 1 }}\n        textStyle={[styles.dropdown_text, { fontSize: 50 }]}\n        translation={{\n          PLACEHOLDER: 'Select Marking Period'\n        }}\n        renderListItem={(props) => {\n          return (\n            <TouchableOpacity\n              {...props}\n              style={[\n                {\n                  backgroundColor: props.isSelected && Colors.light_gray\n                }\n              ]}\n              onPress={() => {\n                setValue(props.value)\n                setOpen(false)\n              }}\n              activeOpacity={0.2}\n            >\n              <View style={styles.marking_period_container}>\n                <Text\n                  numberOfLines={1}\n                  style={[styles.dropdown_text, { fontSize: 25 }]}\n                >\n                  {props.label}\n                </Text>\n              </View>\n            </TouchableOpacity>\n          )\n        }}\n      ></DropDownPicker>\n      <Text style={styles.date}>\n        Ends {marks.reportingPeriods[value].date.end.toLocaleDateString()} in{' '}\n        {dateDiffInDays(new Date(), marks.reportingPeriods[value].date.end)}{' '}\n        days\n      </Text>\n      <View style={styles.row_container}>\n        {!isNaN(marks.gpa) && <Text style={styles.gpa}>{marks.gpa} GPA</Text>}\n        {Platform.OS === 'web' && (\n          <View style={styles.refresh_button_container}>\n            <FontAwesome.Button\n              name=\"refresh\"\n              backgroundColor=\"transparent\"\n              iconStyle={{\n                color: Colors.secondary\n              }}\n              underlayColor=\"none\"\n              activeOpacity={0.2}\n              size={24}\n              onPress={onRefresh}\n            ></FontAwesome.Button>\n          </View>\n        )}\n      </View>\n      {marks && (\n        <View style={{ height: '100%' }}>\n          <FlatList\n            data={[...marks.courses.entries()]}\n            renderItem={({ item }) => (\n              <Course\n                name={parseCourseName(item[0])}\n                mark={item[1].value}\n                period={item[1].period}\n                teacher={item[1].teacher}\n                onPress={() => {\n                  navigation.navigate('Course Details', { title: item[0] })\n                }}\n              ></Course>\n            )}\n            keyExtractor={(item) => item[0]}\n            refreshControl={\n              <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n            }\n            contentContainerStyle={{\n              flexGrow: 1,\n              paddingHorizontal: 7,\n              ...Platform.select({\n                web: {\n                  paddingBottom: 60\n                },\n                default: {\n                  paddingBottom: 10\n                }\n              })\n            }}\n          />\n        </View>\n      )}\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  // android status bar not accounted for properly in safeview + dropdownpicker\n  // web needs to be shifted 11 right\n  dropdown: {\n    borderWidth: 0,\n    backgroundColor: 'transparent',\n    justifyContent: 'center'\n  },\n  dropdown_text: {\n    fontFamily: 'Inter_800ExtraBold'\n  },\n  marking_period_container: {\n    flex: 1,\n    flexDirection: 'row',\n    marginLeft: 11\n  },\n  date: {\n    marginLeft: 11,\n    fontFamily: 'Montserrat_500Medium',\n    fontSize: 18\n  },\n  row_container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: 10,\n    marginLeft: 11\n  },\n  gpa_container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-start'\n  },\n  gpa: {\n    fontFamily: 'Montserrat_700Bold',\n    fontSize: 25\n  },\n  refresh_button_container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  }\n})\n\nexport default Courses\n","import React from 'react'\n\ninterface CourseName {\n  courseHeader: string\n  setCourse: React.Dispatch<React.SetStateAction<string>>\n}\n\nconst GradeContext = React.createContext<CourseName>(null)\n\nexport default GradeContext\n","import React, { useState } from 'react'\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\nimport CourseDetails from './CourseDetails'\nimport Courses from './Courses'\nimport GradeContext from '../contexts/GradeContext'\n\nconst Stack = createNativeStackNavigator()\n\nconst StackNavigator = () => {\n  const [course, setCourse] = useState(undefined as string)\n\n  return (\n    <GradeContext.Provider\n      value={{ courseHeader: course, setCourse: setCourse }}\n    >\n      <Stack.Navigator>\n        <Stack.Screen\n          name=\"Courses\"\n          component={Courses}\n          options={{\n            headerShown: false\n          }}\n        />\n        <Stack.Screen\n          name=\"Course Details\"\n          component={CourseDetails}\n          options={{\n            headerShown: false\n          }}\n        />\n      </Stack.Navigator>\n    </GradeContext.Provider>\n  )\n}\n\nexport default StackNavigator\n","import React from 'react'\nimport { View, Text } from 'react-native'\n\nconst Settings = ({ navigation }) => {\n  return (\n    <View>\n      <Text>asdfasdfadf</Text>\n    </View>\n  )\n}\n\nexport default Settings\n","import React, { useCallback, useContext, useState } from 'react'\nimport {\n  ActivityIndicator,\n  Image,\n  StyleSheet,\n  View,\n  Text,\n  BackHandler,\n  RefreshControl\n} from 'react-native'\nimport { SchoolInfo, StudentInfo } from 'studentvue'\nimport { Colors } from '../colors/Colors'\nimport AppContext from '../contexts/AppContext'\nimport {\n  FontAwesome,\n  Feather,\n  AntDesign,\n  Ionicons,\n  MaterialCommunityIcons\n} from '@expo/vector-icons'\nimport { suffix } from '../gradebook/GradeUtil'\nimport useAsyncEffect from 'use-async-effect'\nimport { ScrollView } from 'react-native-gesture-handler'\nimport { SafeAreaView } from 'react-native-safe-area-context'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport Settings from './Settings'\n\nconst Profile = ({ navigation }) => {\n  const { client } = useContext(AppContext)\n  const [studentInfo, setStudentInfo] = useState(undefined as StudentInfo)\n  const [schoolInfo, setSchoolInfo] = useState(undefined as SchoolInfo)\n\n  useAsyncEffect(async () => {\n    onRefresh()\n\n    const backAction = () => {\n      navigation.goBack()\n      return true\n    }\n\n    const backHandler = BackHandler.addEventListener(\n      'hardwareBackPress',\n      backAction\n    )\n\n    return () => backHandler.remove()\n  }, [])\n\n  const [refreshing, setRefreshing] = useState(false)\n\n  const onRefresh = useCallback(async () => {\n    setRefreshing(true)\n    try {\n      setStudentInfo(await client.studentInfo())\n      setSchoolInfo(await client.schoolInfo())\n    } catch (err) {}\n    setRefreshing(false)\n  }, [])\n\n  if (!studentInfo || !schoolInfo) {\n    return (\n      <View style={{ flex: 1 }}>\n        <ActivityIndicator\n          color={Colors.secondary}\n          animating={true}\n          size=\"large\"\n          style={{\n            alignSelf: 'center',\n            flex: 1,\n            justifyContent: 'center'\n          }}\n        />\n      </View>\n    )\n  }\n\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      <View\n        style={{\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        }}\n      >\n        <Ionicons.Button\n          name=\"exit-outline\"\n          size={38}\n          underlayColor=\"none\"\n          activeOpacity={0.2}\n          backgroundColor=\"transparent\"\n          iconStyle={{\n            color: Colors.black,\n            alignSelf: 'flex-end'\n          }}\n          style={{\n            padding: 0,\n            marginLeft: 25\n          }}\n          onPress={() => {\n            navigation.navigate('Login')\n          }}\n        />\n        <Ionicons.Button\n          name=\"settings-outline\"\n          size={32}\n          underlayColor=\"none\"\n          activeOpacity={0.2}\n          backgroundColor=\"transparent\"\n          iconStyle={{\n            color: Colors.black,\n            margin: 0,\n            padding: 0\n          }}\n          style={{\n            padding: 3,\n            marginRight: 20\n          }}\n          onPress={() => {\n            navigation.navigate('Settings')\n          }}\n        />\n      </View>\n      <View style={styles.avatar_info_container}>\n        <Image\n          style={styles.avatar}\n          source={{\n            uri: `data:image/png;base64,${studentInfo.photo}`\n          }}\n        />\n        <View style={styles.info_container}>\n          <Text style={styles.name}>{studentInfo.student.name}</Text>\n          <View style={styles.details_container}>\n            <View style={styles.detaiL_container}>\n              <Text style={styles.detail_value}>\n                {studentInfo.grade + suffix(parseInt(studentInfo.grade))}\n              </Text>\n              <Text style={styles.detail_name}>Grade</Text>\n            </View>\n            <View style={styles.detaiL_container}>\n              <Text style={styles.detail_value}>\n                {studentInfo.birthDate.toLocaleDateString()}\n              </Text>\n              <Text style={styles.detail_name}>Birthdate</Text>\n            </View>\n          </View>\n        </View>\n      </View>\n      <ScrollView\n        refreshControl={\n          <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n        }\n        contentContainerStyle={styles.content_container}\n      >\n        <View style={styles.property_view}>\n          {studentInfo.id && (\n            <View style={styles.property_container}>\n              <AntDesign name=\"idcard\" size={22} color={Colors.black} />\n              <Text style={styles.property_text}>{studentInfo.id}</Text>\n            </View>\n          )}\n          {studentInfo.phone && (\n            <View style={styles.property_container}>\n              <Feather name=\"phone\" size={22} color={Colors.black} />\n              <Text style={styles.property_text}>{studentInfo.phone}</Text>\n            </View>\n          )}\n          {studentInfo.email && (\n            <View style={styles.property_container}>\n              <Feather name=\"mail\" size={22} color={Colors.black} />\n              <Text style={styles.property_text}>{studentInfo.email}</Text>\n            </View>\n          )}\n          {studentInfo.address && (\n            <View style={styles.property_container}>\n              <Feather name=\"home\" size={22} color={Colors.black} />\n              <Text style={styles.property_text}>{studentInfo.address}</Text>\n            </View>\n          )}\n          {studentInfo.currentSchool && (\n            <View style={styles.property_container}>\n              <FontAwesome name=\"building-o\" size={22} color={Colors.black} />\n              <Text style={styles.property_text}>\n                {studentInfo.currentSchool}\n              </Text>\n            </View>\n          )}\n          {schoolInfo.school.address && (\n            <View style={styles.property_container}>\n              <Feather name=\"map-pin\" size={22} color={Colors.black} />\n              <Text style={styles.property_text}>\n                {schoolInfo.school.address}\n              </Text>\n            </View>\n          )}\n          {studentInfo.homeRoom && (\n            <View style={styles.property_container}>\n              <FontAwesome\n                name=\"pencil-square-o\"\n                size={22}\n                color={Colors.black}\n              />\n              <Text style={styles.property_text}>\n                Homeroom: {studentInfo.homeRoom}\n              </Text>\n            </View>\n          )}\n          {studentInfo.counselor && (\n            <View style={styles.property_container}>\n              <Feather name=\"user\" size={22} color={Colors.black} />\n              <Text style={styles.property_text}>\n                Counselor: {studentInfo.counselor.name}\n              </Text>\n            </View>\n          )}\n          {schoolInfo.school.principal && (\n            <View style={styles.property_container}>\n              <MaterialCommunityIcons\n                name=\"crown-outline\"\n                size={22}\n                color={Colors.black}\n              />\n              <Text style={styles.property_text}>\n                Principal: {schoolInfo.school.principal.name}\n              </Text>\n            </View>\n          )}\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  name: {\n    fontSize: 30,\n    fontFamily: 'Montserrat_700Bold'\n  },\n  avatar: {\n    width: 120,\n    height: 120,\n    borderRadius: 120 / 2,\n    borderWidth: 1,\n    borderColor: Colors.black\n  },\n  avatar_info_container: {\n    marginHorizontal: 25,\n    marginBottom: 25,\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    marginTop: 5\n  },\n  info_container: {\n    justifyContent: 'center',\n    marginLeft: 20,\n    flex: 1\n  },\n  details_container: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: 10\n  },\n  detaiL_container: {\n    alignItems: 'center'\n  },\n  detail_value: {\n    fontSize: 20,\n    fontFamily: 'Montserrat_500Medium'\n  },\n  detail_name: {\n    fontFamily: 'Montserrat_300Light',\n    fontSize: 14\n  },\n  content_container: {\n    marginBottom: 7\n  },\n  property_view: {\n    padding: 10,\n    borderRadius: 15,\n    borderWidth: 1,\n    borderColor: Colors.secondary,\n    backgroundColor: Colors.off_white,\n    marginHorizontal: 25\n  },\n  property_container: {\n    flexDirection: 'row',\n    padding: 12\n  },\n  property_text: {\n    marginHorizontal: 8,\n    fontFamily: 'Inter_400Regular',\n    fontSize: 16,\n    color: Colors.onyx_gray\n  }\n})\n\nconst Stack = createStackNavigator()\n\nexport default function ProfileNav() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen\n        name=\"Profile\"\n        component={Profile}\n        options={{\n          headerShown: false\n        }}\n      />\n      <Stack.Screen name=\"Settings\" component={Settings} />\n    </Stack.Navigator>\n  )\n}\n","import React from 'react'\nimport {\n  StyleSheet,\n  View,\n  Text,\n  Platform,\n  TouchableOpacity,\n  StyleProp,\n  ViewStyle\n} from 'react-native'\nimport { Colors } from '../colors/Colors'\n\ntype Props = {\n  name: string\n  type: string\n  date: string\n  onPress: any\n  style?: StyleProp<ViewStyle>\n}\n\nconst Doc: React.FC<Props> = ({ name, type, date, onPress, style }) => {\n  return (\n    <TouchableOpacity\n      style={[styles.container, style]}\n      activeOpacity={0.2}\n      onPress={onPress}\n    >\n      <Text numberOfLines={1} style={styles.name}>\n        {name}\n      </Text>\n      <View style={styles.info_container}>\n        <Text numberOfLines={1} style={[styles.type, { flex: 1 }]}>\n          {type}\n        </Text>\n        <Text numberOfLines={1} style={styles.type}>\n          {date}\n        </Text>\n      </View>\n    </TouchableOpacity>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.off_white,\n    borderRadius: 10,\n    marginVertical: 3.5,\n    paddingHorizontal: 10,\n    paddingVertical: 7,\n    borderWidth: 1,\n    borderColor: Colors.secondary,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    flex: 1\n  },\n  info_container: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    flex: 1\n  },\n  name: {\n    color: Colors.black,\n    fontFamily: 'Montserrat_600SemiBold',\n    fontSize: 16,\n    lineHeight: 16 * 0.75,\n    textAlign: 'left',\n    ...Platform.select({\n      web: {\n        paddingBottom: 12 - 12 * 0.75\n      },\n      default: {\n        paddingTop: 16 - 16 * 0.75\n      }\n    })\n  },\n  type: {\n    color: Colors.black,\n    fontFamily: 'Inter_400Regular',\n    fontSize: 12,\n    lineHeight: 12 * 0.75,\n    ...Platform.select({\n      web: {\n        paddingBottom: 2,\n        marginTop: 5\n      },\n      default: {\n        paddingTop: 12 - 12 * 0.75,\n        marginTop: 4\n      }\n    })\n  }\n})\n\nexport default Doc\n","import React, { useContext, useEffect, useState } from 'react'\nimport { SafeAreaView } from 'react-native-safe-area-context'\nimport AppContext from '../contexts/AppContext'\nimport * as Sharing from 'expo-sharing'\nimport * as FileSystem from 'expo-file-system'\nimport {\n  FlatList,\n  Platform,\n  StyleSheet,\n  Text,\n  View,\n  RefreshControl,\n  BackHandler\n} from 'react-native'\nimport Document from 'studentvue/StudentVue/Document/Document'\nimport Doc from '../components/Document'\nimport { Colors } from '../colors/Colors'\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\n\nconst Documents = ({ navigation }) => {\n  const { client } = useContext(AppContext)\n  const [documents, setDocuments] = useState(undefined as Document[])\n\n  useEffect(() => {\n    onRefresh()\n\n    const backAction = () => {\n      navigation.goBack()\n      return true\n    }\n\n    const backHandler = BackHandler.addEventListener(\n      'hardwareBackPress',\n      backAction\n    )\n\n    return () => backHandler.remove()\n  }, [])\n\n  const base64toBlob = (base64: string, sliceSize = 512): Blob => {\n    const byteCharacters = window.atob(base64)\n    const byteArrays = []\n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n      const slice = byteCharacters.slice(offset, offset + sliceSize)\n      const byteNumbers = new Array(slice.length)\n      for (let i = 0; i < slice.length; i++) {\n        byteNumbers[i] = slice.charCodeAt(i)\n      }\n      byteArrays.push(new Uint8Array(byteNumbers))\n    }\n    return new Blob(byteArrays)\n  }\n\n  const downloadDocument = async (document: Document): Promise<void> => {\n    const file = (await document.get())[0]\n    const fileName =\n      document.comment.replace(/ /g, '_') +\n      file.file.name.substring(file.file.name.lastIndexOf('.'))\n    if (Platform.OS === 'web') {\n      require('file-saver').saveAs(base64toBlob(file.base64), fileName)\n    } else {\n      const filePath = FileSystem.documentDirectory + fileName\n      try {\n        await FileSystem.writeAsStringAsync(filePath, file.base64, {\n          encoding: 'base64'\n        })\n        await Sharing.shareAsync(filePath)\n      } catch (e) {}\n    }\n  }\n\n  const [refreshing, setRefreshing] = useState(false)\n\n  const onRefresh = async () => {\n    setRefreshing(true)\n    try {\n      setDocuments(await client.documents())\n    } catch (err) {}\n    setRefreshing(false)\n  }\n\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      <View style={styles.row_container}>\n        <View style={styles.title_container}>\n          <Text style={styles.title}>Documents</Text>\n        </View>\n        {Platform.OS === 'web' && (\n          <View style={styles.refresh_button_container}>\n            <FontAwesome.Button\n              name=\"refresh\"\n              backgroundColor=\"transparent\"\n              iconStyle={{\n                color: Colors.secondary\n              }}\n              underlayColor=\"none\"\n              activeOpacity={0.2}\n              size={24}\n              onPress={onRefresh}\n            ></FontAwesome.Button>\n          </View>\n        )}\n      </View>\n      <View style={{ height: '100%' }}>\n        {documents && (\n          <FlatList\n            data={documents}\n            renderItem={({ item }) => (\n              <Doc\n                name={(item as Document).comment}\n                type={(item as Document).file.type}\n                date={(item as Document).file.date.toLocaleDateString()}\n                onPress={() => {\n                  downloadDocument(item)\n                }}\n              ></Doc>\n            )}\n            keyExtractor={(item) => (item as Document).documentGu}\n            refreshControl={\n              <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n            }\n            contentContainerStyle={{\n              flexGrow: 1,\n              paddingHorizontal: 7,\n              paddingTop: 3.5,\n              ...Platform.select({\n                web: {\n                  paddingBottom: 50\n                },\n                default: {\n                  paddingBottom: 10\n                }\n              })\n            }}\n          ></FlatList>\n        )}\n      </View>\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  row_container: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  title_container: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    width: '75%'\n  },\n  title: {\n    fontFamily: 'Inter_800ExtraBold',\n    fontSize: 30,\n    marginHorizontal: 11\n  },\n  refresh_button_container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  }\n})\n\nexport default Documents\n","import { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\nimport Grades from '../screens/Grades'\nimport Profile from '../screens/Profile'\nimport React from 'react'\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack'\nimport { RootStackParamList } from '../types/RootStackParams'\nimport { useNavigation } from '@react-navigation/native'\nimport { Ionicons } from '@expo/vector-icons'\nimport { MaterialIcons } from '@expo/vector-icons'\nimport Documents from '../screens/Documents'\nimport { TouchableOpacity } from 'react-native'\nimport { Colors } from '../colors/Colors'\n\nconst Tab = createBottomTabNavigator()\ntype navScreenProp = NativeStackNavigationProp<RootStackParamList, 'Menu'>\n\nconst EmptyComponent = () => null\n\nconst App = () => {\n  const navigation = useNavigation<navScreenProp>()\n\n  return (\n    <Tab.Navigator\n      screenOptions={{\n        tabBarShowLabel: false,\n        tabBarStyle: {\n          borderTopWidth: 1,\n          overflow: 'hidden'\n        }\n      }}\n    >\n      <Tab.Screen\n        name=\"Grades\"\n        component={Grades}\n        options={{\n          headerShown: false,\n          tabBarIcon: (tabInfo) => {\n            return tabInfo.focused ? (\n              <MaterialIcons\n                name=\"insert-chart\"\n                size={30}\n                color={Colors.navy}\n              />\n            ) : (\n              <MaterialIcons\n                name=\"insert-chart-outlined\"\n                size={30}\n                color={Colors.secondary}\n              />\n            )\n          }\n        }}\n      />\n      <Tab.Screen\n        name=\"Documents\"\n        component={Documents}\n        options={{\n          headerShown: false,\n          tabBarIcon: (tabInfo) => {\n            return tabInfo.focused ? (\n              <Ionicons name=\"folder\" size={30} color={Colors.navy} />\n            ) : (\n              <Ionicons\n                name=\"folder-outline\"\n                size={30}\n                color={Colors.secondary}\n              />\n            )\n          }\n        }}\n      />\n      <Tab.Screen\n        name=\"ProfileNav\"\n        component={Profile}\n        options={{\n          headerShown: false,\n          tabBarIcon: (tabInfo) => {\n            return tabInfo.focused ? (\n              <Ionicons name=\"person\" size={30} color={Colors.navy} />\n            ) : (\n              <Ionicons\n                name=\"person-outline\"\n                size={30}\n                color={Colors.secondary}\n              />\n            )\n          }\n        }}\n      />\n    </Tab.Navigator>\n  )\n}\n\nexport default App\n","import { Colors } from '../colors/Colors'\n\nexport const LightTheme = {\n  dark: false,\n  colors: {\n    primary: Colors.onyx_gray,\n    background: Colors.white,\n    card: Colors.primary,\n    text: Colors.black,\n    border: Colors.secondary,\n    notification: Colors.accent\n  }\n}\n","import { Platform } from 'react-native'\nimport * as Notifications from 'expo-notifications'\n\nconst registerForPushNotificationsAsync = async () => {\n  Notifications.setNotificationHandler({\n    handleNotification: async () => ({\n      shouldShowAlert: true,\n      shouldPlaySound: true,\n      shouldSetBadge: true\n    })\n  })\n\n  if (Platform.OS === 'android') {\n    Notifications.setNotificationChannelAsync('default', {\n      name: 'default',\n      importance: Notifications.AndroidImportance.DEFAULT,\n      vibrationPattern: [0, 250, 250, 250],\n      lightColor: '#FF231F7C'\n    })\n  }\n\n  const { status: existingStatus } = await Notifications.getPermissionsAsync()\n  let finalStatus = existingStatus\n  if (existingStatus !== 'granted') {\n    const { status } = await Notifications.requestPermissionsAsync()\n    finalStatus = status\n  }\n  if (finalStatus !== 'granted') return\n\n  await scheduleGradeCheck()\n}\n\nconst scheduleGradeCheck = async () => {\n  const notifications = await Notifications.getAllScheduledNotificationsAsync()\n  if (\n    notifications.some(\n      (notification) => notification.identifier === 'GradeCheck'\n    )\n  )\n    return\n\n  const strings: string[] = require('./assets/config.json').gradeCheck\n  Notifications.scheduleNotificationAsync({\n    content: {\n      title: '📚 Check Your Grades!',\n      body: strings[Math.floor(Math.random() * strings.length)]\n    },\n    trigger: {\n      repeats: true,\n      hour: 7,\n      minute: 0\n    },\n    identifier: 'GradeCheck'\n  })\n}\n\nexport default registerForPushNotificationsAsync\n","import 'react-native-url-polyfill/auto'\nimport Login from './screens/Login'\nimport React, { useState } from 'react'\nimport BottomNavigation from './navigation/BottomNavigation'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\nimport { RootStackParamList } from './types/RootStackParams'\nimport AppContext from './contexts/AppContext'\nimport { LightTheme } from './theme/LightTheme'\nimport {\n  useFonts,\n  Inter_100Thin,\n  Inter_200ExtraLight,\n  Inter_300Light,\n  Inter_400Regular,\n  Inter_500Medium,\n  Inter_600SemiBold,\n  Inter_700Bold,\n  Inter_800ExtraBold,\n  Inter_900Black\n} from '@expo-google-fonts/inter'\nimport {\n  Montserrat_100Thin,\n  Montserrat_200ExtraLight,\n  Montserrat_300Light,\n  Montserrat_400Regular,\n  Montserrat_500Medium,\n  Montserrat_600SemiBold,\n  Montserrat_700Bold,\n  Montserrat_800ExtraBold,\n  Montserrat_900Black,\n  Montserrat_100Thin_Italic,\n  Montserrat_200ExtraLight_Italic,\n  Montserrat_300Light_Italic,\n  Montserrat_400Regular_Italic,\n  Montserrat_500Medium_Italic,\n  Montserrat_600SemiBold_Italic,\n  Montserrat_700Bold_Italic,\n  Montserrat_800ExtraBold_Italic,\n  Montserrat_900Black_Italic\n} from '@expo-google-fonts/montserrat'\nimport { RussoOne_400Regular } from '@expo-google-fonts/russo-one'\nimport { SafeAreaProvider } from 'react-native-safe-area-context'\nimport FlashMessage from 'react-native-flash-message'\nimport { User } from './interfaces/User'\nimport { ActivityIndicator, Platform, Text, View } from 'react-native'\nimport { Colors } from './colors/Colors'\nimport { Client } from 'studentvue'\nimport { Marks } from './interfaces/Gradebook'\nimport { CookiesProvider } from 'react-cookie'\nimport registerForPushNotificationsAsync from './Notification'\n\nif (Platform.OS === 'android' || Platform.OS === 'ios')\n  registerForPushNotificationsAsync()\n\nconst startGradeCheck = async () => {}\n\nconst Stack = createNativeStackNavigator<RootStackParamList>()\n\nconst App = () => {\n  const [client, setClient] = useState(undefined as Client)\n  const [marks, setMarks] = useState(undefined as Marks)\n  const [username, setUsername] = useState(undefined as string)\n  const [password, setPassword] = useState(undefined as string)\n  const user: User = {\n    username: username,\n    password: password,\n    client: client,\n    marks: marks,\n    setUsername,\n    setPassword,\n    setClient,\n    setMarks\n  }\n  let [fontsLoaded] = useFonts({\n    Inter_100Thin,\n    Inter_200ExtraLight,\n    Inter_300Light,\n    Inter_400Regular,\n    Inter_500Medium,\n    Inter_600SemiBold,\n    Inter_700Bold,\n    Inter_800ExtraBold,\n    Inter_900Black,\n    Montserrat_100Thin,\n    Montserrat_200ExtraLight,\n    Montserrat_300Light,\n    Montserrat_400Regular,\n    Montserrat_500Medium,\n    Montserrat_600SemiBold,\n    Montserrat_700Bold,\n    Montserrat_800ExtraBold,\n    Montserrat_900Black,\n    Montserrat_100Thin_Italic,\n    Montserrat_200ExtraLight_Italic,\n    Montserrat_300Light_Italic,\n    Montserrat_400Regular_Italic,\n    Montserrat_500Medium_Italic,\n    Montserrat_600SemiBold_Italic,\n    Montserrat_700Bold_Italic,\n    Montserrat_800ExtraBold_Italic,\n    Montserrat_900Black_Italic,\n    RussoOne_400Regular\n  })\n\n  if (!fontsLoaded) {\n    return (\n      <View\n        style={{\n          backgroundColor: Colors.primary,\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center'\n        }}\n      >\n        <Text style={{ marginBottom: 10 }}>Loading Schools...</Text>\n        <ActivityIndicator\n          color={Colors.secondary}\n          animating={true}\n          size=\"large\"\n        />\n      </View>\n    )\n  }\n\n  return (\n    <CookiesProvider>\n      <SafeAreaProvider>\n        <AppContext.Provider value={user}>\n          <NavigationContainer theme={LightTheme}>\n            <Stack.Navigator>\n              <Stack.Screen\n                name=\"Login\"\n                component={Login}\n                options={{\n                  headerShown: false\n                }}\n              />\n              <Stack.Screen\n                name=\"Menu\"\n                component={BottomNavigation}\n                options={{\n                  headerShown: false\n                }}\n              />\n            </Stack.Navigator>\n          </NavigationContainer>\n        </AppContext.Provider>\n      </SafeAreaProvider>\n      <FlashMessage position=\"top\" />\n    </CookiesProvider>\n  )\n}\n\nexport default App\n","module.exports = __webpack_public_path__ + \"static/media/mountainbackground.240775b1.png\";"],"sourceRoot":""}